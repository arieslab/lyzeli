{
  "1620317056098": {
    "titles": [
      "Carimbo de data/hora",
      "Check the \"I agree\" option if you have read and agree to the consent form.",
      "How long have you been working with PHP?",
      "How long have you been working with PHP software testing?",
      "Where do you work? (City/Country)",
      "What is your academic level?",
      "Regarding your profession, what title would you give yourself?",
      "Have you ever dealt with non-deterministic software testing of any kind?",
      "On a scale of 1 to 10, how problematic do you consider the occurrence of non-deterministic tests in software projects?",
      "Let us consider the following scenario: You have developed a test code, and you were successful at running it on your machine. However, when you or someone else ran the same test on another machine, it failed. What action do you usually take when face such a scenario?",
      "How often do non-deterministic tests appear in your workflow?",
      "How often do you employ non-deterministic tests correction practices in your workflow?",
      "How often do you employ non-deterministic tests prevention practices in your workflow?",
      "What precautions do you take to prevent the tests you write from being non-deterministic?",
      "Do you use (or be aware of) any routine for the execution of non-deterministic tests? If so, could you please detail it/them?",
      "Are you aware of any other name associated with \"tests with non-deterministic behavior\"? If so, could you please detail it/them?",
      "Do you use or know any tools to detect non-deterministic tests? Please detail it/them.",
      "Do you use or know any tools to prevent non-deterministic tests? Please detail it/them.",
      "What are the expected features for a tool dealing with (detection, prevention or correction) non-deterministic tests in software projects?",
      "Give your feedback on this study, or comment freely.",
      "What is your name?",
      "What is your email?"
    ],
    "rows": [
      [
        "08/04/2021 18:53:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "France",
        "Master's degree completed",
        "Software developer",
        "Rarely",
        "5",
        "Examine test environment",
        "Rarely",
        "Never",
        "Rarely",
        "Mocking / emulating external resources",
        "No",
        "Tests with external dependencies",
        "no",
        "no",
        "Checking for external dependencies, comparing with previous test runs",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 20:04:13",
        "I don't agree",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 22:31:59",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Banjarmasin, Indonesia",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "I usually check for the other person's project setup, eg: 1. Are they follow the setup instruction correctly? 2. Are they set the correct env variable values correctly?  Related to the tests it self, sometimes I face this issue because: 1. Some random function (eg. php faker) generates an invalid value (usually status_code numbers in integer). 2. Date time value definition related to calculation of holidays (rarely).  But for me, mostly this issue occurs related to the project setup documentation.",
        "Rarely",
        "Sometimes",
        "Always",
        "1. Using mock object and response for the tests related to external API calls 2. Using carbon instance and carbon mock object for date time definition on tests 3. Prevent using random function for particular model attributes, eg: user_role_id, status_code, which I will use for data filtering or where clause on the production code. 4. Update the project documentation if the changes will impact the tests.",
        "I don't really get this question.",
        "I was using term \"intermittent test failures\" for this kind of test issue.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "I don't expect any tool to deal with it, I think I don't need one. Because this issue rarely occurs on my projects. Mostly this issue happen because of my own careless",
        "TBH, I still don't get the point of this research, why do you need these answers, and what the goal of this research.  I just get that: 1. You want to know how often developers facing non-deterministic tests 2. You want to develop some tool to detect and prevent this test issue  But, still not sure about that :D  PS: I didn't understand 1 question (see my answers). If you can elaborate more about it (via email), I'd be happy to answer it.",
        "Nafies Luthfi",
        "nafiesl@gmail.com"
      ],
      [
        "09/04/2021 08:52:22",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Tokyo/Japan ",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "9",
        "Develop and share Docker environments",
        "Rarely",
        "Sometimes",
        "Always",
        "Mocking Disk IO or API calls",
        "None",
        "tests with side effects",
        "None",
        "None",
        "?",
        "",
        "mpyw",
        "mpyw628@gmail.com"
      ],
      [
        "09/04/2021 12:12:40",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "From home in Canada",
        "Graduation completed",
        "Software Developer and Tester",
        "Sometimes",
        "10",
        "Pair with another developer to determine differences in data, language settings or even operating system to debug why the test fails in one environment but not another ",
        "Often",
        "Often",
        "Often",
        "Understand what data is required for the test to pass and determine any “side effects” that might be occurring that could make the test non-deterministic ",
        "No",
        "No",
        "No",
        "No",
        "Clear error messages and the ability to be easily run in in a continuous integration environment like GitHub Actions",
        "",
        "Chris Hartjes",
        "chartjes@littlehart.net"
      ],
      [
        "10/04/2021 11:37:15",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Grand Rapids, USA",
        "Undergraduate",
        "Software developer",
        "Often",
        "4",
        "Try to have THAT developer debug why it's not working on their machine",
        "Often",
        "Sometimes",
        "Rarely",
        "Mocking inside a unit test. However, sometimes we purposely want to to test the entire, connected system and so we do NOT want to mock external things (like databases, APIs, etc)",
        "For tests that rely on an external API call, we try to use an API service that can be used by all devs (e.g. not something that requires a production API key). But mostly... if it makes sense, we would try to mock out these external services. But when we specifically choose to NOT mock them (because the test is most valuable when using the real API), we just \"live\" with the possibility that it may fail sometimes.",
        "We call them \"phantom failure\" tests - tests that fail sometimes but not other times. These are a PAIN. They are actually most commonly associated with Selenium-style tests where, for whatever reason, the interface responds more slowly sometimes, and so our tests fail because they have not waited long enough for something to load.",
        ".",
        ".",
        ".",
        "",
        "Ryan Weaver",
        "ryan@symfonycasts.com"
      ],
      [
        "10/04/2021 11:54:33",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "China",
        "Senior high school in progress",
        "Software developer",
        "Rarely",
        "6",
        "Ask for the environmental parameters of the other party, and reproduce these problems as much as possible. And ask him/her completely delete the software and then re-install it.",
        "Rarely",
        "Rarely",
        "Rarely",
        "None",
        "idk",
        "We usually call it metaphysics",
        "I lack experience in this field",
        "I lack experience in this field",
        "I lack experience in this field",
        "",
        "MlgmXyysd",
        "mlgmxyysd@meowcat.org"
      ],
      [
        "10/04/2021 14:53:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Czech Republic",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "File an issue to fix it, to make the test deterministic",
        "Rarely",
        "Rarely",
        "Often",
        "Mocking objects and/or responses",
        "No",
        "Maybe \"tests with external dependencies\"",
        "No",
        "Mock libraries",
        "Don't know",
        "",
        "",
        ""
      ],
      [
        "10/04/2021 15:29:22",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Kolkata/India",
        "Graduation completed",
        "Software developer",
        "Never",
        "1",
        "Use docker",
        "Never",
        "Never",
        "Never",
        "Nothing",
        "No",
        "Sounds like random probability",
        "No",
        "No",
        "No",
        "Would be good to give a code example of non deterministic test",
        "Anubhav",
        "xprilion@gmail.com"
      ],
      [
        "10/04/2021 18:34:14",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "New York City/USA",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Check the testing environment",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock third-party dependencies",
        "Make sure that dependencies are injectable, then replace the dependencies with mocked objects/results",
        "Non-atomic tests, tests with external dependencies",
        "Nope",
        "Nope",
        "This tool would be able to identify dependencies that interface with third-party software, like curl, cache engines, database engines, etc...",
        "",
        "Hypolite Petovan",
        "hypolite@mrpetovan.com"
      ],
      [
        "10/04/2021 18:59:11",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Frederick, Maryland, USA",
        "Some college",
        "Software developer",
        "Always",
        "9",
        "Confirm that both systems have the same things installed and investigate further",
        "Rarely",
        "Often",
        "Sometimes",
        "Manual review of the tests",
        "Not really",
        "Heisenbugs ;-)",
        "No",
        "No",
        "I don't know",
        "",
        "",
        ""
      ],
      [
        "11/04/2021 00:13:03",
        "I agree",
        "Up to 1 year",
        "Up to 1 year",
        "China",
        "Graduation completed",
        "Software developer",
        "Never",
        "2",
        "Check their PHP version, etc",
        "Never",
        "Never",
        "Never",
        "I never write tests",
        "Nope.",
        "No",
        "No.",
        "NO",
        "I don't know",
        "",
        "Anonymous",
        ""
      ],
      [
        "11/04/2021 07:12:52",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Muncih, Germany",
        "Master's degree completed",
        "IT Consultant",
        "Sometimes",
        "2",
        "Find out why the test fails on other machine.",
        "Rarely",
        "Never",
        "Always",
        "Decouple.",
        "Replace randomness and actual time by pre-defined values that get injected; decouple tests from external resources.",
        "Flaky tests",
        "PHPUnit allows repeated test execution.",
        "For testing external APIs, I hand-code an \"is available\" check. When external resource is not available, I skip the test.",
        "Magically fix all problems? ,-)",
        "I found the term \"non-deterministic tests\" a bit misleading first, because I thought it would refer to testing code with non-deterministic behaviour. The way it was presented in the video, it \"just\" refers to external resources that are not available. Or at least, this is my assumption at this point.",
        "Stefan Priebsch",
        "stefan@priebsch.de"
      ],
      [
        "11/04/2021 09:43:45",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Berlin",
        "Graduation completed",
        "Software engineer",
        "Often",
        "7",
        "try to run all tests on CI, and consider that as main source of truth",
        "Sometimes",
        "Sometimes",
        "Often",
        "avoid network access, avoid random data, avoid waiting for stuff... whatever is not in your control should be avoided",
        "no",
        "no",
        "no",
        "no",
        "locating code that depends on possible not deterministic features (network, time, randomness...)",
        "cool",
        "Asmir",
        "goetas@gmail.com"
      ],
      [
        "12/04/2021 00:22:12",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Hong Kong",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "1",
        "Relicate failed enviroment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Enviromental tests to ensure matching enviroment before running test",
        "Library check etc.",
        "no",
        "no",
        "no",
        "n/a",
        "Probably use a text description for non-deterministic tests, rather than video.",
        "Alan Knowles",
        "alan@roojs.com"
      ],
      [
        "12/04/2021 00:25:33",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Melbourne/Australia",
        "Dropout",
        "DevOps Engineer",
        "Sometimes",
        "5",
        "Teach the other user about Docker, and implement it as a CI/CD pipeline so it always has the same outcome.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Use Docker for coding environments, and use a CI/CD pipeline from my Git repo.",
        "Nope",
        "Nope",
        "Nope, I just do it manually",
        "I use Docker",
        "NA",
        "It isn't really something I've had to worry about, or applies to any of the projects I've worked with.",
        "Dean Lofts",
        "dean@deanlofts.xyz"
      ],
      [
        "12/04/2021 17:29:12",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Columbus, OH, USA",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "Look for potential causes (environment configuration, race conditions, etc.) that may be causing the test to behave differently, then refactor the test method to compensate for or eliminate these differences.",
        "Sometimes",
        "Often",
        "Often",
        "Be explicit with the arrangement of the tests and leverage test doubles to ensure that processes outside of the System Under Test (SUT) are not polluting the test.",
        "If tests fail intermittently when run either locally or in a CI pipeline, determine what is causing the test to fail and, if it's from outside causes, use test doubles or other approaches to ensure consistent results.",
        "Nothing formal, but \"there's a race condition in this test\" gets thrown around a lot.",
        "PHPStan and Psalm can be helpful in catching logical errors, but are not specific to non-deterministic tests. I suppose mutation testing (e.g. InfectionPHP) could also be effective, but I have not explored this.",
        "PHPStan and Psalm (see previous).",
        "Warning when items outside of the scope of the SUT are being evaluated, and recommend approaches to avoid these from being a factor.",
        "",
        "Steve Grunwell",
        "steve@stevegrunwell.com"
      ],
      [
        "14/04/2021 23:15:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Nashville, TN, US",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "10",
        "I try to isolate the variable part of the code that causes the failure and use a mock to ensure that the test is deterministic. If the code should run successfully during a failure state, then I create a mock that simulates failure to ensure the failure state in a deterministic way. One of the best ways to achieve this is to use dependency injection.",
        "Rarely",
        "Always",
        "Often",
        "I make extensive use of dependency injection and use mocks to mock as much as possible, except for the lines of code I am testing.",
        "I do not make use of it currently, but if I needed to test non-deterministic code, I might use the PHP library \"Infection\" to facilitate mutation testing.",
        "Mutation testing",
        "I have used PHP-Mock, which allows you to test non-deterministic PHP functions, such as time() and random_int().",
        "I regularly use PHPStan and Psalm to statically analyze my code for type correctness. This does not fully prevent non-deterministic tests, but it can help.",
        "Analyze code and identify functions and methods that might return values that later code paths may not be able to process.",
        "",
        "Ben Ramsey",
        "ben@benramsey.com"
      ],
      [
        "18/04/2021 23:51:40",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "5",
        "Extension checks, re-check composer packages and other dependancies, validate ini's are matching and PHP versions are equal. ",
        "Rarely",
        "Sometimes",
        "Sometimes",
        "Not in tests; however in CI/CD",
        "No",
        "N/a",
        "N/a",
        "N/a",
        "N/a",
        "",
        "Rama",
        "me@rexsdev.com"
      ],
      [
        "18/04/2021 23:52:46",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Montreal/Canada",
        "Master's degree completed",
        "Backend Developer / DevOps",
        "Rarely",
        "10",
        "Try to reproduce the error on the working machine",
        "Rarely",
        "Never",
        "Never",
        "I always isolate the thing I want to try and remove any link to external services/tools",
        "no",
        "no",
        "PHPUnit infection (Mutation testing)",
        "No",
        "Output the list of potential issues and a quick explanation of what could be the issue for the specific test",
        "",
        "",
        ""
      ],
      [
        "18/04/2021 23:58:13",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Often",
        "7",
        "1. Rule out any environment misconfiguration 2. Evaluate if the use of a non-determisitic test is correct/necessary 3. Rewrite the test such that it passes on both machines",
        "Often",
        "Often",
        "Rarely",
        "- CI - Deterministic thinking",
        "Monitoring them actively",
        "Dynamic tests",
        "No, just manual code review",
        "No",
        "Encourage the use of deterministic tests wherever possible (provide guidance on how to achieve this), bring attention to unintentionally non-deterministic tests",
        "Best of luck with your research!",
        "",
        ""
      ],
      [
        "19/04/2021 00:57:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Ottawa, Canada",
        "Master's degree in progress",
        "CTO",
        "Rarely",
        "10",
        "NDTs are useless.  They have to be solved rapidly before they ruin the whole test suite.",
        "Rarely",
        "Always",
        "Always",
        "Writing specs that respect LoD go a long way.  Isolation is important.  Fixture resets to prevent setup pollution.  After this, you're just eliminating randomness to remove NDT deps.",
        "This question doesn't make sense.",
        "No -- but funny.  At work, we call them GTs.  Garbage tests.  NDTs have no place in a proper test suite.",
        "We use Bamboo CI",
        "You can apply Mutators to test your test suite itself.",
        "I don't really need tools here.  Bamboo CI logs history, we parse for tests that lack rigor, and slate them for repair or replacement.  Tests span from phpunit, to phpspec, to Behat tests (the tests that most often cause these problems, are Behat tests)",
        "Honest feedback, it read as though you were crafting a commercial offering under the guise of an academic survey.",
        "",
        ""
      ],
      [
        "19/04/2021 03:37:01",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Ottawa, Ontario, Canada",
        "Graduation completed",
        "Web developer",
        "Never",
        "10",
        "There could be many external factors effecting the test of such nature. However I use containerized development environment such as Docker, which can element many external factors that can cause different outcome for same code. ",
        "Rarely",
        "Rarely",
        "Often",
        "Making sure the platform stays the same across all the environment and for all developers, Docker helps to implement it.",
        "There can't be silver bullet for all types of non-deterministic test issue. What I would like to see if the test depends on external factors such as host OS settings, hardware requirements or third party API, test result mention that specific dependent issue in fail message. ",
        "Not aware of that ",
        "Not that I know of",
        "Not that I know of",
        "Flags a warning message about external dependency ",
        "",
        "Dushyant Patel",
        "msg2dushyant@gmail.com"
      ],
      [
        "19/04/2021 06:44:05",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Regina, SK, Canada",
        "No secondary education",
        "Software developer",
        "Rarely",
        "8",
        "diagnose environmental differences",
        "Rarely",
        "Rarely",
        "Rarely",
        "none specifically, just internalized knowledge that explicitly non-deterministic test cases (like connecting to an API) are moreso testing the API connection than the validity of your code.",
        "no",
        "no",
        "no",
        "no",
        "dunno",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 07:37:32",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Mississauga, Ontario, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "1 - Check to see if they have all of the changes 2 - Investigate the output and determine the root cause 3 - Fix the root cause of the discrepancy",
        "Rarely",
        "Sometimes",
        "Always",
        "I push the api calls as far from my main code as possible, and then use mocks to avoid it in the non-specific tests.",
        "No",
        "no",
        "no",
        "no",
        "The ability to break dependencies/point them out.",
        "",
        "Andrew",
        "awjudd@gmail.com"
      ],
      [
        "19/04/2021 08:22:04",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Toronto/Canada",
        "Graduation completed",
        "Software Architect",
        "Sometimes",
        "10",
        "Collect the logs, and analyze the failing code visually to identify system/state dependent variance.",
        "Rarely",
        "Sometimes",
        "Often",
        "Granular isolation",
        "We tend to avoid non-deterministic test cases, but mocking the variable components. However, when not possible, we carefully generate the software state to make the outcomes predictable.",
        "state-volatile tests",
        "No",
        "No",
        "Detect system/state specific dependencies.",
        "Intriguing study. Why did you focus on PHP?",
        "Seva",
        "Seva.lapsha@gmail.com"
      ],
      [
        "19/04/2021 09:33:41",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Montreal, Canada",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Usually attach a debugger to see if I can find the point where it diverges, or add logging if it’s a race condition ",
        "Rarely",
        "Always",
        "Always",
        "Reproducible test fixtures and environments, special care around tests related to time",
        "I don’t understand the question",
        "Flaky tests",
        "No",
        "No",
        "Run multiple tests multiple times to detect non deterministic tests. Maybe linting or static analysis to detect common scenarios that can create this situation",
        "",
        "Samuel Schmidt",
        "samuel@dersam.net"
      ],
      [
        "19/04/2021 10:26:27",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Chicago, IL",
        "HS",
        "Software developer",
        "Sometimes",
        "10",
        "Examine possible causes like fixture data being manipulated in other tests & creating implicit dependencies between test cases",
        "Rarely",
        "Never",
        "Often",
        "best practices guide for devs",
        "No",
        "cursed tests",
        "No",
        "No",
        "A warning that highlights the problematic test(s) & states why they're non-deterministic would be great!",
        "",
        "Nick Evans",
        "nick.evans@northwestern.edu"
      ],
      [
        "19/04/2021 11:43:09",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Lancaster, OH, USA",
        "No higher education",
        "DevOps",
        "Rarely",
        "10",
        "attempting to reproduce the problem in my environment; then ask the other user for the output to determine what might be wrong; i can usually determine the problem that way",
        "Rarely",
        "Never",
        "Never",
        "none",
        "no",
        "\"tests with external uncontrolled dependencies\" would be a subset",
        "no",
        "no",
        "no idea",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 13:57:26",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Resistencia/Argentina",
        "",
        "Software developer",
        "Never",
        "1",
        "1. Check if the other part have replicate the enviroment. 2. Check the imputs. 3. Replicate the other part actions.",
        "Never",
        "Never",
        "Never",
        "I Do create atomic tests for my code. Really small tests. ",
        "No",
        "No",
        "No",
        "No",
        "Don't know",
        "https://martinfowler.com/articles/nonDeterminism.html",
        "Ariel",
        "arieltoledo@gmail.com"
      ],
      [
        "19/04/2021 14:09:06",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "10",
        "I ask for more details, like the other person's enviroment.",
        "Rarely",
        "Rarely",
        "Always",
        "I set a seed for random outputs.",
        "Not besides setting a seed for random functions.",
        "No",
        "NO",
        "No",
        "No",
        "Wish you best of luck!",
        "Patricio Tarantino",
        "patriciotarantino@gmail.com"
      ],
      [
        "19/04/2021 15:23:29",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "7",
        "check infrastructure dependencies and debug the test in the failed environment",
        "Sometimes",
        "Often",
        "Often",
        "trying to mock most of infra dependencies",
        "No",
        "No",
        "No",
        "No",
        "detect posible non-deterministic tests",
        "",
        "Piero Recchia",
        "piero.recchia@gmail.com"
      ],
      [
        "19/04/2021 15:26:28",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "San Francisco, Córdoba, Argentina",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "2",
        "I would consider environment differences and try to reproduce the error using the same dataset, or catching the non-deterministic factor by doing an static code review over that test method.",
        "Sometimes",
        "Often",
        "Always",
        "1. Deactivate curl primitives in order to prevent unintentional connections to third party systems. 2. Wrap undeterministic factors generally expressed as PHP primitives like rand() calls, new DateTime('now'), etc. Wrapping those behaviours into mockable dependencies.",
        "No, I don't use any automatic routine.",
        "xUnit Patterns define this anti-pattern as \"Erratic tests\"",
        "No",
        "No",
        "Detection and prevention I think",
        "",
        "Carlos Frutos",
        "carlos@rooftop.dev"
      ],
      [
        "19/04/2021 17:51:23",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Ciudad Autónoma  de Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "5",
        "Trying to reproduce the same steps on my computer to generate the error.",
        "Sometimes",
        "Often",
        "Sometimes",
        "I try to generate a file with different options. For example, if I have to communicate to an API, what I am trying to generate is possibly a JSON with which the application should return.",
        "-",
        "-",
        "-",
        "-",
        "Trying to find as many errors as possible, although if it is not mastered perfectly, it could become a big problem",
        "",
        "Martín",
        "Dell'Oro"
      ],
      [
        "19/04/2021 18:10:26",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "rio cuarto",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "check the code with partner",
        "Sometimes",
        "Never",
        "Never",
        "mock apis",
        "no",
        "no",
        "no",
        "no",
        "detection",
        "",
        "cristian",
        "cristianaalvarez@gmail.com"
      ],
      [
        "19/04/2021 18:11:54",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Argentina - Buenos Aires",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "Maybe different OS, or different version of php, maybe a failure of resources of the OS",
        "Rarely",
        "Rarely",
        "Rarely",
        "IDK",
        "No",
        "No",
        "No",
        "No",
        "IDK",
        "I tried to help, but i'm not very familiar with tests, sorry ! i try to do all my best.",
        "Sandro",
        "sdezerio@gmail.com"
      ],
      [
        "19/04/2021 20:26:58",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Los Angeles, USA",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "try to reproduce the issue locally",
        "Sometimes",
        "Rarely",
        "Rarely",
        "Mocking response, Double objects, avoid calling externals APIs except when there's no options",
        "No",
        "No, is the first time I saw they have a name",
        "No.",
        "No.",
        "Detect them before they run, more accurate message on detection (specially within CI tools)",
        "It sounds interesting",
        "",
        ""
      ],
      [
        "19/04/2021 22:50:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buckley, WA, United States",
        "Undergraduate",
        "Software developer",
        "Never",
        "10",
        "Make certain that the machine environments are as similar as possible, run tests in CI, and check the test itself for logic flaws",
        "Never",
        "Never",
        "Always",
        "I write extremely granular tests, often including a test intended to falsify the previous test if possible",
        "No",
        "Broken",
        "Writing tests which run through multiple possibilities",
        "Writing tests granularly, writing palindromic tests",
        "Start up a vm, run tests, export results, and repeat for many variant setups.",
        "I don’t really have much to say",
        "Casey Parker",
        "parker.casey@pm.me"
      ],
      [
        "20/04/2021 11:08:34",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "5",
        "Check dependencies, libraries and programming language versions between both machines.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Try to evaluate as much as try/catch scenarios I can.",
        "Try to evaluate as much as try/catch scenarios I can.",
        "No.",
        "No.",
        "No.",
        "Detecting non-deterministc scenarios on developed software.",
        "This is a very interesting study that made me to research on computing theory I have studied some years ago to have a deeper understanding for this survey.",
        "Guillermo Ramiro Maquieira",
        "guimaq@gmail.com"
      ],
      [
        "20/04/2021 12:21:32",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Argentina",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "6",
        "I double-check:  - If deployment or installation of the project was done properly in the other machine.  - If the codebase is correct (for example, make sure the git branch is the correct one and no other code changes were made that could affect the results).  - If the configuration of the project is correct (for example, environment variables that could alter the application behavior).  - If external required resources are available in the same way on the second machine (APIs, databases, any connectivity needed, permissions required, IPs allow-listed, etc).  - If the test could be affected for having different hardware resources (for example, requiring more time to not timeout in a slower machine, requiring more available RAM, etc).  - The versions of the running environment to see if that could affect the compatibility (PHP version running, OS type and version, dependencies versions).   Finally I would check the steps of the failing test and probably comment/remove temporarily some of them to find out what's exactly the problem.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "I use equivalent but \"mocked-up\" interfaces to replace the resources that could not be available.  For example, I create classes/code with the same interface that the code used to manage real APIs or databases. The use that in the tests to make them independent from the connectivity or other resources required.  In other cases where that's not possible, I run some code as a part of the test battery that checks for the availability of those resources that could not be available. Then, the test itself could be classified as \"skipped\", instead of mark it as failed.  And some other times (usually when there's no enough time for a better solution) I simply try to make sure the requirements and external conditions of the environment where the tests are ran will be the best. For example having a stable environment for this purpose.",
        "I don't.",
        "Actually no, but I know that frequently the \"integration tests\" are a sub-set of the non-deterministic ones.",
        "I don't.",
        "I don't.",
        "From the top of my ming, for detection and prevention I can think in these ideas:  List the points (test steps, code lines, etc) that could potentially have different results with the same entries and code. Similar to what code linter tools do. For example show recommendations or warnings when the tests use: - Random generated information that could make the test behave differently. - Date-time based tests that could fail depending on when are they ran. - Access to external resources such as the network (using an API for example). etc.  For prevention I'd also think in a library with some util methods to verify the availability of external required resources. For example, a library with methods like \"checkInternetConnectivity\", \"checkAvailableRAM\", etc. So the test developer can use them easily and the tool can suggest to use them when needed.  I also think in having a tool where resources could be registered (for example, an API or database) in a global part of the testing code, and the on each testing scenario the developer could declare with annotations or however those resources that the scenario requires.  For correction:  Provide an OOTB mocked-up for those interfaces that are usually used to access the network. For example a replacement for the class SoapClient used to request SOAP services. Then encourage the developer to implement those methods/requests done in the tests, but with mocked data.  I'd also expect the tool/s to have the possibility to run these verifications without running the tests.  ",
        "Even when I'm not specialized in testing at all, this study resulted very interesting to me because I have seen scenarios with the non-deterministic problem, and also why not to tell, because I'm generally interested in the topics related to software engineering.  I also think that this study could be extended to be more general and not specific for the PHP language, except of course for the existing tools questions.  I hope my answers help, and even when I'm not developing in PHP for the time being, I'd also like to hear about the results.",
        "Daniel Duarte",
        "danieldd.ar@gmail.com"
      ],
      [
        "20/04/2021 16:25:06",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Richmond, Canada",
        "High school student",
        "Student",
        "Never",
        "5",
        "I check for differences in environments. It would depend on the error thrown. ",
        "Sometimes",
        "Rarely",
        "Rarely",
        "None",
        "I use CI/CD such as Travis for testing Python. ",
        "No",
        "CI/CD tools such as Travis perform tests on multiple environments. ",
        "Linters often detect errors ahead of time. ",
        "Detection, prevention and correction",
        "I'm not too familiar with what a non deterministic test is so I Googled it. ",
        "Kevin",
        "Kevinlu1248@gmail.com "
      ],
      [
        "20/04/2021 19:01:02",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Portland, OR USA",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "2",
        "Check the environment and the build to see what is different.",
        "Rarely",
        "Rarely",
        "Often",
        "Mock external dependencies. Segregate tests with external dependencies.",
        "Check that dependency is available, then only run tests if dependency is available.",
        "Integration tests.",
        "no",
        "no",
        "Configure with a list of dependencies, check dependencies and flags tests if dependencies are unavailable.",
        "In general non-deterministic tests are to be avoided.",
        "Dan Revel",
        "dan@nopolabs.com"
      ],
      [
        "21/04/2021 02:29:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Montreal, Canada",
        "Undergraduate",
        "Software engineer",
        "Rarely",
        "10",
        "Try to see if there was a difference in our local environments, easy fix is usually docker",
        "Rarely",
        "Rarely",
        "Rarely",
        "I don’t come across them often and so i don’t take many precautions against them",
        "None",
        "None",
        "None",
        "None",
        "N/A",
        "",
        "",
        ""
      ],
      [
        "21/04/2021 07:37:14",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "ShengZheng/China",
        "Master's degree completed",
        "Software developer",
        "Sometimes",
        "2",
        "Check whether there are differences in the environment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Keep the environment unified",
        "no",
        "no",
        "no",
        "no",
        "no",
        "no",
        "YeZi",
        "875307054@qq.com"
      ],
      [
        "21/04/2021 11:26:15",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Buenos Aires / Argentina",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "Asking under what conditions de test was run",
        "Rarely",
        "Often",
        "Often",
        "always test with and without conection to apis and internet",
        "No",
        "No",
        "No",
        "No",
        "Tips for scenarios that the developer does not always consider",
        "",
        "Junior Ayala",
        "elessar303@gmail.com"
      ],
      [
        "21/04/2021 13:06:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Toronto/Canada",
        "Graduation completed",
        "Team Lead",
        "Sometimes",
        "8",
        "Check the machine's code version,  then the development setup,  the required external services, including VPN",
        "Sometimes",
        "Never",
        "Rarely",
        "Document the exceptions in KBs",
        "No",
        "No",
        "No",
        "No",
        "Standardized virtual dev environment, system check before starting the testing batch",
        "Congratulations for your initiative. ",
        "Humberto Ribeiro de Souza",
        "humbertosouza@outlook.com"
      ],
      [
        "23/04/2021 20:35:59",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Squamish, BC Canada",
        "Master's degree completed",
        "Secondary Teacher and k-12 sector technologist",
        "Never",
        "7",
        "I do not do this.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Good logic? Screening inputs for possibility",
        "nope",
        "nope",
        "no",
        "no",
        "Second order tests that asses output based on known-result input.",
        "",
        "Evan Sharp",
        "ego@evansharp.ca"
      ],
      [
        "24/04/2021 10:51:31",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Montreal/Canada",
        "Master's degree completed",
        "architect",
        "Always",
        "8",
        "isolate the test to determine what makes is a potentially weak test",
        "Often",
        "Often",
        "Often",
        "better understand the dependencies and properly locate the tests that have external dependencies. When possible use contract-based testing and leave those integration tests to a very minimum",
        "nothing other than the one reported above",
        "fragile tests",
        "pact.io",
        "no",
        "help me reduce the dependency on such tests or at least better identify those",
        "can you share the results of the survey?",
        "Mario Bittencourt",
        "mbneto@gmail.com"
      ],
      [
        "25/04/2021 05:34:54",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "China",
        "PhD completed",
        "Software developer",
        "Often",
        "8",
        "I ensure the environment is exactly the same as the one in my machine. Create the same environment, the same condition and run the test again. This include making sure that network connection is activated. When the environments match, and the tests still failed. I looked at external dependencies in the test code.",
        "Often",
        "Sometimes",
        "Always",
        "Avoid any non-deterministic call in the test code. That is, we must avoid calls to some function (such as network) or randomess in the test code. Except if random is part of the code being tested.",
        "I don't have any sequence of steps to execute",
        "No aware",
        "Non",
        "Non",
        "N/A",
        "One can override native PHP function that create randomness and avoid non-deterministic test",
        "",
        ""
      ],
      [
        "25/04/2021 12:25:29",
        "I agree",
        "7 - 10 years",
        "Up to 1 year",
        "Santa Fe, Santa Fe, Argentina",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "7",
        "I'll do docker container to have the same test environment and try not to rely on external sources",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock external services if I cannot reach them",
        "Api services calls, such as maps, firebase or database related",
        "I don't think so",
        "Not yet",
        "Waiting to fail xD",
        "Harcoded links specially",
        "I'm really looking forward to know about the results of this research! :)",
        "David Maximiliano Sosa",
        "maxi3390@gmail.com"
      ],
      [
        "25/04/2021 13:33:10",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Virginia Beach, USA",
        "High School",
        "Software engineer",
        "Rarely",
        "3",
        "debug with error logging",
        "Rarely",
        "Never",
        "Rarely",
        "extra logging for possible failures",
        "no",
        "no",
        "no",
        "no",
        "identify methods that could have non deterministic results ",
        "",
        "Zak Rabe",
        "zakrabe@gmail.com"
      ],
      [
        "25/04/2021 14:18:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Matawan, New Jersey, United States",
        "Undergraduate",
        "Platform Engineer",
        "Sometimes",
        "8",
        "Find out what conditions were different on the other machine. Whether it was a configuration issue, or an environment issue, or an overall logic issue.",
        "Rarely",
        "Rarely",
        "Rarely",
        "When writing the tests I make sure if I change something in the particular bit of code it tests. The test will completely fail. I do this by actually changing the code to make the test fail.",
        "Do not have one, at this point in time",
        "I am not",
        "We do not use any tool that tests for these things. A code review should catch these.",
        "We do not use any tool that prevents these things. Aside from code reviews.",
        "When the tests are written they should have a through code review.",
        "Seemed like there were a lot of the same questions. Aside from that seemed good.",
        "Vinnie Marone",
        "vinnie.marone35@gmail.com"
      ],
      [
        "25/04/2021 15:55:58",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Salt Lake City UT USA",
        "Master's degree completed",
        "Software engineer",
        "Never",
        "10",
        "Inquire about difference in environment",
        "Sometimes",
        "Never",
        "Never",
        "Run in a controlled environment",
        "No",
        "No",
        "No",
        "Not explicitly, just control the test environment",
        "Sufficient specification of test environment",
        "Non-determinism is usually a function of the environment not the software",
        "",
        ""
      ],
      [
        "25/04/2021 16:15:04",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Memphis, Tennessee, US",
        "PhD completed",
        "Software Consultant",
        "Sometimes",
        "5",
        "Check for differences in machine configuration",
        "Often",
        "Often",
        "Often",
        "Full preparation of host machine to specification",
        "Varies",
        "system configuration errors",
        "all by hand",
        "all by hand",
        "You need to be alert",
        "",
        "Greg Blumenthal",
        "greg@gmbs-consulting.com"
      ],
      [
        "26/04/2021 06:24:34",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Finland & France",
        "Graduation completed",
        "Designer Developer",
        "Never",
        "5",
        "Start digging apache/php settings",
        "Never",
        "Rarely",
        "Rarely",
        "None",
        "None",
        "None",
        "None",
        "None",
        "Good question! Usually people want code to be fixed automatically.",
        "This was easy! Probably knew a little too little of the subject.",
        "Jonatan Eriksson",
        "jonatan@tsto.org"
      ],
      [
        "26/04/2021 06:39:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Guangdong China",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "3",
        "check out if there is any evironment difference between two machine",
        "Sometimes",
        "Often",
        "Rarely",
        "it is time-comsuming",
        "environment differ",
        "no",
        "no",
        "no",
        "run fast and easy to use",
        "this study make me notice the non-deterministic test area",
        "Gary",
        "nutto.pan@gmail.com"
      ],
      [
        "26/04/2021 13:07:21",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Pittsfield MA",
        "Master's degree completed",
        "Software developer",
        "Never",
        "5",
        "Give up and test the component manually. (I'm being honest. This is not ideal, but due to limited budgets on our client projects, this is usually what happens)",
        "Rarely",
        "Never",
        "Never",
        "n/a",
        "no",
        "no",
        "no",
        "no",
        "n/a",
        "not really applicable to our normal workflow... sorry ",
        "Peter Wise",
        "peter@squarecandy.net"
      ],
      [
        "27/04/2021 04:21:13",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Mainz/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "5",
        "Verify the test environment. We use docker to have a very similar environment in a team. Also the configuration is managed.",
        "Sometimes",
        "Rarely",
        "Never",
        "We try to mocks for external interfaces. The used test framework provides functions to do that.",
        "It depends about we are talking here. If it's a unit test, we try to prevent that behavior. For functional tests it's ok to call a real interface (with all the down sites).",
        "Functional testing. Maybe acceptance testing (depending on the definition).",
        "no",
        "no",
        "At least a static code check to find calls to external resources. Maybe a plugin for PhpStorm.",
        "Interesting. Never thought so much about non-deterministic tests.",
        "Christian Münch",
        "christian@muench-worms.de"
      ],
      [
        "27/04/2021 04:54:33",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Duesseldorf/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "Compare machines and execution environment (php version, extensions, etc), code state (modifications, revision). If that does not solve it, run a step-debugger or do poor-mans-debugging with var_dump.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Run tests in isolated environments, like docker, with restrictions on resources like network or disk.",
        "No.",
        "No.",
        "Generally not, but linters can be used to detect the usage of ext/curl and other subjects.",
        "PECL/runkit to mock php internals.",
        "* Detect: output a machine readable format for CI integration * Prevent: If configured, let tests fail for having non-deterministic side-effects * Correction: No tool should correct this on its own. It may suggest alternatives, though",
        "All the best and good luck!",
        "",
        ""
      ],
      [
        "27/04/2021 04:57:11",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Berlin",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "5",
        "Debug on that other machine. Reproduce. Fix.",
        "Never",
        "Never",
        "Never",
        "None, I hardly have that case.",
        "No.",
        "No.",
        "No.",
        "No.",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:29:10",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Lübeck/Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "9",
        "Check the versions of anything involved. Check again locally. Check for any changes not (correctly) committed to the code. Debug the failing test.",
        "Rarely",
        "Sometimes",
        "Often",
        "Most of the time I just make sure the test is not relying on external factors (time passing, network being available, randomness involved, …)",
        "No…",
        "🤷‍♂️",
        "No",
        "No",
        "🤷‍♂️",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:58:44",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Münster/Germany",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "8",
        "Checking the dependencies (e.g. installed libraries, composer packages, software versions).",
        "Rarely",
        "Never",
        "Never",
        "Common error handling (e.g. try-catch around the external request).",
        "/",
        "/",
        "/",
        "/",
        "/",
        "",
        "Kai Neuwerth",
        "kai@neuwerth.me"
      ],
      [
        "27/04/2021 07:51:01",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Often",
        "9",
        "Find the difference between his and mine setup, if there is none, check the test validity.",
        "Rarely",
        "Never",
        "Rarely",
        "Good Test Design and good Environment Preparements",
        "See https://ruby.sadi.st/Heckle.html and https://infection.github.io/guide/ (Mutation Testing)",
        "No",
        "https://infection.github.io/guide/",
        "No",
        "https://infection.github.io/guide/",
        "",
        "Herbert Maschke",
        "thyseus@gmail.com"
      ],
      [
        "27/04/2021 08:17:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Würzburg / Germany",
        "Undergraduate",
        "Software developer",
        "Never",
        "5",
        "Check the test and / or the code",
        "Never",
        "Never",
        "Never",
        "None :-)",
        "no",
        "no",
        "no",
        "no",
        "dont know?",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 08:43:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Dresden, Germany",
        "Bachelor's degree completed",
        "I was a software developer, then gradually became more of an software engineer and nowadays am a consultant and manager for software development projects.",
        "Sometimes",
        "7",
        "I'd search for differences in the runtime environments to figure out, which external factors could have influenced the test. Then I try to improve the test in order to check those dependencies as well.",
        "Sometimes",
        "Rarely",
        "Often",
        "For each test I try to figure out if there are any dependencies from external factors. If there are, I write additional tests explicitly checking for those factors.",
        "If the non-determistic behaviour is intrinsic, I would not write a test expecting a deterministic result, but just perform a plausability test instead.",
        "No.",
        "No.",
        "No.",
        "That's hard to say. I'd expect the tool to at least recognize external dependencies, but that would be really hard to do, I guess.",
        "Very interesting topic! Good luck with your degree!",
        "Sebastian Meyer",
        "https://github.com/sebastian-meyer"
      ],
      [
        "27/04/2021 08:52:26",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "self-educated",
        "Software Quality Consultant",
        "Never",
        "10",
        "That only happens, if I rely on a dependency that is not explicitely stated in composer.json but installed locally. In that case, I fix composer.json to also reflect that dependency.",
        "Never",
        "Never",
        "Always",
        "Mocking external dependencies. External services can always be mocked using Docker containers.",
        "I completely avoid non-deterministic tests, so there's never a need to execute them.",
        "Those tests are simply broken.",
        "No",
        "No, just code review.",
        " I personally don't need such a tool, it is superseeded by my awareness. Nevertheless, I know people who should use it ;)  Since mock genereation is not the easiest task, a mock generator could be useful, i.e., create a Docker container with senseful data that mimics the original service just as much as needed by the tests. The mock is generated once, when the connection is available, but is then independent from any outbound connection.",
        "I'm interested in the results of the survey. Please send it to nbraczek@bsds.de, if possible.",
        "Niels Braczek",
        "nbraczek@bsds.de"
      ],
      [
        "27/04/2021 09:20:13",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Duisburg/Germany",
        "Fachabitur, lower as university + trained as IT specialist in application development",
        "Software developer",
        "Rarely",
        "8",
        "Telling him \"it works on my machine\". Joke aside, inspectiong the code and triying to find the differences of his and my machine and envioment which could affect the test code.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "Use a general \"enviroment\" or general test before testing the code and/or write detailed error messages/logs why the test failed.",
        "phpunittests? Not sure what is meant, so \"no\".",
        "No",
        "No",
        "No",
        "Checking the enviroment (like my general test)",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 10:06:57",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin/Germany ",
        "Undergraduate",
        "Engineering Lead ",
        "Sometimes",
        "10",
        "I would typicslly step through the test case with a debugger. I'll be likely looking for branching (if, switch, etc) logic based on random, time or other  external resources. (In other languages data races are just as common)",
        "Rarely",
        "Rarely",
        "Often",
        "Helper classes which use external sources by default but let tests override it",
        "No",
        "No",
        "Not in PHP.",
        "No.",
        "I'd expect them to listen potential issues. I'd probably run them locally on commit.",
        "",
        "Peter Aba",
        "peter@peteraba.com "
      ],
      [
        "27/04/2021 10:31:42",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Berlin/Germany",
        "Graduation completed",
        "Engineering Manager",
        "Often",
        "6",
        "I compare our environment details (configurations, environment variables) and connectivity with external services involved.  I always advise my teams to use a common environment by making use of Docker/docker-compose or Virtual Machines.",
        "Rarely",
        "Rarely",
        "Often",
        "I encourage TDD practices (which builds majority of tests) using Unit tests only. Unit tests by convention must contain no I/O and rely on mocks where necessary.  Date/Time units that need to be tested should use \"relative time\" as much as possible in order to avoid time bombs such as new years eve build breaks.",
        "I usually understand non-deterministic tests as tests that connect components from outside the software's boundaries (reading from a disk, network..). So normalising the environment using VMs and common shared configurations is already a good start.  Sharing databases and services is also ideal and, when not possible, make use o migrations and conventions that make sure such tests will only use data provided by such migrations.  Another option that I use take is to spin up fake services that will return the expected response (force a response HTTP 2xx, 4xx, timeout exceptions...)",
        "No",
        "No",
        "No. As I mentioned before, I often use a mix of conventions and shared environments in order to reduce the amount of non-deterministic tests.",
        "Thinking of I/O as the source of all evil, I can envision a tool that monitors, takes snapshots and replays or mock network transactions for specific tests.  This way a test framework (such as phpunit or pest) may have different test profiles for each test in a test case. Potentially using a common \"given\" method (thinking of \"given/when/then\" testing approach) or annotations.",
        "Questions are very interesting and I'd be keen to read the output of your research. I must say that the video showing an example of non-deterministic tests created a huge bias on my responses, because I mostly think of your network exception example. I hope that's intentional.  I believe not differentiating test types can mislead people (unit/integration/e2e tests to name a few) and I hope the lack of guidance there is intentional.",
        "Níckolas Da Silva",
        "nawarian@gmail.com"
      ],
      [
        "27/04/2021 10:36:44",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Berlin, Germany",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "4",
        "For unit testing: - Check if such a test relies on external dependencies - Replace these hard dependencies (if any) with interfaces - Mock or stub these interfaces  For integration tests: - Add all stateful dependencies to docker containers - Make sure to rely on anything else but containers ",
        "Rarely",
        "Never",
        "Sometimes",
        "For Unit tests: never rely on stateful dependencies For Integration tests: Docker/containers for stateful dependencies",
        "-",
        "-",
        "-",
        "Docker",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 12:59:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Stuttgart Stralsund ",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "9",
        "Debug it! ",
        "Rarely",
        "Rarely",
        "Often",
        "Make e.g. sure external deps are mocked ",
        "...",
        "No",
        "No",
        "No",
        "No",
        "",
        "Phil ",
        "Phiamo@gmail.com "
      ],
      [
        "27/04/2021 20:25:09",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Germany",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "3",
        "Inspect the environment and examine the logs. ",
        "Often",
        "Never",
        "Never",
        "Depending on what type of tests I’m writing. Unittests have no external dependencies and work within a clearly defined scope. Functional tests or integration tests are by nature often non deterministic. ",
        "Don’t get this question. ",
        "Infected tests ",
        "No",
        "No",
        "/",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 01:16:37",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Düsseldorf/Gernany",
        "Undergraduate",
        "CEO (I used to be a developer, though)",
        "Rarely",
        "7",
        "Find the error in the tests",
        "Rarely",
        "Always",
        "Always",
        "Code-Reviews are done before code gets merged",
        "phpunit executes the tests, but I think I don‘t understand the question.",
        "Testing external dependencies should be done in integration tests. The integration tests may fail due to missing conbectivity and are re-run multiple times to verify the integration works",
        "no",
        "no",
        "detection, I guess?",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:50:25",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Pasig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "I evaluate the environment the test was performed on, specifically if there are huge differences in its core stack (was the test ran on a Linux environment or a Windows one?) I also extract the exact error to determine the next course of action.",
        "Always",
        "Always",
        "Often",
        "We usually assume through policy that a test environment MUST meet the expectations in the specification documents of the project. It is well-clarified throughout the team that such differences in expected environments will require a deeper analysis of the encountered errors and will be a significant cause of delay.",
        "None",
        "None",
        "None",
        "None",
        "Well-written test cases to clearly report back what caused the non-deterministic test to fail.",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:58:48",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Makati, Philippines",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Investigate",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mock the dependencies and use test or sample data",
        "PHPUnit",
        "Not aware",
        "Not aware of any tools on this",
        "Not aware of any tools on this",
        "Not sure",
        "",
        "Alexander Torrijos",
        "artorrijos@gmail.com"
      ],
      [
        "28/04/2021 03:24:15",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "1. rerun the test. 2. check versioning /device differences 3. debug the test",
        "Rarely",
        "Rarely",
        "Never",
        "None.",
        "I sometimes have to make async, external api calls and then just wait for a timeout. ",
        "no",
        "maybe SonarQube?",
        "maybe SonarQube?",
        "usual CI, with build features, code analysis, and adaptable to many platforms",
        "Tho I know what SW-Testing (and TTD) is, I rarely use it in personal projects (when I'm the only contributor anyway) which is quite often. Also, I know and worked with PHP for some time, but for sure wouldn't call me a PHP-expert and I never even wrote a single test in PHP.",
        "Henrik Storch",
        "thisisthefoxe.dhbw@gmail.com"
      ],
      [
        "28/04/2021 03:43:23",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Stuttgart, Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "8",
        "Investigate the error on the other machine. Try to reproduce the issue locally. Ensure that the underlying problem is understood. Try to make the test deterministic or if impossible try to determine the factors involved and skip the test if problematic condition is detected.",
        "Rarely",
        "Sometimes",
        "Often",
        "Reduce external dependencies, esp. operating system, filesystem, etc.",
        "Not sure what's meant with this question",
        "randomly failing tests",
        "No.",
        "No.",
        "Detect problematic use of functions that may cause non-deterministic behaviour. ",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 04:14:44",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Barcelona/spain",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "5",
        "I would adk him to show me the code",
        "Rarely",
        "Rarely",
        "Rarely",
        "External dependencies are wrapped in a new class or i add general exception catching for the call",
        "No",
        "No",
        "No",
        "No",
        "No idea",
        "Interesting topic",
        "",
        ""
      ],
      [
        "28/04/2021 04:37:42",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Olongapo",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "1",
        "use docker, and mock api test",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Just use Docker, and Mock the Api",
        "None , I just use my own method of test driven development , And i Do  run my code in 3 platform mac, windows and linux.",
        "none",
        "github workflow now can run test on all platform making sure your test pass in all platform",
        "NOne",
        "None",
        "",
        "Uriah",
        "codeitlikemiley@gmail.com"
      ],
      [
        "28/04/2021 05:01:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Bonn Germany ",
        "Master's degree completed",
        "Software engineer",
        "Always",
        "7",
        "Find out why this happens. Than the code to make the test deterministic. If that is not possible, for example like in your video, create a second test, that tests against a mock or a stub, so that one is deterministic. Then use the other test in a different testset, that runs against the third party application, to check, where the api still works. Usually these tests have a rerun possibility. The deterministic test set should never fail, the other one could. ",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mocking and stubbing, predetermined test data, e.g.",
        "E sometimes use retry mechanisms, and in your video example those tests would test the Internet connection before running the test, so that we know, that was the cause for the failure. ",
        "Flaky tests",
        "No. ",
        "Not automatically. Some people have rerun mechanisms for their tests, but I do not like those automated Nachsaisons, because it makes you not taking care. ",
        "Showing known causes",
        "I would like to see your resulting paper please, falk@kuehnel.du",
        "Falk Kühnel",
        "falk@kuehnel.eu"
      ],
      [
        "28/04/2021 05:11:34",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Passau/Germany",
        "Master's degree completed",
        "Hacker / Software hacker / Hacker aka tester/debuger/developer/creator",
        "Sometimes",
        "7",
        "1st) check configs, 2nd) get screen sharing online",
        "Rarely",
        "Rarely",
        "Rarely",
        "don't do too much in one test, do many tests based on just a few.",
        "-",
        "-",
        "-",
        "-",
        "should be plugin for phpstorm and for the other idea group like webstorm",
        "-",
        "",
        ""
      ],
      [
        "28/04/2021 05:53:04",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Taguig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "6",
        "read the error message if available or check if the another machine and my machine has same version of php ",
        "Rarely",
        "Rarely",
        "Often",
        "run unit test to locate the non deterministic code and revise it",
        "no",
        "no",
        "no",
        "no",
        "cpu profiler",
        "sorry, some answers are not substantial",
        "Frex Cuadillera",
        "fcuadillera@gmail.com"
      ],
      [
        "28/04/2021 06:17:52",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "3",
        "Docker",
        "Often",
        "Rarely",
        "Rarely",
        "Include as input whatever can change in the environment that makes the test deterministic",
        "N/a",
        "None",
        "None",
        "Docker and containerization",
        "Don't know",
        "Good luck",
        "Claude",
        "claudekirke@gmail.com"
      ],
      [
        "28/04/2021 06:47:20",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Germany Rosenheim",
        "Graduation completed",
        "Senior Backend Developer, Lead Product Developer",
        "Rarely",
        "8",
        "Identify and resolve the differences between the two test environments.",
        "Rarely",
        "Rarely",
        "Often",
        "Replace external APIs with local dummy APIs to create deterministic API responses/behavior (mostly based on docker)",
        "No",
        "\"Snowflake Tests\": They will break over something rather irrelevant or sensitive external condition. These are tests that will fail often in your pipeline and they will be successful if rerun.",
        "No. Sometimes our CI/CD Pipeline will break for no reason, which is an indicator for such (bad) tests.",
        "We don't test or rely on external resources. It's good practice to Mock/Stub the parts of your code that rely on external resources. PHPUnit is used to create Mocks/Stubs.",
        "The tool should detect if any external resource is used, identify the protocol, request and response contents and format and automatically derive a stub, which can be used to replace the external call. This information must be exportable as file to be commited with the tests and used by others to use the tool and the configuration to run the tests against the mocked API of the tool, not the Live-Api. Nice to Have: An UI to modify the detected reponses",
        "Good luck",
        "",
        ""
      ],
      [
        "28/04/2021 07:39:30",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Philippines",
        "Master's degree in progress",
        "Solutions Architect",
        "Rarely",
        "3",
        "Determine the similarity and difference in test execution environment",
        "Rarely",
        "Rarely",
        "Always",
        "With defensive coding practices, have the code define and ensure satisfaction of requirements before executing their function.",
        "No, it's a bad practice",
        "No",
        "No",
        "Rather than a tool, it's basic coding practice to ensure all requirements for success of your code is in place.",
        "Detection of dependencies to functions beyond the current system's control, but paradoxically it means everything",
        "The term 'non-deterministic test' is a misnomer, there may be no changes in the code, but we have observable and remediable changes on parameters or environment variables (i.e. internet connection) beyond control of the software that the PHP code depends on. ",
        "Tito Mari Francis Escaño",
        "titomarifrancis@gmail.com"
      ],
      [
        "28/04/2021 08:56:15",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Manila/Philippines",
        "Graduation completed",
        "Development Manager",
        "Often",
        "10",
        "Usually, discuss the issue with the developer and advise for mitigation. Sometimes, we also incorporate it already during brainstorming / grooming and discuss that this should have been included already in the beginning and not on the end.",
        "Sometimes",
        "Often",
        "Often",
        "We make as much realistic scenarios as possible. Also, on the code level, we tend to increase the support of the previously encountered scenarios and have it applied on future development.",
        "One is to setup automated testing mechanism being executed on regular / daily basis. This way, we can easily catch the potential issues during the execution and compare on the last result. From there, we can investigate / dig further what may caused it and make the necessary adjustment so that it will not happen again on the next run.  In addition, regular code analysis of both test case and also the main code itself is beneficial as you may not know that somewhere before or down the line, an incorrect argument or method may have caused the non-deterministic test.  Another one is to increase the test suites. Granted that one scenario is not enough but as mentioned, once we encounter the issue somewhere, it is automatically added on the list to be tested and have it incorporated on the test case and also on the code.",
        "Usually, we do isolation as sometimes, the application on one environment only shows the issue as compare to others. Once we isolate the application in question, we perform the test, either automated or manual, so that we can have proper verification that we need. Since its already isolated, we tend to perform other change of environment (like pretending of slow connection and like) as that shows a different side of story as well.  In relation to isolation, we tend to create a different test suite so that we can make sure that during execution, it will not be that invasive unlike the usual test suite and can be executed multiple times in different scenarios.",
        "Not that I know of specifically as we tend to rely on collective usage and adapt as we go along.",
        "Probably it can be covered at some point by code analysis like SonarQube. Because with SonarQube, its not just the code is being scanned, but also the potential coverage and also some duplicates of the test cases generated.",
        "I guess would be able to cover certain scenarios that usual testing won't be able to cover. Probably intelligent enough to advise that certain issue can be achieved by this scenario and so on.",
        "Really looking forward on the result of this study because its an eye opener to developers generating those applications and solutions which may lead towards service resiliency and better security.",
        "Rellmon P. Ponce de Leon",
        "raremon@gmail.com"
      ],
      [
        "28/04/2021 10:43:10",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Davao city, Philippines",
        "Graduation completed",
        "Software developer",
        "Often",
        "7",
        "View logs",
        "Sometimes",
        "Sometimes",
        "Often",
        "Add paramaters to run the test multiple times.",
        "no",
        "nope",
        "nope",
        "nope",
        "nope",
        "Thanks and good luck",
        "Goper",
        "goper.zosa@gmail.com"
      ],
      [
        "28/04/2021 11:58:57",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "7",
        "Check for time issues (i.e. mock 'now'), reduce integration tests with unreliable services to a minimum, mark them as unstable",
        "Rarely",
        "Sometimes",
        "Often",
        "Make boundaries to external services clear, easily mockable",
        "-",
        "Unstable tests",
        "No",
        "No",
        "Detect external calls in tests or time dependent logic (suggest injecting a clock component)",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 12:13:06",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Philippines",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "check the difference between configurations, then compatibility and then difference in environment",
        "Rarely",
        "Sometimes",
        "Rarely",
        "making sure to look for boolean results",
        "havent really",
        "none",
        "none",
        "none in particular",
        "i am not really verbose in testing",
        "I am actually a frontend developer, I have worked with php for just a short period so it might be better to look for respondents who are truly backend",
        "Sanz moses",
        "web@sanzmoses.com"
      ],
      [
        "28/04/2021 13:08:01",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Bohol, Philippines",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "I usually look for relevant error messages in the console and in the logs.",
        "Sometimes",
        "Always",
        "Always",
        "I mock the causes of the non-deterministic tests. I also test the cause separately and sometimes manually.",
        "If the code requires an external service, my usual step is to mock that service when writing tests.",
        "No",
        "No",
        "No",
        "Pointing the exact cause of the non-deterministic behavior like if I cannot reach the external service required due to a severed internet connection.",
        "Good luck!",
        "",
        "ejillberth@gmail.com"
      ],
      [
        "28/04/2021 21:04:10",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Manila, Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Find the difference between my machine and the other persons machine",
        "Sometimes",
        "Always",
        "Often",
        "Have a source of truth, like CI, with the correct configuration. Use virtual machines for reproducibility. Avoid code and tests that produce non-deterministic output, like RNGs, timezone libraries, unmocked classes.",
        "no",
        "race conditions, intermittent failure, false positive",
        "no",
        "no",
        "i dont really use one, mostly its detected by the test runner itself",
        "",
        "Kelly Navarro",
        "gabrnavarro@gmail.com"
      ],
      [
        "28/04/2021 22:43:52",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "Check operating system, check network connectivity or whitelisting to external API, check environmental variable",
        "Often",
        "Often",
        "Often",
        "Separate non-deterministic test like creating a new test suite so that it can be executed separately from internal business logic test case",
        "From test creation, separate non-deterministic tests externally and group them together according to their purpose. Grouping together tests dependent on operating system, tests dependent on connectivity, or tests dependent on other microservices. If it is okay to bypass the dependency and we will only require the target data/response, it could be replaced by mock testing.",
        "Dependency testing as I could say, as it depends on multiple variables in order for it be success.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "If there's a tool, maybe it will detect first the connectivity of the non-deterministic tests and then catch its error to notify the executor of the test. Or it can save such scenario on time of creation like the response of the third party API and store it into a folder so that it can be used as referenced for future non-deterministic tests.",
        "The purpose of this study is good to the point that it can increase the developer/tester experience in tackling non-deterministic tests.",
        "Arvin Reynoso",
        "reynosoarvin@gmail.com"
      ],
      [
        "29/04/2021 02:04:20",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Bacolod City",
        "Graduation completed",
        "Software developer",
        "Always",
        "6",
        "list down your apps machine what you install and install to other machine or use docker..",
        "Sometimes",
        "Always",
        "Always",
        "set workflow of your code structure, be strict on data types and always restart or hard refresh",
        "yes because you should take down list of the error with solution",
        "yes I'm strict when it comes to variables",
        "no",
        "no",
        "none",
        "Such a nice survey.. so interesting",
        "edrian jan solatorio",
        "edrianjansolatorio@gmail.com"
      ],
      [
        "29/04/2021 04:01:19",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Frankfurt/Germany",
        "vocational technical diploma",
        "Software developer",
        "Rarely",
        "3",
        "Analyze the error message, in most cases there are differences in the conditions between developer-machine and another",
        "Rarely",
        "Rarely",
        "Rarely",
        "avoid depending on 3rd party services mostly, if not possible, catch possible issues and output accordingly",
        "no",
        "external service/data dependent",
        "no",
        "no",
        "analyze what parts of the code are refering to external services",
        "",
        "Michael",
        "d00p@froxlor.org"
      ],
      [
        "29/04/2021 07:41:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin, Germany",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "7",
        "It depends on the kind of test. Browser tests (written in PHP or any other language) for example are often non-deterministic and require timeouts to be configured for the completion of certain interactions. In such cases the test may fail because the execution time exceeds the default timeout specified for the test and needs to be increased.  In other cases the test may require the software to be configured in a way that cannot be done within the test setup. Investigating whether the test outcome is influenced e.g. by environment variables would be something that I'd check in such a scenario.",
        "Often",
        "Often",
        "Often",
        "Peer review and running tests as part of automated continuous integration tests.",
        "I don't understand the question.",
        "\"tests with non-deterministic behavior\" is the term I would use. Browser tests and edge to edge tests come to mind as classes of tests that often fall into this category.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "It should cause the affected tests to fail or trigger some sort of warning.",
        "",
        "",
        ""
      ],
      [
        "29/04/2021 21:58:21",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Remote for US, Belgium and Argentina",
        "Graduation completed",
        "Software engineer",
        "Always",
        "5",
        "I would try to reproduce it and change the test so it works aisolated to the environment",
        "Sometimes",
        "Sometimes",
        "Rarely",
        "I run them in a virtualized environment and so do the rest Of the devs ",
        "No",
        "No",
        "No",
        "No",
        "To cover every possible scenario",
        "Good luck with your study! ",
        "Vicky Jauregui ",
        "jaureguivictoria@gmail.com"
      ]
    ],
    "classifications": [
      "timestamp",
      "terms",
      "groupsInAnswer",
      "groupsInAnswer",
      "cityState",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "openQuestion",
      "negativeOrList",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "feedback",
      "negativeOrList",
      "negativeOrList"
    ],
    "manualSettings": {}
  },
  "1620317153383": {
    "titles": [
      "Carimbo de data/hora",
      "Check the \"I agree\" option if you have read and agree to the consent form.",
      "How long have you been working with PHP?",
      "How long have you been working with PHP software testing?",
      "Where do you work? (City/Country)",
      "What is your academic level?",
      "Regarding your profession, what title would you give yourself?",
      "Have you ever dealt with non-deterministic software testing of any kind?",
      "On a scale of 1 to 10, how problematic do you consider the occurrence of non-deterministic tests in software projects?",
      "Let us consider the following scenario: You have developed a test code, and you were successful at running it on your machine. However, when you or someone else ran the same test on another machine, it failed. What action do you usually take when face such a scenario?",
      "How often do non-deterministic tests appear in your workflow?",
      "How often do you employ non-deterministic tests correction practices in your workflow?",
      "How often do you employ non-deterministic tests prevention practices in your workflow?",
      "What precautions do you take to prevent the tests you write from being non-deterministic?",
      "Do you use (or be aware of) any routine for the execution of non-deterministic tests? If so, could you please detail it/them?",
      "Are you aware of any other name associated with \"tests with non-deterministic behavior\"? If so, could you please detail it/them?",
      "Do you use or know any tools to detect non-deterministic tests? Please detail it/them.",
      "Do you use or know any tools to prevent non-deterministic tests? Please detail it/them.",
      "What are the expected features for a tool dealing with (detection, prevention or correction) non-deterministic tests in software projects?",
      "Give your feedback on this study, or comment freely.",
      "What is your name?",
      "What is your email?"
    ],
    "rows": [
      [
        "08/04/2021 18:53:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "France",
        "Master's degree completed",
        "Software developer",
        "Rarely",
        "5",
        "Examine test environment",
        "Rarely",
        "Never",
        "Rarely",
        "Mocking / emulating external resources",
        "No",
        "Tests with external dependencies",
        "no",
        "no",
        "Checking for external dependencies, comparing with previous test runs",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 20:04:13",
        "I don't agree",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 22:31:59",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Banjarmasin, Indonesia",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "I usually check for the other person's project setup, eg: 1. Are they follow the setup instruction correctly? 2. Are they set the correct env variable values correctly?  Related to the tests it self, sometimes I face this issue because: 1. Some random function (eg. php faker) generates an invalid value (usually status_code numbers in integer). 2. Date time value definition related to calculation of holidays (rarely).  But for me, mostly this issue occurs related to the project setup documentation.",
        "Rarely",
        "Sometimes",
        "Always",
        "1. Using mock object and response for the tests related to external API calls 2. Using carbon instance and carbon mock object for date time definition on tests 3. Prevent using random function for particular model attributes, eg: user_role_id, status_code, which I will use for data filtering or where clause on the production code. 4. Update the project documentation if the changes will impact the tests.",
        "I don't really get this question.",
        "I was using term \"intermittent test failures\" for this kind of test issue.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "I don't expect any tool to deal with it, I think I don't need one. Because this issue rarely occurs on my projects. Mostly this issue happen because of my own careless",
        "TBH, I still don't get the point of this research, why do you need these answers, and what the goal of this research.  I just get that: 1. You want to know how often developers facing non-deterministic tests 2. You want to develop some tool to detect and prevent this test issue  But, still not sure about that :D  PS: I didn't understand 1 question (see my answers). If you can elaborate more about it (via email), I'd be happy to answer it.",
        "Nafies Luthfi",
        "nafiesl@gmail.com"
      ],
      [
        "09/04/2021 08:52:22",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Tokyo/Japan ",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "9",
        "Develop and share Docker environments",
        "Rarely",
        "Sometimes",
        "Always",
        "Mocking Disk IO or API calls",
        "None",
        "tests with side effects",
        "None",
        "None",
        "?",
        "",
        "mpyw",
        "mpyw628@gmail.com"
      ],
      [
        "09/04/2021 12:12:40",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "From home in Canada",
        "Graduation completed",
        "Software Developer and Tester",
        "Sometimes",
        "10",
        "Pair with another developer to determine differences in data, language settings or even operating system to debug why the test fails in one environment but not another ",
        "Often",
        "Often",
        "Often",
        "Understand what data is required for the test to pass and determine any “side effects” that might be occurring that could make the test non-deterministic ",
        "No",
        "No",
        "No",
        "No",
        "Clear error messages and the ability to be easily run in in a continuous integration environment like GitHub Actions",
        "",
        "Chris Hartjes",
        "chartjes@littlehart.net"
      ],
      [
        "10/04/2021 11:37:15",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Grand Rapids, USA",
        "Undergraduate",
        "Software developer",
        "Often",
        "4",
        "Try to have THAT developer debug why it's not working on their machine",
        "Often",
        "Sometimes",
        "Rarely",
        "Mocking inside a unit test. However, sometimes we purposely want to to test the entire, connected system and so we do NOT want to mock external things (like databases, APIs, etc)",
        "For tests that rely on an external API call, we try to use an API service that can be used by all devs (e.g. not something that requires a production API key). But mostly... if it makes sense, we would try to mock out these external services. But when we specifically choose to NOT mock them (because the test is most valuable when using the real API), we just \"live\" with the possibility that it may fail sometimes.",
        "We call them \"phantom failure\" tests - tests that fail sometimes but not other times. These are a PAIN. They are actually most commonly associated with Selenium-style tests where, for whatever reason, the interface responds more slowly sometimes, and so our tests fail because they have not waited long enough for something to load.",
        ".",
        ".",
        ".",
        "",
        "Ryan Weaver",
        "ryan@symfonycasts.com"
      ],
      [
        "10/04/2021 11:54:33",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "China",
        "Senior high school in progress",
        "Software developer",
        "Rarely",
        "6",
        "Ask for the environmental parameters of the other party, and reproduce these problems as much as possible. And ask him/her completely delete the software and then re-install it.",
        "Rarely",
        "Rarely",
        "Rarely",
        "None",
        "idk",
        "We usually call it metaphysics",
        "I lack experience in this field",
        "I lack experience in this field",
        "I lack experience in this field",
        "",
        "MlgmXyysd",
        "mlgmxyysd@meowcat.org"
      ],
      [
        "10/04/2021 14:53:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Czech Republic",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "File an issue to fix it, to make the test deterministic",
        "Rarely",
        "Rarely",
        "Often",
        "Mocking objects and/or responses",
        "No",
        "Maybe \"tests with external dependencies\"",
        "No",
        "Mock libraries",
        "Don't know",
        "",
        "",
        ""
      ],
      [
        "10/04/2021 15:29:22",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Kolkata/India",
        "Graduation completed",
        "Software developer",
        "Never",
        "1",
        "Use docker",
        "Never",
        "Never",
        "Never",
        "Nothing",
        "No",
        "Sounds like random probability",
        "No",
        "No",
        "No",
        "Would be good to give a code example of non deterministic test",
        "Anubhav",
        "xprilion@gmail.com"
      ],
      [
        "10/04/2021 18:34:14",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "New York City/USA",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Check the testing environment",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock third-party dependencies",
        "Make sure that dependencies are injectable, then replace the dependencies with mocked objects/results",
        "Non-atomic tests, tests with external dependencies",
        "Nope",
        "Nope",
        "This tool would be able to identify dependencies that interface with third-party software, like curl, cache engines, database engines, etc...",
        "",
        "Hypolite Petovan",
        "hypolite@mrpetovan.com"
      ],
      [
        "10/04/2021 18:59:11",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Frederick, Maryland, USA",
        "Some college",
        "Software developer",
        "Always",
        "9",
        "Confirm that both systems have the same things installed and investigate further",
        "Rarely",
        "Often",
        "Sometimes",
        "Manual review of the tests",
        "Not really",
        "Heisenbugs ;-)",
        "No",
        "No",
        "I don't know",
        "",
        "",
        ""
      ],
      [
        "11/04/2021 00:13:03",
        "I agree",
        "Up to 1 year",
        "Up to 1 year",
        "China",
        "Graduation completed",
        "Software developer",
        "Never",
        "2",
        "Check their PHP version, etc",
        "Never",
        "Never",
        "Never",
        "I never write tests",
        "Nope.",
        "No",
        "No.",
        "NO",
        "I don't know",
        "",
        "Anonymous",
        ""
      ],
      [
        "11/04/2021 07:12:52",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Muncih, Germany",
        "Master's degree completed",
        "IT Consultant",
        "Sometimes",
        "2",
        "Find out why the test fails on other machine.",
        "Rarely",
        "Never",
        "Always",
        "Decouple.",
        "Replace randomness and actual time by pre-defined values that get injected; decouple tests from external resources.",
        "Flaky tests",
        "PHPUnit allows repeated test execution.",
        "For testing external APIs, I hand-code an \"is available\" check. When external resource is not available, I skip the test.",
        "Magically fix all problems? ,-)",
        "I found the term \"non-deterministic tests\" a bit misleading first, because I thought it would refer to testing code with non-deterministic behaviour. The way it was presented in the video, it \"just\" refers to external resources that are not available. Or at least, this is my assumption at this point.",
        "Stefan Priebsch",
        "stefan@priebsch.de"
      ],
      [
        "11/04/2021 09:43:45",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Berlin",
        "Graduation completed",
        "Software engineer",
        "Often",
        "7",
        "try to run all tests on CI, and consider that as main source of truth",
        "Sometimes",
        "Sometimes",
        "Often",
        "avoid network access, avoid random data, avoid waiting for stuff... whatever is not in your control should be avoided",
        "no",
        "no",
        "no",
        "no",
        "locating code that depends on possible not deterministic features (network, time, randomness...)",
        "cool",
        "Asmir",
        "goetas@gmail.com"
      ],
      [
        "12/04/2021 00:22:12",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Hong Kong",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "1",
        "Relicate failed enviroment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Enviromental tests to ensure matching enviroment before running test",
        "Library check etc.",
        "no",
        "no",
        "no",
        "n/a",
        "Probably use a text description for non-deterministic tests, rather than video.",
        "Alan Knowles",
        "alan@roojs.com"
      ],
      [
        "12/04/2021 00:25:33",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Melbourne/Australia",
        "Dropout",
        "DevOps Engineer",
        "Sometimes",
        "5",
        "Teach the other user about Docker, and implement it as a CI/CD pipeline so it always has the same outcome.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Use Docker for coding environments, and use a CI/CD pipeline from my Git repo.",
        "Nope",
        "Nope",
        "Nope, I just do it manually",
        "I use Docker",
        "NA",
        "It isn't really something I've had to worry about, or applies to any of the projects I've worked with.",
        "Dean Lofts",
        "dean@deanlofts.xyz"
      ],
      [
        "12/04/2021 17:29:12",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Columbus, OH, USA",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "Look for potential causes (environment configuration, race conditions, etc.) that may be causing the test to behave differently, then refactor the test method to compensate for or eliminate these differences.",
        "Sometimes",
        "Often",
        "Often",
        "Be explicit with the arrangement of the tests and leverage test doubles to ensure that processes outside of the System Under Test (SUT) are not polluting the test.",
        "If tests fail intermittently when run either locally or in a CI pipeline, determine what is causing the test to fail and, if it's from outside causes, use test doubles or other approaches to ensure consistent results.",
        "Nothing formal, but \"there's a race condition in this test\" gets thrown around a lot.",
        "PHPStan and Psalm can be helpful in catching logical errors, but are not specific to non-deterministic tests. I suppose mutation testing (e.g. InfectionPHP) could also be effective, but I have not explored this.",
        "PHPStan and Psalm (see previous).",
        "Warning when items outside of the scope of the SUT are being evaluated, and recommend approaches to avoid these from being a factor.",
        "",
        "Steve Grunwell",
        "steve@stevegrunwell.com"
      ],
      [
        "14/04/2021 23:15:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Nashville, TN, US",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "10",
        "I try to isolate the variable part of the code that causes the failure and use a mock to ensure that the test is deterministic. If the code should run successfully during a failure state, then I create a mock that simulates failure to ensure the failure state in a deterministic way. One of the best ways to achieve this is to use dependency injection.",
        "Rarely",
        "Always",
        "Often",
        "I make extensive use of dependency injection and use mocks to mock as much as possible, except for the lines of code I am testing.",
        "I do not make use of it currently, but if I needed to test non-deterministic code, I might use the PHP library \"Infection\" to facilitate mutation testing.",
        "Mutation testing",
        "I have used PHP-Mock, which allows you to test non-deterministic PHP functions, such as time() and random_int().",
        "I regularly use PHPStan and Psalm to statically analyze my code for type correctness. This does not fully prevent non-deterministic tests, but it can help.",
        "Analyze code and identify functions and methods that might return values that later code paths may not be able to process.",
        "",
        "Ben Ramsey",
        "ben@benramsey.com"
      ],
      [
        "18/04/2021 23:51:40",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "5",
        "Extension checks, re-check composer packages and other dependancies, validate ini's are matching and PHP versions are equal. ",
        "Rarely",
        "Sometimes",
        "Sometimes",
        "Not in tests; however in CI/CD",
        "No",
        "N/a",
        "N/a",
        "N/a",
        "N/a",
        "",
        "Rama",
        "me@rexsdev.com"
      ],
      [
        "18/04/2021 23:52:46",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Montreal/Canada",
        "Master's degree completed",
        "Backend Developer / DevOps",
        "Rarely",
        "10",
        "Try to reproduce the error on the working machine",
        "Rarely",
        "Never",
        "Never",
        "I always isolate the thing I want to try and remove any link to external services/tools",
        "no",
        "no",
        "PHPUnit infection (Mutation testing)",
        "No",
        "Output the list of potential issues and a quick explanation of what could be the issue for the specific test",
        "",
        "",
        ""
      ],
      [
        "18/04/2021 23:58:13",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Often",
        "7",
        "1. Rule out any environment misconfiguration 2. Evaluate if the use of a non-determisitic test is correct/necessary 3. Rewrite the test such that it passes on both machines",
        "Often",
        "Often",
        "Rarely",
        "- CI - Deterministic thinking",
        "Monitoring them actively",
        "Dynamic tests",
        "No, just manual code review",
        "No",
        "Encourage the use of deterministic tests wherever possible (provide guidance on how to achieve this), bring attention to unintentionally non-deterministic tests",
        "Best of luck with your research!",
        "",
        ""
      ],
      [
        "19/04/2021 00:57:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Ottawa, Canada",
        "Master's degree in progress",
        "CTO",
        "Rarely",
        "10",
        "NDTs are useless.  They have to be solved rapidly before they ruin the whole test suite.",
        "Rarely",
        "Always",
        "Always",
        "Writing specs that respect LoD go a long way.  Isolation is important.  Fixture resets to prevent setup pollution.  After this, you're just eliminating randomness to remove NDT deps.",
        "This question doesn't make sense.",
        "No -- but funny.  At work, we call them GTs.  Garbage tests.  NDTs have no place in a proper test suite.",
        "We use Bamboo CI",
        "You can apply Mutators to test your test suite itself.",
        "I don't really need tools here.  Bamboo CI logs history, we parse for tests that lack rigor, and slate them for repair or replacement.  Tests span from phpunit, to phpspec, to Behat tests (the tests that most often cause these problems, are Behat tests)",
        "Honest feedback, it read as though you were crafting a commercial offering under the guise of an academic survey.",
        "",
        ""
      ],
      [
        "19/04/2021 03:37:01",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Ottawa, Ontario, Canada",
        "Graduation completed",
        "Web developer",
        "Never",
        "10",
        "There could be many external factors effecting the test of such nature. However I use containerized development environment such as Docker, which can element many external factors that can cause different outcome for same code. ",
        "Rarely",
        "Rarely",
        "Often",
        "Making sure the platform stays the same across all the environment and for all developers, Docker helps to implement it.",
        "There can't be silver bullet for all types of non-deterministic test issue. What I would like to see if the test depends on external factors such as host OS settings, hardware requirements or third party API, test result mention that specific dependent issue in fail message. ",
        "Not aware of that ",
        "Not that I know of",
        "Not that I know of",
        "Flags a warning message about external dependency ",
        "",
        "Dushyant Patel",
        "msg2dushyant@gmail.com"
      ],
      [
        "19/04/2021 06:44:05",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Regina, SK, Canada",
        "No secondary education",
        "Software developer",
        "Rarely",
        "8",
        "diagnose environmental differences",
        "Rarely",
        "Rarely",
        "Rarely",
        "none specifically, just internalized knowledge that explicitly non-deterministic test cases (like connecting to an API) are moreso testing the API connection than the validity of your code.",
        "no",
        "no",
        "no",
        "no",
        "dunno",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 07:37:32",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Mississauga, Ontario, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "1 - Check to see if they have all of the changes 2 - Investigate the output and determine the root cause 3 - Fix the root cause of the discrepancy",
        "Rarely",
        "Sometimes",
        "Always",
        "I push the api calls as far from my main code as possible, and then use mocks to avoid it in the non-specific tests.",
        "No",
        "no",
        "no",
        "no",
        "The ability to break dependencies/point them out.",
        "",
        "Andrew",
        "awjudd@gmail.com"
      ],
      [
        "19/04/2021 08:22:04",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Toronto/Canada",
        "Graduation completed",
        "Software Architect",
        "Sometimes",
        "10",
        "Collect the logs, and analyze the failing code visually to identify system/state dependent variance.",
        "Rarely",
        "Sometimes",
        "Often",
        "Granular isolation",
        "We tend to avoid non-deterministic test cases, but mocking the variable components. However, when not possible, we carefully generate the software state to make the outcomes predictable.",
        "state-volatile tests",
        "No",
        "No",
        "Detect system/state specific dependencies.",
        "Intriguing study. Why did you focus on PHP?",
        "Seva",
        "Seva.lapsha@gmail.com"
      ],
      [
        "19/04/2021 09:33:41",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Montreal, Canada",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Usually attach a debugger to see if I can find the point where it diverges, or add logging if it’s a race condition ",
        "Rarely",
        "Always",
        "Always",
        "Reproducible test fixtures and environments, special care around tests related to time",
        "I don’t understand the question",
        "Flaky tests",
        "No",
        "No",
        "Run multiple tests multiple times to detect non deterministic tests. Maybe linting or static analysis to detect common scenarios that can create this situation",
        "",
        "Samuel Schmidt",
        "samuel@dersam.net"
      ],
      [
        "19/04/2021 10:26:27",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Chicago, IL",
        "HS",
        "Software developer",
        "Sometimes",
        "10",
        "Examine possible causes like fixture data being manipulated in other tests & creating implicit dependencies between test cases",
        "Rarely",
        "Never",
        "Often",
        "best practices guide for devs",
        "No",
        "cursed tests",
        "No",
        "No",
        "A warning that highlights the problematic test(s) & states why they're non-deterministic would be great!",
        "",
        "Nick Evans",
        "nick.evans@northwestern.edu"
      ],
      [
        "19/04/2021 11:43:09",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Lancaster, OH, USA",
        "No higher education",
        "DevOps",
        "Rarely",
        "10",
        "attempting to reproduce the problem in my environment; then ask the other user for the output to determine what might be wrong; i can usually determine the problem that way",
        "Rarely",
        "Never",
        "Never",
        "none",
        "no",
        "\"tests with external uncontrolled dependencies\" would be a subset",
        "no",
        "no",
        "no idea",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 13:57:26",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Resistencia/Argentina",
        "",
        "Software developer",
        "Never",
        "1",
        "1. Check if the other part have replicate the enviroment. 2. Check the imputs. 3. Replicate the other part actions.",
        "Never",
        "Never",
        "Never",
        "I Do create atomic tests for my code. Really small tests. ",
        "No",
        "No",
        "No",
        "No",
        "Don't know",
        "https://martinfowler.com/articles/nonDeterminism.html",
        "Ariel",
        "arieltoledo@gmail.com"
      ],
      [
        "19/04/2021 14:09:06",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "10",
        "I ask for more details, like the other person's enviroment.",
        "Rarely",
        "Rarely",
        "Always",
        "I set a seed for random outputs.",
        "Not besides setting a seed for random functions.",
        "No",
        "NO",
        "No",
        "No",
        "Wish you best of luck!",
        "Patricio Tarantino",
        "patriciotarantino@gmail.com"
      ],
      [
        "19/04/2021 15:23:29",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "7",
        "check infrastructure dependencies and debug the test in the failed environment",
        "Sometimes",
        "Often",
        "Often",
        "trying to mock most of infra dependencies",
        "No",
        "No",
        "No",
        "No",
        "detect posible non-deterministic tests",
        "",
        "Piero Recchia",
        "piero.recchia@gmail.com"
      ],
      [
        "19/04/2021 15:26:28",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "San Francisco, Córdoba, Argentina",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "2",
        "I would consider environment differences and try to reproduce the error using the same dataset, or catching the non-deterministic factor by doing an static code review over that test method.",
        "Sometimes",
        "Often",
        "Always",
        "1. Deactivate curl primitives in order to prevent unintentional connections to third party systems. 2. Wrap undeterministic factors generally expressed as PHP primitives like rand() calls, new DateTime('now'), etc. Wrapping those behaviours into mockable dependencies.",
        "No, I don't use any automatic routine.",
        "xUnit Patterns define this anti-pattern as \"Erratic tests\"",
        "No",
        "No",
        "Detection and prevention I think",
        "",
        "Carlos Frutos",
        "carlos@rooftop.dev"
      ],
      [
        "19/04/2021 17:51:23",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Ciudad Autónoma  de Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "5",
        "Trying to reproduce the same steps on my computer to generate the error.",
        "Sometimes",
        "Often",
        "Sometimes",
        "I try to generate a file with different options. For example, if I have to communicate to an API, what I am trying to generate is possibly a JSON with which the application should return.",
        "-",
        "-",
        "-",
        "-",
        "Trying to find as many errors as possible, although if it is not mastered perfectly, it could become a big problem",
        "",
        "Martín",
        "Dell'Oro"
      ],
      [
        "19/04/2021 18:10:26",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "rio cuarto",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "check the code with partner",
        "Sometimes",
        "Never",
        "Never",
        "mock apis",
        "no",
        "no",
        "no",
        "no",
        "detection",
        "",
        "cristian",
        "cristianaalvarez@gmail.com"
      ],
      [
        "19/04/2021 18:11:54",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Argentina - Buenos Aires",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "Maybe different OS, or different version of php, maybe a failure of resources of the OS",
        "Rarely",
        "Rarely",
        "Rarely",
        "IDK",
        "No",
        "No",
        "No",
        "No",
        "IDK",
        "I tried to help, but i'm not very familiar with tests, sorry ! i try to do all my best.",
        "Sandro",
        "sdezerio@gmail.com"
      ],
      [
        "19/04/2021 20:26:58",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Los Angeles, USA",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "try to reproduce the issue locally",
        "Sometimes",
        "Rarely",
        "Rarely",
        "Mocking response, Double objects, avoid calling externals APIs except when there's no options",
        "No",
        "No, is the first time I saw they have a name",
        "No.",
        "No.",
        "Detect them before they run, more accurate message on detection (specially within CI tools)",
        "It sounds interesting",
        "",
        ""
      ],
      [
        "19/04/2021 22:50:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buckley, WA, United States",
        "Undergraduate",
        "Software developer",
        "Never",
        "10",
        "Make certain that the machine environments are as similar as possible, run tests in CI, and check the test itself for logic flaws",
        "Never",
        "Never",
        "Always",
        "I write extremely granular tests, often including a test intended to falsify the previous test if possible",
        "No",
        "Broken",
        "Writing tests which run through multiple possibilities",
        "Writing tests granularly, writing palindromic tests",
        "Start up a vm, run tests, export results, and repeat for many variant setups.",
        "I don’t really have much to say",
        "Casey Parker",
        "parker.casey@pm.me"
      ],
      [
        "20/04/2021 11:08:34",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "5",
        "Check dependencies, libraries and programming language versions between both machines.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Try to evaluate as much as try/catch scenarios I can.",
        "Try to evaluate as much as try/catch scenarios I can.",
        "No.",
        "No.",
        "No.",
        "Detecting non-deterministc scenarios on developed software.",
        "This is a very interesting study that made me to research on computing theory I have studied some years ago to have a deeper understanding for this survey.",
        "Guillermo Ramiro Maquieira",
        "guimaq@gmail.com"
      ],
      [
        "20/04/2021 12:21:32",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Argentina",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "6",
        "I double-check:  - If deployment or installation of the project was done properly in the other machine.  - If the codebase is correct (for example, make sure the git branch is the correct one and no other code changes were made that could affect the results).  - If the configuration of the project is correct (for example, environment variables that could alter the application behavior).  - If external required resources are available in the same way on the second machine (APIs, databases, any connectivity needed, permissions required, IPs allow-listed, etc).  - If the test could be affected for having different hardware resources (for example, requiring more time to not timeout in a slower machine, requiring more available RAM, etc).  - The versions of the running environment to see if that could affect the compatibility (PHP version running, OS type and version, dependencies versions).   Finally I would check the steps of the failing test and probably comment/remove temporarily some of them to find out what's exactly the problem.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "I use equivalent but \"mocked-up\" interfaces to replace the resources that could not be available.  For example, I create classes/code with the same interface that the code used to manage real APIs or databases. The use that in the tests to make them independent from the connectivity or other resources required.  In other cases where that's not possible, I run some code as a part of the test battery that checks for the availability of those resources that could not be available. Then, the test itself could be classified as \"skipped\", instead of mark it as failed.  And some other times (usually when there's no enough time for a better solution) I simply try to make sure the requirements and external conditions of the environment where the tests are ran will be the best. For example having a stable environment for this purpose.",
        "I don't.",
        "Actually no, but I know that frequently the \"integration tests\" are a sub-set of the non-deterministic ones.",
        "I don't.",
        "I don't.",
        "From the top of my ming, for detection and prevention I can think in these ideas:  List the points (test steps, code lines, etc) that could potentially have different results with the same entries and code. Similar to what code linter tools do. For example show recommendations or warnings when the tests use: - Random generated information that could make the test behave differently. - Date-time based tests that could fail depending on when are they ran. - Access to external resources such as the network (using an API for example). etc.  For prevention I'd also think in a library with some util methods to verify the availability of external required resources. For example, a library with methods like \"checkInternetConnectivity\", \"checkAvailableRAM\", etc. So the test developer can use them easily and the tool can suggest to use them when needed.  I also think in having a tool where resources could be registered (for example, an API or database) in a global part of the testing code, and the on each testing scenario the developer could declare with annotations or however those resources that the scenario requires.  For correction:  Provide an OOTB mocked-up for those interfaces that are usually used to access the network. For example a replacement for the class SoapClient used to request SOAP services. Then encourage the developer to implement those methods/requests done in the tests, but with mocked data.  I'd also expect the tool/s to have the possibility to run these verifications without running the tests.  ",
        "Even when I'm not specialized in testing at all, this study resulted very interesting to me because I have seen scenarios with the non-deterministic problem, and also why not to tell, because I'm generally interested in the topics related to software engineering.  I also think that this study could be extended to be more general and not specific for the PHP language, except of course for the existing tools questions.  I hope my answers help, and even when I'm not developing in PHP for the time being, I'd also like to hear about the results.",
        "Daniel Duarte",
        "danieldd.ar@gmail.com"
      ],
      [
        "20/04/2021 16:25:06",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Richmond, Canada",
        "High school student",
        "Student",
        "Never",
        "5",
        "I check for differences in environments. It would depend on the error thrown. ",
        "Sometimes",
        "Rarely",
        "Rarely",
        "None",
        "I use CI/CD such as Travis for testing Python. ",
        "No",
        "CI/CD tools such as Travis perform tests on multiple environments. ",
        "Linters often detect errors ahead of time. ",
        "Detection, prevention and correction",
        "I'm not too familiar with what a non deterministic test is so I Googled it. ",
        "Kevin",
        "Kevinlu1248@gmail.com "
      ],
      [
        "20/04/2021 19:01:02",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Portland, OR USA",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "2",
        "Check the environment and the build to see what is different.",
        "Rarely",
        "Rarely",
        "Often",
        "Mock external dependencies. Segregate tests with external dependencies.",
        "Check that dependency is available, then only run tests if dependency is available.",
        "Integration tests.",
        "no",
        "no",
        "Configure with a list of dependencies, check dependencies and flags tests if dependencies are unavailable.",
        "In general non-deterministic tests are to be avoided.",
        "Dan Revel",
        "dan@nopolabs.com"
      ],
      [
        "21/04/2021 02:29:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Montreal, Canada",
        "Undergraduate",
        "Software engineer",
        "Rarely",
        "10",
        "Try to see if there was a difference in our local environments, easy fix is usually docker",
        "Rarely",
        "Rarely",
        "Rarely",
        "I don’t come across them often and so i don’t take many precautions against them",
        "None",
        "None",
        "None",
        "None",
        "N/A",
        "",
        "",
        ""
      ],
      [
        "21/04/2021 07:37:14",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "ShengZheng/China",
        "Master's degree completed",
        "Software developer",
        "Sometimes",
        "2",
        "Check whether there are differences in the environment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Keep the environment unified",
        "no",
        "no",
        "no",
        "no",
        "no",
        "no",
        "YeZi",
        "875307054@qq.com"
      ],
      [
        "21/04/2021 11:26:15",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Buenos Aires / Argentina",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "Asking under what conditions de test was run",
        "Rarely",
        "Often",
        "Often",
        "always test with and without conection to apis and internet",
        "No",
        "No",
        "No",
        "No",
        "Tips for scenarios that the developer does not always consider",
        "",
        "Junior Ayala",
        "elessar303@gmail.com"
      ],
      [
        "21/04/2021 13:06:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Toronto/Canada",
        "Graduation completed",
        "Team Lead",
        "Sometimes",
        "8",
        "Check the machine's code version,  then the development setup,  the required external services, including VPN",
        "Sometimes",
        "Never",
        "Rarely",
        "Document the exceptions in KBs",
        "No",
        "No",
        "No",
        "No",
        "Standardized virtual dev environment, system check before starting the testing batch",
        "Congratulations for your initiative. ",
        "Humberto Ribeiro de Souza",
        "humbertosouza@outlook.com"
      ],
      [
        "23/04/2021 20:35:59",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Squamish, BC Canada",
        "Master's degree completed",
        "Secondary Teacher and k-12 sector technologist",
        "Never",
        "7",
        "I do not do this.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Good logic? Screening inputs for possibility",
        "nope",
        "nope",
        "no",
        "no",
        "Second order tests that asses output based on known-result input.",
        "",
        "Evan Sharp",
        "ego@evansharp.ca"
      ],
      [
        "24/04/2021 10:51:31",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Montreal/Canada",
        "Master's degree completed",
        "architect",
        "Always",
        "8",
        "isolate the test to determine what makes is a potentially weak test",
        "Often",
        "Often",
        "Often",
        "better understand the dependencies and properly locate the tests that have external dependencies. When possible use contract-based testing and leave those integration tests to a very minimum",
        "nothing other than the one reported above",
        "fragile tests",
        "pact.io",
        "no",
        "help me reduce the dependency on such tests or at least better identify those",
        "can you share the results of the survey?",
        "Mario Bittencourt",
        "mbneto@gmail.com"
      ],
      [
        "25/04/2021 05:34:54",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "China",
        "PhD completed",
        "Software developer",
        "Often",
        "8",
        "I ensure the environment is exactly the same as the one in my machine. Create the same environment, the same condition and run the test again. This include making sure that network connection is activated. When the environments match, and the tests still failed. I looked at external dependencies in the test code.",
        "Often",
        "Sometimes",
        "Always",
        "Avoid any non-deterministic call in the test code. That is, we must avoid calls to some function (such as network) or randomess in the test code. Except if random is part of the code being tested.",
        "I don't have any sequence of steps to execute",
        "No aware",
        "Non",
        "Non",
        "N/A",
        "One can override native PHP function that create randomness and avoid non-deterministic test",
        "",
        ""
      ],
      [
        "25/04/2021 12:25:29",
        "I agree",
        "7 - 10 years",
        "Up to 1 year",
        "Santa Fe, Santa Fe, Argentina",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "7",
        "I'll do docker container to have the same test environment and try not to rely on external sources",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock external services if I cannot reach them",
        "Api services calls, such as maps, firebase or database related",
        "I don't think so",
        "Not yet",
        "Waiting to fail xD",
        "Harcoded links specially",
        "I'm really looking forward to know about the results of this research! :)",
        "David Maximiliano Sosa",
        "maxi3390@gmail.com"
      ],
      [
        "25/04/2021 13:33:10",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Virginia Beach, USA",
        "High School",
        "Software engineer",
        "Rarely",
        "3",
        "debug with error logging",
        "Rarely",
        "Never",
        "Rarely",
        "extra logging for possible failures",
        "no",
        "no",
        "no",
        "no",
        "identify methods that could have non deterministic results ",
        "",
        "Zak Rabe",
        "zakrabe@gmail.com"
      ],
      [
        "25/04/2021 14:18:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Matawan, New Jersey, United States",
        "Undergraduate",
        "Platform Engineer",
        "Sometimes",
        "8",
        "Find out what conditions were different on the other machine. Whether it was a configuration issue, or an environment issue, or an overall logic issue.",
        "Rarely",
        "Rarely",
        "Rarely",
        "When writing the tests I make sure if I change something in the particular bit of code it tests. The test will completely fail. I do this by actually changing the code to make the test fail.",
        "Do not have one, at this point in time",
        "I am not",
        "We do not use any tool that tests for these things. A code review should catch these.",
        "We do not use any tool that prevents these things. Aside from code reviews.",
        "When the tests are written they should have a through code review.",
        "Seemed like there were a lot of the same questions. Aside from that seemed good.",
        "Vinnie Marone",
        "vinnie.marone35@gmail.com"
      ],
      [
        "25/04/2021 15:55:58",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Salt Lake City UT USA",
        "Master's degree completed",
        "Software engineer",
        "Never",
        "10",
        "Inquire about difference in environment",
        "Sometimes",
        "Never",
        "Never",
        "Run in a controlled environment",
        "No",
        "No",
        "No",
        "Not explicitly, just control the test environment",
        "Sufficient specification of test environment",
        "Non-determinism is usually a function of the environment not the software",
        "",
        ""
      ],
      [
        "25/04/2021 16:15:04",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Memphis, Tennessee, US",
        "PhD completed",
        "Software Consultant",
        "Sometimes",
        "5",
        "Check for differences in machine configuration",
        "Often",
        "Often",
        "Often",
        "Full preparation of host machine to specification",
        "Varies",
        "system configuration errors",
        "all by hand",
        "all by hand",
        "You need to be alert",
        "",
        "Greg Blumenthal",
        "greg@gmbs-consulting.com"
      ],
      [
        "26/04/2021 06:24:34",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Finland & France",
        "Graduation completed",
        "Designer Developer",
        "Never",
        "5",
        "Start digging apache/php settings",
        "Never",
        "Rarely",
        "Rarely",
        "None",
        "None",
        "None",
        "None",
        "None",
        "Good question! Usually people want code to be fixed automatically.",
        "This was easy! Probably knew a little too little of the subject.",
        "Jonatan Eriksson",
        "jonatan@tsto.org"
      ],
      [
        "26/04/2021 06:39:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Guangdong China",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "3",
        "check out if there is any evironment difference between two machine",
        "Sometimes",
        "Often",
        "Rarely",
        "it is time-comsuming",
        "environment differ",
        "no",
        "no",
        "no",
        "run fast and easy to use",
        "this study make me notice the non-deterministic test area",
        "Gary",
        "nutto.pan@gmail.com"
      ],
      [
        "26/04/2021 13:07:21",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Pittsfield MA",
        "Master's degree completed",
        "Software developer",
        "Never",
        "5",
        "Give up and test the component manually. (I'm being honest. This is not ideal, but due to limited budgets on our client projects, this is usually what happens)",
        "Rarely",
        "Never",
        "Never",
        "n/a",
        "no",
        "no",
        "no",
        "no",
        "n/a",
        "not really applicable to our normal workflow... sorry ",
        "Peter Wise",
        "peter@squarecandy.net"
      ],
      [
        "27/04/2021 04:21:13",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Mainz/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "5",
        "Verify the test environment. We use docker to have a very similar environment in a team. Also the configuration is managed.",
        "Sometimes",
        "Rarely",
        "Never",
        "We try to mocks for external interfaces. The used test framework provides functions to do that.",
        "It depends about we are talking here. If it's a unit test, we try to prevent that behavior. For functional tests it's ok to call a real interface (with all the down sites).",
        "Functional testing. Maybe acceptance testing (depending on the definition).",
        "no",
        "no",
        "At least a static code check to find calls to external resources. Maybe a plugin for PhpStorm.",
        "Interesting. Never thought so much about non-deterministic tests.",
        "Christian Münch",
        "christian@muench-worms.de"
      ],
      [
        "27/04/2021 04:54:33",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Duesseldorf/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "Compare machines and execution environment (php version, extensions, etc), code state (modifications, revision). If that does not solve it, run a step-debugger or do poor-mans-debugging with var_dump.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Run tests in isolated environments, like docker, with restrictions on resources like network or disk.",
        "No.",
        "No.",
        "Generally not, but linters can be used to detect the usage of ext/curl and other subjects.",
        "PECL/runkit to mock php internals.",
        "* Detect: output a machine readable format for CI integration * Prevent: If configured, let tests fail for having non-deterministic side-effects * Correction: No tool should correct this on its own. It may suggest alternatives, though",
        "All the best and good luck!",
        "",
        ""
      ],
      [
        "27/04/2021 04:57:11",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Berlin",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "5",
        "Debug on that other machine. Reproduce. Fix.",
        "Never",
        "Never",
        "Never",
        "None, I hardly have that case.",
        "No.",
        "No.",
        "No.",
        "No.",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:29:10",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Lübeck/Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "9",
        "Check the versions of anything involved. Check again locally. Check for any changes not (correctly) committed to the code. Debug the failing test.",
        "Rarely",
        "Sometimes",
        "Often",
        "Most of the time I just make sure the test is not relying on external factors (time passing, network being available, randomness involved, …)",
        "No…",
        "🤷‍♂️",
        "No",
        "No",
        "🤷‍♂️",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:58:44",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Münster/Germany",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "8",
        "Checking the dependencies (e.g. installed libraries, composer packages, software versions).",
        "Rarely",
        "Never",
        "Never",
        "Common error handling (e.g. try-catch around the external request).",
        "/",
        "/",
        "/",
        "/",
        "/",
        "",
        "Kai Neuwerth",
        "kai@neuwerth.me"
      ],
      [
        "27/04/2021 07:51:01",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Often",
        "9",
        "Find the difference between his and mine setup, if there is none, check the test validity.",
        "Rarely",
        "Never",
        "Rarely",
        "Good Test Design and good Environment Preparements",
        "See https://ruby.sadi.st/Heckle.html and https://infection.github.io/guide/ (Mutation Testing)",
        "No",
        "https://infection.github.io/guide/",
        "No",
        "https://infection.github.io/guide/",
        "",
        "Herbert Maschke",
        "thyseus@gmail.com"
      ],
      [
        "27/04/2021 08:17:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Würzburg / Germany",
        "Undergraduate",
        "Software developer",
        "Never",
        "5",
        "Check the test and / or the code",
        "Never",
        "Never",
        "Never",
        "None :-)",
        "no",
        "no",
        "no",
        "no",
        "dont know?",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 08:43:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Dresden, Germany",
        "Bachelor's degree completed",
        "I was a software developer, then gradually became more of an software engineer and nowadays am a consultant and manager for software development projects.",
        "Sometimes",
        "7",
        "I'd search for differences in the runtime environments to figure out, which external factors could have influenced the test. Then I try to improve the test in order to check those dependencies as well.",
        "Sometimes",
        "Rarely",
        "Often",
        "For each test I try to figure out if there are any dependencies from external factors. If there are, I write additional tests explicitly checking for those factors.",
        "If the non-determistic behaviour is intrinsic, I would not write a test expecting a deterministic result, but just perform a plausability test instead.",
        "No.",
        "No.",
        "No.",
        "That's hard to say. I'd expect the tool to at least recognize external dependencies, but that would be really hard to do, I guess.",
        "Very interesting topic! Good luck with your degree!",
        "Sebastian Meyer",
        "https://github.com/sebastian-meyer"
      ],
      [
        "27/04/2021 08:52:26",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "self-educated",
        "Software Quality Consultant",
        "Never",
        "10",
        "That only happens, if I rely on a dependency that is not explicitely stated in composer.json but installed locally. In that case, I fix composer.json to also reflect that dependency.",
        "Never",
        "Never",
        "Always",
        "Mocking external dependencies. External services can always be mocked using Docker containers.",
        "I completely avoid non-deterministic tests, so there's never a need to execute them.",
        "Those tests are simply broken.",
        "No",
        "No, just code review.",
        " I personally don't need such a tool, it is superseeded by my awareness. Nevertheless, I know people who should use it ;)  Since mock genereation is not the easiest task, a mock generator could be useful, i.e., create a Docker container with senseful data that mimics the original service just as much as needed by the tests. The mock is generated once, when the connection is available, but is then independent from any outbound connection.",
        "I'm interested in the results of the survey. Please send it to nbraczek@bsds.de, if possible.",
        "Niels Braczek",
        "nbraczek@bsds.de"
      ],
      [
        "27/04/2021 09:20:13",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Duisburg/Germany",
        "Fachabitur, lower as university + trained as IT specialist in application development",
        "Software developer",
        "Rarely",
        "8",
        "Telling him \"it works on my machine\". Joke aside, inspectiong the code and triying to find the differences of his and my machine and envioment which could affect the test code.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "Use a general \"enviroment\" or general test before testing the code and/or write detailed error messages/logs why the test failed.",
        "phpunittests? Not sure what is meant, so \"no\".",
        "No",
        "No",
        "No",
        "Checking the enviroment (like my general test)",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 10:06:57",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin/Germany ",
        "Undergraduate",
        "Engineering Lead ",
        "Sometimes",
        "10",
        "I would typicslly step through the test case with a debugger. I'll be likely looking for branching (if, switch, etc) logic based on random, time or other  external resources. (In other languages data races are just as common)",
        "Rarely",
        "Rarely",
        "Often",
        "Helper classes which use external sources by default but let tests override it",
        "No",
        "No",
        "Not in PHP.",
        "No.",
        "I'd expect them to listen potential issues. I'd probably run them locally on commit.",
        "",
        "Peter Aba",
        "peter@peteraba.com "
      ],
      [
        "27/04/2021 10:31:42",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Berlin/Germany",
        "Graduation completed",
        "Engineering Manager",
        "Often",
        "6",
        "I compare our environment details (configurations, environment variables) and connectivity with external services involved.  I always advise my teams to use a common environment by making use of Docker/docker-compose or Virtual Machines.",
        "Rarely",
        "Rarely",
        "Often",
        "I encourage TDD practices (which builds majority of tests) using Unit tests only. Unit tests by convention must contain no I/O and rely on mocks where necessary.  Date/Time units that need to be tested should use \"relative time\" as much as possible in order to avoid time bombs such as new years eve build breaks.",
        "I usually understand non-deterministic tests as tests that connect components from outside the software's boundaries (reading from a disk, network..). So normalising the environment using VMs and common shared configurations is already a good start.  Sharing databases and services is also ideal and, when not possible, make use o migrations and conventions that make sure such tests will only use data provided by such migrations.  Another option that I use take is to spin up fake services that will return the expected response (force a response HTTP 2xx, 4xx, timeout exceptions...)",
        "No",
        "No",
        "No. As I mentioned before, I often use a mix of conventions and shared environments in order to reduce the amount of non-deterministic tests.",
        "Thinking of I/O as the source of all evil, I can envision a tool that monitors, takes snapshots and replays or mock network transactions for specific tests.  This way a test framework (such as phpunit or pest) may have different test profiles for each test in a test case. Potentially using a common \"given\" method (thinking of \"given/when/then\" testing approach) or annotations.",
        "Questions are very interesting and I'd be keen to read the output of your research. I must say that the video showing an example of non-deterministic tests created a huge bias on my responses, because I mostly think of your network exception example. I hope that's intentional.  I believe not differentiating test types can mislead people (unit/integration/e2e tests to name a few) and I hope the lack of guidance there is intentional.",
        "Níckolas Da Silva",
        "nawarian@gmail.com"
      ],
      [
        "27/04/2021 10:36:44",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Berlin, Germany",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "4",
        "For unit testing: - Check if such a test relies on external dependencies - Replace these hard dependencies (if any) with interfaces - Mock or stub these interfaces  For integration tests: - Add all stateful dependencies to docker containers - Make sure to rely on anything else but containers ",
        "Rarely",
        "Never",
        "Sometimes",
        "For Unit tests: never rely on stateful dependencies For Integration tests: Docker/containers for stateful dependencies",
        "-",
        "-",
        "-",
        "Docker",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 12:59:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Stuttgart Stralsund ",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "9",
        "Debug it! ",
        "Rarely",
        "Rarely",
        "Often",
        "Make e.g. sure external deps are mocked ",
        "...",
        "No",
        "No",
        "No",
        "No",
        "",
        "Phil ",
        "Phiamo@gmail.com "
      ],
      [
        "27/04/2021 20:25:09",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Germany",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "3",
        "Inspect the environment and examine the logs. ",
        "Often",
        "Never",
        "Never",
        "Depending on what type of tests I’m writing. Unittests have no external dependencies and work within a clearly defined scope. Functional tests or integration tests are by nature often non deterministic. ",
        "Don’t get this question. ",
        "Infected tests ",
        "No",
        "No",
        "/",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 01:16:37",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Düsseldorf/Gernany",
        "Undergraduate",
        "CEO (I used to be a developer, though)",
        "Rarely",
        "7",
        "Find the error in the tests",
        "Rarely",
        "Always",
        "Always",
        "Code-Reviews are done before code gets merged",
        "phpunit executes the tests, but I think I don‘t understand the question.",
        "Testing external dependencies should be done in integration tests. The integration tests may fail due to missing conbectivity and are re-run multiple times to verify the integration works",
        "no",
        "no",
        "detection, I guess?",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:50:25",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Pasig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "I evaluate the environment the test was performed on, specifically if there are huge differences in its core stack (was the test ran on a Linux environment or a Windows one?) I also extract the exact error to determine the next course of action.",
        "Always",
        "Always",
        "Often",
        "We usually assume through policy that a test environment MUST meet the expectations in the specification documents of the project. It is well-clarified throughout the team that such differences in expected environments will require a deeper analysis of the encountered errors and will be a significant cause of delay.",
        "None",
        "None",
        "None",
        "None",
        "Well-written test cases to clearly report back what caused the non-deterministic test to fail.",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:58:48",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Makati, Philippines",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Investigate",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mock the dependencies and use test or sample data",
        "PHPUnit",
        "Not aware",
        "Not aware of any tools on this",
        "Not aware of any tools on this",
        "Not sure",
        "",
        "Alexander Torrijos",
        "artorrijos@gmail.com"
      ],
      [
        "28/04/2021 03:24:15",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "1. rerun the test. 2. check versioning /device differences 3. debug the test",
        "Rarely",
        "Rarely",
        "Never",
        "None.",
        "I sometimes have to make async, external api calls and then just wait for a timeout. ",
        "no",
        "maybe SonarQube?",
        "maybe SonarQube?",
        "usual CI, with build features, code analysis, and adaptable to many platforms",
        "Tho I know what SW-Testing (and TTD) is, I rarely use it in personal projects (when I'm the only contributor anyway) which is quite often. Also, I know and worked with PHP for some time, but for sure wouldn't call me a PHP-expert and I never even wrote a single test in PHP.",
        "Henrik Storch",
        "thisisthefoxe.dhbw@gmail.com"
      ],
      [
        "28/04/2021 03:43:23",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Stuttgart, Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "8",
        "Investigate the error on the other machine. Try to reproduce the issue locally. Ensure that the underlying problem is understood. Try to make the test deterministic or if impossible try to determine the factors involved and skip the test if problematic condition is detected.",
        "Rarely",
        "Sometimes",
        "Often",
        "Reduce external dependencies, esp. operating system, filesystem, etc.",
        "Not sure what's meant with this question",
        "randomly failing tests",
        "No.",
        "No.",
        "Detect problematic use of functions that may cause non-deterministic behaviour. ",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 04:14:44",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Barcelona/spain",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "5",
        "I would adk him to show me the code",
        "Rarely",
        "Rarely",
        "Rarely",
        "External dependencies are wrapped in a new class or i add general exception catching for the call",
        "No",
        "No",
        "No",
        "No",
        "No idea",
        "Interesting topic",
        "",
        ""
      ],
      [
        "28/04/2021 04:37:42",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Olongapo",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "1",
        "use docker, and mock api test",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Just use Docker, and Mock the Api",
        "None , I just use my own method of test driven development , And i Do  run my code in 3 platform mac, windows and linux.",
        "none",
        "github workflow now can run test on all platform making sure your test pass in all platform",
        "NOne",
        "None",
        "",
        "Uriah",
        "codeitlikemiley@gmail.com"
      ],
      [
        "28/04/2021 05:01:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Bonn Germany ",
        "Master's degree completed",
        "Software engineer",
        "Always",
        "7",
        "Find out why this happens. Than the code to make the test deterministic. If that is not possible, for example like in your video, create a second test, that tests against a mock or a stub, so that one is deterministic. Then use the other test in a different testset, that runs against the third party application, to check, where the api still works. Usually these tests have a rerun possibility. The deterministic test set should never fail, the other one could. ",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mocking and stubbing, predetermined test data, e.g.",
        "E sometimes use retry mechanisms, and in your video example those tests would test the Internet connection before running the test, so that we know, that was the cause for the failure. ",
        "Flaky tests",
        "No. ",
        "Not automatically. Some people have rerun mechanisms for their tests, but I do not like those automated Nachsaisons, because it makes you not taking care. ",
        "Showing known causes",
        "I would like to see your resulting paper please, falk@kuehnel.du",
        "Falk Kühnel",
        "falk@kuehnel.eu"
      ],
      [
        "28/04/2021 05:11:34",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Passau/Germany",
        "Master's degree completed",
        "Hacker / Software hacker / Hacker aka tester/debuger/developer/creator",
        "Sometimes",
        "7",
        "1st) check configs, 2nd) get screen sharing online",
        "Rarely",
        "Rarely",
        "Rarely",
        "don't do too much in one test, do many tests based on just a few.",
        "-",
        "-",
        "-",
        "-",
        "should be plugin for phpstorm and for the other idea group like webstorm",
        "-",
        "",
        ""
      ],
      [
        "28/04/2021 05:53:04",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Taguig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "6",
        "read the error message if available or check if the another machine and my machine has same version of php ",
        "Rarely",
        "Rarely",
        "Often",
        "run unit test to locate the non deterministic code and revise it",
        "no",
        "no",
        "no",
        "no",
        "cpu profiler",
        "sorry, some answers are not substantial",
        "Frex Cuadillera",
        "fcuadillera@gmail.com"
      ],
      [
        "28/04/2021 06:17:52",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "3",
        "Docker",
        "Often",
        "Rarely",
        "Rarely",
        "Include as input whatever can change in the environment that makes the test deterministic",
        "N/a",
        "None",
        "None",
        "Docker and containerization",
        "Don't know",
        "Good luck",
        "Claude",
        "claudekirke@gmail.com"
      ],
      [
        "28/04/2021 06:47:20",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Germany Rosenheim",
        "Graduation completed",
        "Senior Backend Developer, Lead Product Developer",
        "Rarely",
        "8",
        "Identify and resolve the differences between the two test environments.",
        "Rarely",
        "Rarely",
        "Often",
        "Replace external APIs with local dummy APIs to create deterministic API responses/behavior (mostly based on docker)",
        "No",
        "\"Snowflake Tests\": They will break over something rather irrelevant or sensitive external condition. These are tests that will fail often in your pipeline and they will be successful if rerun.",
        "No. Sometimes our CI/CD Pipeline will break for no reason, which is an indicator for such (bad) tests.",
        "We don't test or rely on external resources. It's good practice to Mock/Stub the parts of your code that rely on external resources. PHPUnit is used to create Mocks/Stubs.",
        "The tool should detect if any external resource is used, identify the protocol, request and response contents and format and automatically derive a stub, which can be used to replace the external call. This information must be exportable as file to be commited with the tests and used by others to use the tool and the configuration to run the tests against the mocked API of the tool, not the Live-Api. Nice to Have: An UI to modify the detected reponses",
        "Good luck",
        "",
        ""
      ],
      [
        "28/04/2021 07:39:30",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Philippines",
        "Master's degree in progress",
        "Solutions Architect",
        "Rarely",
        "3",
        "Determine the similarity and difference in test execution environment",
        "Rarely",
        "Rarely",
        "Always",
        "With defensive coding practices, have the code define and ensure satisfaction of requirements before executing their function.",
        "No, it's a bad practice",
        "No",
        "No",
        "Rather than a tool, it's basic coding practice to ensure all requirements for success of your code is in place.",
        "Detection of dependencies to functions beyond the current system's control, but paradoxically it means everything",
        "The term 'non-deterministic test' is a misnomer, there may be no changes in the code, but we have observable and remediable changes on parameters or environment variables (i.e. internet connection) beyond control of the software that the PHP code depends on. ",
        "Tito Mari Francis Escaño",
        "titomarifrancis@gmail.com"
      ],
      [
        "28/04/2021 08:56:15",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Manila/Philippines",
        "Graduation completed",
        "Development Manager",
        "Often",
        "10",
        "Usually, discuss the issue with the developer and advise for mitigation. Sometimes, we also incorporate it already during brainstorming / grooming and discuss that this should have been included already in the beginning and not on the end.",
        "Sometimes",
        "Often",
        "Often",
        "We make as much realistic scenarios as possible. Also, on the code level, we tend to increase the support of the previously encountered scenarios and have it applied on future development.",
        "One is to setup automated testing mechanism being executed on regular / daily basis. This way, we can easily catch the potential issues during the execution and compare on the last result. From there, we can investigate / dig further what may caused it and make the necessary adjustment so that it will not happen again on the next run.  In addition, regular code analysis of both test case and also the main code itself is beneficial as you may not know that somewhere before or down the line, an incorrect argument or method may have caused the non-deterministic test.  Another one is to increase the test suites. Granted that one scenario is not enough but as mentioned, once we encounter the issue somewhere, it is automatically added on the list to be tested and have it incorporated on the test case and also on the code.",
        "Usually, we do isolation as sometimes, the application on one environment only shows the issue as compare to others. Once we isolate the application in question, we perform the test, either automated or manual, so that we can have proper verification that we need. Since its already isolated, we tend to perform other change of environment (like pretending of slow connection and like) as that shows a different side of story as well.  In relation to isolation, we tend to create a different test suite so that we can make sure that during execution, it will not be that invasive unlike the usual test suite and can be executed multiple times in different scenarios.",
        "Not that I know of specifically as we tend to rely on collective usage and adapt as we go along.",
        "Probably it can be covered at some point by code analysis like SonarQube. Because with SonarQube, its not just the code is being scanned, but also the potential coverage and also some duplicates of the test cases generated.",
        "I guess would be able to cover certain scenarios that usual testing won't be able to cover. Probably intelligent enough to advise that certain issue can be achieved by this scenario and so on.",
        "Really looking forward on the result of this study because its an eye opener to developers generating those applications and solutions which may lead towards service resiliency and better security.",
        "Rellmon P. Ponce de Leon",
        "raremon@gmail.com"
      ],
      [
        "28/04/2021 10:43:10",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Davao city, Philippines",
        "Graduation completed",
        "Software developer",
        "Often",
        "7",
        "View logs",
        "Sometimes",
        "Sometimes",
        "Often",
        "Add paramaters to run the test multiple times.",
        "no",
        "nope",
        "nope",
        "nope",
        "nope",
        "Thanks and good luck",
        "Goper",
        "goper.zosa@gmail.com"
      ],
      [
        "28/04/2021 11:58:57",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "7",
        "Check for time issues (i.e. mock 'now'), reduce integration tests with unreliable services to a minimum, mark them as unstable",
        "Rarely",
        "Sometimes",
        "Often",
        "Make boundaries to external services clear, easily mockable",
        "-",
        "Unstable tests",
        "No",
        "No",
        "Detect external calls in tests or time dependent logic (suggest injecting a clock component)",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 12:13:06",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Philippines",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "check the difference between configurations, then compatibility and then difference in environment",
        "Rarely",
        "Sometimes",
        "Rarely",
        "making sure to look for boolean results",
        "havent really",
        "none",
        "none",
        "none in particular",
        "i am not really verbose in testing",
        "I am actually a frontend developer, I have worked with php for just a short period so it might be better to look for respondents who are truly backend",
        "Sanz moses",
        "web@sanzmoses.com"
      ],
      [
        "28/04/2021 13:08:01",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Bohol, Philippines",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "I usually look for relevant error messages in the console and in the logs.",
        "Sometimes",
        "Always",
        "Always",
        "I mock the causes of the non-deterministic tests. I also test the cause separately and sometimes manually.",
        "If the code requires an external service, my usual step is to mock that service when writing tests.",
        "No",
        "No",
        "No",
        "Pointing the exact cause of the non-deterministic behavior like if I cannot reach the external service required due to a severed internet connection.",
        "Good luck!",
        "",
        "ejillberth@gmail.com"
      ],
      [
        "28/04/2021 21:04:10",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Manila, Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Find the difference between my machine and the other persons machine",
        "Sometimes",
        "Always",
        "Often",
        "Have a source of truth, like CI, with the correct configuration. Use virtual machines for reproducibility. Avoid code and tests that produce non-deterministic output, like RNGs, timezone libraries, unmocked classes.",
        "no",
        "race conditions, intermittent failure, false positive",
        "no",
        "no",
        "i dont really use one, mostly its detected by the test runner itself",
        "",
        "Kelly Navarro",
        "gabrnavarro@gmail.com"
      ],
      [
        "28/04/2021 22:43:52",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "Check operating system, check network connectivity or whitelisting to external API, check environmental variable",
        "Often",
        "Often",
        "Often",
        "Separate non-deterministic test like creating a new test suite so that it can be executed separately from internal business logic test case",
        "From test creation, separate non-deterministic tests externally and group them together according to their purpose. Grouping together tests dependent on operating system, tests dependent on connectivity, or tests dependent on other microservices. If it is okay to bypass the dependency and we will only require the target data/response, it could be replaced by mock testing.",
        "Dependency testing as I could say, as it depends on multiple variables in order for it be success.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "If there's a tool, maybe it will detect first the connectivity of the non-deterministic tests and then catch its error to notify the executor of the test. Or it can save such scenario on time of creation like the response of the third party API and store it into a folder so that it can be used as referenced for future non-deterministic tests.",
        "The purpose of this study is good to the point that it can increase the developer/tester experience in tackling non-deterministic tests.",
        "Arvin Reynoso",
        "reynosoarvin@gmail.com"
      ],
      [
        "29/04/2021 02:04:20",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Bacolod City",
        "Graduation completed",
        "Software developer",
        "Always",
        "6",
        "list down your apps machine what you install and install to other machine or use docker..",
        "Sometimes",
        "Always",
        "Always",
        "set workflow of your code structure, be strict on data types and always restart or hard refresh",
        "yes because you should take down list of the error with solution",
        "yes I'm strict when it comes to variables",
        "no",
        "no",
        "none",
        "Such a nice survey.. so interesting",
        "edrian jan solatorio",
        "edrianjansolatorio@gmail.com"
      ],
      [
        "29/04/2021 04:01:19",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Frankfurt/Germany",
        "vocational technical diploma",
        "Software developer",
        "Rarely",
        "3",
        "Analyze the error message, in most cases there are differences in the conditions between developer-machine and another",
        "Rarely",
        "Rarely",
        "Rarely",
        "avoid depending on 3rd party services mostly, if not possible, catch possible issues and output accordingly",
        "no",
        "external service/data dependent",
        "no",
        "no",
        "analyze what parts of the code are refering to external services",
        "",
        "Michael",
        "d00p@froxlor.org"
      ],
      [
        "29/04/2021 07:41:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin, Germany",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "7",
        "It depends on the kind of test. Browser tests (written in PHP or any other language) for example are often non-deterministic and require timeouts to be configured for the completion of certain interactions. In such cases the test may fail because the execution time exceeds the default timeout specified for the test and needs to be increased.  In other cases the test may require the software to be configured in a way that cannot be done within the test setup. Investigating whether the test outcome is influenced e.g. by environment variables would be something that I'd check in such a scenario.",
        "Often",
        "Often",
        "Often",
        "Peer review and running tests as part of automated continuous integration tests.",
        "I don't understand the question.",
        "\"tests with non-deterministic behavior\" is the term I would use. Browser tests and edge to edge tests come to mind as classes of tests that often fall into this category.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "It should cause the affected tests to fail or trigger some sort of warning.",
        "",
        "",
        ""
      ],
      [
        "29/04/2021 21:58:21",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Remote for US, Belgium and Argentina",
        "Graduation completed",
        "Software engineer",
        "Always",
        "5",
        "I would try to reproduce it and change the test so it works aisolated to the environment",
        "Sometimes",
        "Sometimes",
        "Rarely",
        "I run them in a virtualized environment and so do the rest Of the devs ",
        "No",
        "No",
        "No",
        "No",
        "To cover every possible scenario",
        "Good luck with your study! ",
        "Vicky Jauregui ",
        "jaureguivictoria@gmail.com"
      ]
    ],
    "classifications": [
      "timestamp",
      "terms",
      "groupsInAnswer",
      "groupsInAnswer",
      "cityState",
      "groupsInAnswer",
      "groupsInAnswer",
      "negativeOrList",
      "openQuestion",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "groupsInAnswer",
      "feedback",
      "groupsInAnswer",
      "groupsInAnswer"
    ],
    "manualSettings": {}
  },
  "1620317279528": {
    "titles": [
      "Carimbo de data/hora",
      "Check the \"I agree\" option if you have read and agree to the consent form.",
      "How long have you been working with PHP?",
      "How long have you been working with PHP software testing?",
      "Where do you work? (City/Country)",
      "What is your academic level?",
      "Regarding your profession, what title would you give yourself?",
      "Have you ever dealt with non-deterministic software testing of any kind?",
      "On a scale of 1 to 10, how problematic do you consider the occurrence of non-deterministic tests in software projects?",
      "Let us consider the following scenario: You have developed a test code, and you were successful at running it on your machine. However, when you or someone else ran the same test on another machine, it failed. What action do you usually take when face such a scenario?",
      "How often do non-deterministic tests appear in your workflow?",
      "How often do you employ non-deterministic tests correction practices in your workflow?",
      "How often do you employ non-deterministic tests prevention practices in your workflow?",
      "What precautions do you take to prevent the tests you write from being non-deterministic?",
      "Do you use (or be aware of) any routine for the execution of non-deterministic tests? If so, could you please detail it/them?",
      "Are you aware of any other name associated with \"tests with non-deterministic behavior\"? If so, could you please detail it/them?",
      "Do you use or know any tools to detect non-deterministic tests? Please detail it/them.",
      "Do you use or know any tools to prevent non-deterministic tests? Please detail it/them.",
      "What are the expected features for a tool dealing with (detection, prevention or correction) non-deterministic tests in software projects?",
      "Give your feedback on this study, or comment freely.",
      "What is your name?",
      "What is your email?"
    ],
    "rows": [
      [
        "08/04/2021 18:53:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "France",
        "Master's degree completed",
        "Software developer",
        "Rarely",
        "5",
        "Examine test environment",
        "Rarely",
        "Never",
        "Rarely",
        "Mocking / emulating external resources",
        "No",
        "Tests with external dependencies",
        "no",
        "no",
        "Checking for external dependencies, comparing with previous test runs",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 20:04:13",
        "I don't agree",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 22:31:59",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Banjarmasin, Indonesia",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "I usually check for the other person's project setup, eg: 1. Are they follow the setup instruction correctly? 2. Are they set the correct env variable values correctly?  Related to the tests it self, sometimes I face this issue because: 1. Some random function (eg. php faker) generates an invalid value (usually status_code numbers in integer). 2. Date time value definition related to calculation of holidays (rarely).  But for me, mostly this issue occurs related to the project setup documentation.",
        "Rarely",
        "Sometimes",
        "Always",
        "1. Using mock object and response for the tests related to external API calls 2. Using carbon instance and carbon mock object for date time definition on tests 3. Prevent using random function for particular model attributes, eg: user_role_id, status_code, which I will use for data filtering or where clause on the production code. 4. Update the project documentation if the changes will impact the tests.",
        "I don't really get this question.",
        "I was using term \"intermittent test failures\" for this kind of test issue.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "I don't expect any tool to deal with it, I think I don't need one. Because this issue rarely occurs on my projects. Mostly this issue happen because of my own careless",
        "TBH, I still don't get the point of this research, why do you need these answers, and what the goal of this research.  I just get that: 1. You want to know how often developers facing non-deterministic tests 2. You want to develop some tool to detect and prevent this test issue  But, still not sure about that :D  PS: I didn't understand 1 question (see my answers). If you can elaborate more about it (via email), I'd be happy to answer it.",
        "Nafies Luthfi",
        "nafiesl@gmail.com"
      ],
      [
        "09/04/2021 08:52:22",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Tokyo/Japan ",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "9",
        "Develop and share Docker environments",
        "Rarely",
        "Sometimes",
        "Always",
        "Mocking Disk IO or API calls",
        "None",
        "tests with side effects",
        "None",
        "None",
        "?",
        "",
        "mpyw",
        "mpyw628@gmail.com"
      ],
      [
        "09/04/2021 12:12:40",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "From home in Canada",
        "Graduation completed",
        "Software Developer and Tester",
        "Sometimes",
        "10",
        "Pair with another developer to determine differences in data, language settings or even operating system to debug why the test fails in one environment but not another ",
        "Often",
        "Often",
        "Often",
        "Understand what data is required for the test to pass and determine any “side effects” that might be occurring that could make the test non-deterministic ",
        "No",
        "No",
        "No",
        "No",
        "Clear error messages and the ability to be easily run in in a continuous integration environment like GitHub Actions",
        "",
        "Chris Hartjes",
        "chartjes@littlehart.net"
      ],
      [
        "10/04/2021 11:37:15",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Grand Rapids, USA",
        "Undergraduate",
        "Software developer",
        "Often",
        "4",
        "Try to have THAT developer debug why it's not working on their machine",
        "Often",
        "Sometimes",
        "Rarely",
        "Mocking inside a unit test. However, sometimes we purposely want to to test the entire, connected system and so we do NOT want to mock external things (like databases, APIs, etc)",
        "For tests that rely on an external API call, we try to use an API service that can be used by all devs (e.g. not something that requires a production API key). But mostly... if it makes sense, we would try to mock out these external services. But when we specifically choose to NOT mock them (because the test is most valuable when using the real API), we just \"live\" with the possibility that it may fail sometimes.",
        "We call them \"phantom failure\" tests - tests that fail sometimes but not other times. These are a PAIN. They are actually most commonly associated with Selenium-style tests where, for whatever reason, the interface responds more slowly sometimes, and so our tests fail because they have not waited long enough for something to load.",
        ".",
        ".",
        ".",
        "",
        "Ryan Weaver",
        "ryan@symfonycasts.com"
      ],
      [
        "10/04/2021 11:54:33",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "China",
        "Senior high school in progress",
        "Software developer",
        "Rarely",
        "6",
        "Ask for the environmental parameters of the other party, and reproduce these problems as much as possible. And ask him/her completely delete the software and then re-install it.",
        "Rarely",
        "Rarely",
        "Rarely",
        "None",
        "idk",
        "We usually call it metaphysics",
        "I lack experience in this field",
        "I lack experience in this field",
        "I lack experience in this field",
        "",
        "MlgmXyysd",
        "mlgmxyysd@meowcat.org"
      ],
      [
        "10/04/2021 14:53:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Czech Republic",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "File an issue to fix it, to make the test deterministic",
        "Rarely",
        "Rarely",
        "Often",
        "Mocking objects and/or responses",
        "No",
        "Maybe \"tests with external dependencies\"",
        "No",
        "Mock libraries",
        "Don't know",
        "",
        "",
        ""
      ],
      [
        "10/04/2021 15:29:22",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Kolkata/India",
        "Graduation completed",
        "Software developer",
        "Never",
        "1",
        "Use docker",
        "Never",
        "Never",
        "Never",
        "Nothing",
        "No",
        "Sounds like random probability",
        "No",
        "No",
        "No",
        "Would be good to give a code example of non deterministic test",
        "Anubhav",
        "xprilion@gmail.com"
      ],
      [
        "10/04/2021 18:34:14",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "New York City/USA",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Check the testing environment",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock third-party dependencies",
        "Make sure that dependencies are injectable, then replace the dependencies with mocked objects/results",
        "Non-atomic tests, tests with external dependencies",
        "Nope",
        "Nope",
        "This tool would be able to identify dependencies that interface with third-party software, like curl, cache engines, database engines, etc...",
        "",
        "Hypolite Petovan",
        "hypolite@mrpetovan.com"
      ],
      [
        "10/04/2021 18:59:11",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Frederick, Maryland, USA",
        "Some college",
        "Software developer",
        "Always",
        "9",
        "Confirm that both systems have the same things installed and investigate further",
        "Rarely",
        "Often",
        "Sometimes",
        "Manual review of the tests",
        "Not really",
        "Heisenbugs ;-)",
        "No",
        "No",
        "I don't know",
        "",
        "",
        ""
      ],
      [
        "11/04/2021 00:13:03",
        "I agree",
        "Up to 1 year",
        "Up to 1 year",
        "China",
        "Graduation completed",
        "Software developer",
        "Never",
        "2",
        "Check their PHP version, etc",
        "Never",
        "Never",
        "Never",
        "I never write tests",
        "Nope.",
        "No",
        "No.",
        "NO",
        "I don't know",
        "",
        "Anonymous",
        ""
      ],
      [
        "11/04/2021 07:12:52",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Muncih, Germany",
        "Master's degree completed",
        "IT Consultant",
        "Sometimes",
        "2",
        "Find out why the test fails on other machine.",
        "Rarely",
        "Never",
        "Always",
        "Decouple.",
        "Replace randomness and actual time by pre-defined values that get injected; decouple tests from external resources.",
        "Flaky tests",
        "PHPUnit allows repeated test execution.",
        "For testing external APIs, I hand-code an \"is available\" check. When external resource is not available, I skip the test.",
        "Magically fix all problems? ,-)",
        "I found the term \"non-deterministic tests\" a bit misleading first, because I thought it would refer to testing code with non-deterministic behaviour. The way it was presented in the video, it \"just\" refers to external resources that are not available. Or at least, this is my assumption at this point.",
        "Stefan Priebsch",
        "stefan@priebsch.de"
      ],
      [
        "11/04/2021 09:43:45",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Berlin",
        "Graduation completed",
        "Software engineer",
        "Often",
        "7",
        "try to run all tests on CI, and consider that as main source of truth",
        "Sometimes",
        "Sometimes",
        "Often",
        "avoid network access, avoid random data, avoid waiting for stuff... whatever is not in your control should be avoided",
        "no",
        "no",
        "no",
        "no",
        "locating code that depends on possible not deterministic features (network, time, randomness...)",
        "cool",
        "Asmir",
        "goetas@gmail.com"
      ],
      [
        "12/04/2021 00:22:12",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Hong Kong",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "1",
        "Relicate failed enviroment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Enviromental tests to ensure matching enviroment before running test",
        "Library check etc.",
        "no",
        "no",
        "no",
        "n/a",
        "Probably use a text description for non-deterministic tests, rather than video.",
        "Alan Knowles",
        "alan@roojs.com"
      ],
      [
        "12/04/2021 00:25:33",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Melbourne/Australia",
        "Dropout",
        "DevOps Engineer",
        "Sometimes",
        "5",
        "Teach the other user about Docker, and implement it as a CI/CD pipeline so it always has the same outcome.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Use Docker for coding environments, and use a CI/CD pipeline from my Git repo.",
        "Nope",
        "Nope",
        "Nope, I just do it manually",
        "I use Docker",
        "NA",
        "It isn't really something I've had to worry about, or applies to any of the projects I've worked with.",
        "Dean Lofts",
        "dean@deanlofts.xyz"
      ],
      [
        "12/04/2021 17:29:12",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Columbus, OH, USA",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "Look for potential causes (environment configuration, race conditions, etc.) that may be causing the test to behave differently, then refactor the test method to compensate for or eliminate these differences.",
        "Sometimes",
        "Often",
        "Often",
        "Be explicit with the arrangement of the tests and leverage test doubles to ensure that processes outside of the System Under Test (SUT) are not polluting the test.",
        "If tests fail intermittently when run either locally or in a CI pipeline, determine what is causing the test to fail and, if it's from outside causes, use test doubles or other approaches to ensure consistent results.",
        "Nothing formal, but \"there's a race condition in this test\" gets thrown around a lot.",
        "PHPStan and Psalm can be helpful in catching logical errors, but are not specific to non-deterministic tests. I suppose mutation testing (e.g. InfectionPHP) could also be effective, but I have not explored this.",
        "PHPStan and Psalm (see previous).",
        "Warning when items outside of the scope of the SUT are being evaluated, and recommend approaches to avoid these from being a factor.",
        "",
        "Steve Grunwell",
        "steve@stevegrunwell.com"
      ],
      [
        "14/04/2021 23:15:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Nashville, TN, US",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "10",
        "I try to isolate the variable part of the code that causes the failure and use a mock to ensure that the test is deterministic. If the code should run successfully during a failure state, then I create a mock that simulates failure to ensure the failure state in a deterministic way. One of the best ways to achieve this is to use dependency injection.",
        "Rarely",
        "Always",
        "Often",
        "I make extensive use of dependency injection and use mocks to mock as much as possible, except for the lines of code I am testing.",
        "I do not make use of it currently, but if I needed to test non-deterministic code, I might use the PHP library \"Infection\" to facilitate mutation testing.",
        "Mutation testing",
        "I have used PHP-Mock, which allows you to test non-deterministic PHP functions, such as time() and random_int().",
        "I regularly use PHPStan and Psalm to statically analyze my code for type correctness. This does not fully prevent non-deterministic tests, but it can help.",
        "Analyze code and identify functions and methods that might return values that later code paths may not be able to process.",
        "",
        "Ben Ramsey",
        "ben@benramsey.com"
      ],
      [
        "18/04/2021 23:51:40",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "5",
        "Extension checks, re-check composer packages and other dependancies, validate ini's are matching and PHP versions are equal. ",
        "Rarely",
        "Sometimes",
        "Sometimes",
        "Not in tests; however in CI/CD",
        "No",
        "N/a",
        "N/a",
        "N/a",
        "N/a",
        "",
        "Rama",
        "me@rexsdev.com"
      ],
      [
        "18/04/2021 23:52:46",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Montreal/Canada",
        "Master's degree completed",
        "Backend Developer / DevOps",
        "Rarely",
        "10",
        "Try to reproduce the error on the working machine",
        "Rarely",
        "Never",
        "Never",
        "I always isolate the thing I want to try and remove any link to external services/tools",
        "no",
        "no",
        "PHPUnit infection (Mutation testing)",
        "No",
        "Output the list of potential issues and a quick explanation of what could be the issue for the specific test",
        "",
        "",
        ""
      ],
      [
        "18/04/2021 23:58:13",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Often",
        "7",
        "1. Rule out any environment misconfiguration 2. Evaluate if the use of a non-determisitic test is correct/necessary 3. Rewrite the test such that it passes on both machines",
        "Often",
        "Often",
        "Rarely",
        "- CI - Deterministic thinking",
        "Monitoring them actively",
        "Dynamic tests",
        "No, just manual code review",
        "No",
        "Encourage the use of deterministic tests wherever possible (provide guidance on how to achieve this), bring attention to unintentionally non-deterministic tests",
        "Best of luck with your research!",
        "",
        ""
      ],
      [
        "19/04/2021 00:57:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Ottawa, Canada",
        "Master's degree in progress",
        "CTO",
        "Rarely",
        "10",
        "NDTs are useless.  They have to be solved rapidly before they ruin the whole test suite.",
        "Rarely",
        "Always",
        "Always",
        "Writing specs that respect LoD go a long way.  Isolation is important.  Fixture resets to prevent setup pollution.  After this, you're just eliminating randomness to remove NDT deps.",
        "This question doesn't make sense.",
        "No -- but funny.  At work, we call them GTs.  Garbage tests.  NDTs have no place in a proper test suite.",
        "We use Bamboo CI",
        "You can apply Mutators to test your test suite itself.",
        "I don't really need tools here.  Bamboo CI logs history, we parse for tests that lack rigor, and slate them for repair or replacement.  Tests span from phpunit, to phpspec, to Behat tests (the tests that most often cause these problems, are Behat tests)",
        "Honest feedback, it read as though you were crafting a commercial offering under the guise of an academic survey.",
        "",
        ""
      ],
      [
        "19/04/2021 03:37:01",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Ottawa, Ontario, Canada",
        "Graduation completed",
        "Web developer",
        "Never",
        "10",
        "There could be many external factors effecting the test of such nature. However I use containerized development environment such as Docker, which can element many external factors that can cause different outcome for same code. ",
        "Rarely",
        "Rarely",
        "Often",
        "Making sure the platform stays the same across all the environment and for all developers, Docker helps to implement it.",
        "There can't be silver bullet for all types of non-deterministic test issue. What I would like to see if the test depends on external factors such as host OS settings, hardware requirements or third party API, test result mention that specific dependent issue in fail message. ",
        "Not aware of that ",
        "Not that I know of",
        "Not that I know of",
        "Flags a warning message about external dependency ",
        "",
        "Dushyant Patel",
        "msg2dushyant@gmail.com"
      ],
      [
        "19/04/2021 06:44:05",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Regina, SK, Canada",
        "No secondary education",
        "Software developer",
        "Rarely",
        "8",
        "diagnose environmental differences",
        "Rarely",
        "Rarely",
        "Rarely",
        "none specifically, just internalized knowledge that explicitly non-deterministic test cases (like connecting to an API) are moreso testing the API connection than the validity of your code.",
        "no",
        "no",
        "no",
        "no",
        "dunno",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 07:37:32",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Mississauga, Ontario, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "1 - Check to see if they have all of the changes 2 - Investigate the output and determine the root cause 3 - Fix the root cause of the discrepancy",
        "Rarely",
        "Sometimes",
        "Always",
        "I push the api calls as far from my main code as possible, and then use mocks to avoid it in the non-specific tests.",
        "No",
        "no",
        "no",
        "no",
        "The ability to break dependencies/point them out.",
        "",
        "Andrew",
        "awjudd@gmail.com"
      ],
      [
        "19/04/2021 08:22:04",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Toronto/Canada",
        "Graduation completed",
        "Software Architect",
        "Sometimes",
        "10",
        "Collect the logs, and analyze the failing code visually to identify system/state dependent variance.",
        "Rarely",
        "Sometimes",
        "Often",
        "Granular isolation",
        "We tend to avoid non-deterministic test cases, but mocking the variable components. However, when not possible, we carefully generate the software state to make the outcomes predictable.",
        "state-volatile tests",
        "No",
        "No",
        "Detect system/state specific dependencies.",
        "Intriguing study. Why did you focus on PHP?",
        "Seva",
        "Seva.lapsha@gmail.com"
      ],
      [
        "19/04/2021 09:33:41",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Montreal, Canada",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Usually attach a debugger to see if I can find the point where it diverges, or add logging if it’s a race condition ",
        "Rarely",
        "Always",
        "Always",
        "Reproducible test fixtures and environments, special care around tests related to time",
        "I don’t understand the question",
        "Flaky tests",
        "No",
        "No",
        "Run multiple tests multiple times to detect non deterministic tests. Maybe linting or static analysis to detect common scenarios that can create this situation",
        "",
        "Samuel Schmidt",
        "samuel@dersam.net"
      ],
      [
        "19/04/2021 10:26:27",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Chicago, IL",
        "HS",
        "Software developer",
        "Sometimes",
        "10",
        "Examine possible causes like fixture data being manipulated in other tests & creating implicit dependencies between test cases",
        "Rarely",
        "Never",
        "Often",
        "best practices guide for devs",
        "No",
        "cursed tests",
        "No",
        "No",
        "A warning that highlights the problematic test(s) & states why they're non-deterministic would be great!",
        "",
        "Nick Evans",
        "nick.evans@northwestern.edu"
      ],
      [
        "19/04/2021 11:43:09",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Lancaster, OH, USA",
        "No higher education",
        "DevOps",
        "Rarely",
        "10",
        "attempting to reproduce the problem in my environment; then ask the other user for the output to determine what might be wrong; i can usually determine the problem that way",
        "Rarely",
        "Never",
        "Never",
        "none",
        "no",
        "\"tests with external uncontrolled dependencies\" would be a subset",
        "no",
        "no",
        "no idea",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 13:57:26",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Resistencia/Argentina",
        "",
        "Software developer",
        "Never",
        "1",
        "1. Check if the other part have replicate the enviroment. 2. Check the imputs. 3. Replicate the other part actions.",
        "Never",
        "Never",
        "Never",
        "I Do create atomic tests for my code. Really small tests. ",
        "No",
        "No",
        "No",
        "No",
        "Don't know",
        "https://martinfowler.com/articles/nonDeterminism.html",
        "Ariel",
        "arieltoledo@gmail.com"
      ],
      [
        "19/04/2021 14:09:06",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "10",
        "I ask for more details, like the other person's enviroment.",
        "Rarely",
        "Rarely",
        "Always",
        "I set a seed for random outputs.",
        "Not besides setting a seed for random functions.",
        "No",
        "NO",
        "No",
        "No",
        "Wish you best of luck!",
        "Patricio Tarantino",
        "patriciotarantino@gmail.com"
      ],
      [
        "19/04/2021 15:23:29",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "7",
        "check infrastructure dependencies and debug the test in the failed environment",
        "Sometimes",
        "Often",
        "Often",
        "trying to mock most of infra dependencies",
        "No",
        "No",
        "No",
        "No",
        "detect posible non-deterministic tests",
        "",
        "Piero Recchia",
        "piero.recchia@gmail.com"
      ],
      [
        "19/04/2021 15:26:28",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "San Francisco, Córdoba, Argentina",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "2",
        "I would consider environment differences and try to reproduce the error using the same dataset, or catching the non-deterministic factor by doing an static code review over that test method.",
        "Sometimes",
        "Often",
        "Always",
        "1. Deactivate curl primitives in order to prevent unintentional connections to third party systems. 2. Wrap undeterministic factors generally expressed as PHP primitives like rand() calls, new DateTime('now'), etc. Wrapping those behaviours into mockable dependencies.",
        "No, I don't use any automatic routine.",
        "xUnit Patterns define this anti-pattern as \"Erratic tests\"",
        "No",
        "No",
        "Detection and prevention I think",
        "",
        "Carlos Frutos",
        "carlos@rooftop.dev"
      ],
      [
        "19/04/2021 17:51:23",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Ciudad Autónoma  de Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "5",
        "Trying to reproduce the same steps on my computer to generate the error.",
        "Sometimes",
        "Often",
        "Sometimes",
        "I try to generate a file with different options. For example, if I have to communicate to an API, what I am trying to generate is possibly a JSON with which the application should return.",
        "-",
        "-",
        "-",
        "-",
        "Trying to find as many errors as possible, although if it is not mastered perfectly, it could become a big problem",
        "",
        "Martín",
        "Dell'Oro"
      ],
      [
        "19/04/2021 18:10:26",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "rio cuarto",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "check the code with partner",
        "Sometimes",
        "Never",
        "Never",
        "mock apis",
        "no",
        "no",
        "no",
        "no",
        "detection",
        "",
        "cristian",
        "cristianaalvarez@gmail.com"
      ],
      [
        "19/04/2021 18:11:54",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Argentina - Buenos Aires",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "Maybe different OS, or different version of php, maybe a failure of resources of the OS",
        "Rarely",
        "Rarely",
        "Rarely",
        "IDK",
        "No",
        "No",
        "No",
        "No",
        "IDK",
        "I tried to help, but i'm not very familiar with tests, sorry ! i try to do all my best.",
        "Sandro",
        "sdezerio@gmail.com"
      ],
      [
        "19/04/2021 20:26:58",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Los Angeles, USA",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "try to reproduce the issue locally",
        "Sometimes",
        "Rarely",
        "Rarely",
        "Mocking response, Double objects, avoid calling externals APIs except when there's no options",
        "No",
        "No, is the first time I saw they have a name",
        "No.",
        "No.",
        "Detect them before they run, more accurate message on detection (specially within CI tools)",
        "It sounds interesting",
        "",
        ""
      ],
      [
        "19/04/2021 22:50:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buckley, WA, United States",
        "Undergraduate",
        "Software developer",
        "Never",
        "10",
        "Make certain that the machine environments are as similar as possible, run tests in CI, and check the test itself for logic flaws",
        "Never",
        "Never",
        "Always",
        "I write extremely granular tests, often including a test intended to falsify the previous test if possible",
        "No",
        "Broken",
        "Writing tests which run through multiple possibilities",
        "Writing tests granularly, writing palindromic tests",
        "Start up a vm, run tests, export results, and repeat for many variant setups.",
        "I don’t really have much to say",
        "Casey Parker",
        "parker.casey@pm.me"
      ],
      [
        "20/04/2021 11:08:34",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "5",
        "Check dependencies, libraries and programming language versions between both machines.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Try to evaluate as much as try/catch scenarios I can.",
        "Try to evaluate as much as try/catch scenarios I can.",
        "No.",
        "No.",
        "No.",
        "Detecting non-deterministc scenarios on developed software.",
        "This is a very interesting study that made me to research on computing theory I have studied some years ago to have a deeper understanding for this survey.",
        "Guillermo Ramiro Maquieira",
        "guimaq@gmail.com"
      ],
      [
        "20/04/2021 12:21:32",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Argentina",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "6",
        "I double-check:  - If deployment or installation of the project was done properly in the other machine.  - If the codebase is correct (for example, make sure the git branch is the correct one and no other code changes were made that could affect the results).  - If the configuration of the project is correct (for example, environment variables that could alter the application behavior).  - If external required resources are available in the same way on the second machine (APIs, databases, any connectivity needed, permissions required, IPs allow-listed, etc).  - If the test could be affected for having different hardware resources (for example, requiring more time to not timeout in a slower machine, requiring more available RAM, etc).  - The versions of the running environment to see if that could affect the compatibility (PHP version running, OS type and version, dependencies versions).   Finally I would check the steps of the failing test and probably comment/remove temporarily some of them to find out what's exactly the problem.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "I use equivalent but \"mocked-up\" interfaces to replace the resources that could not be available.  For example, I create classes/code with the same interface that the code used to manage real APIs or databases. The use that in the tests to make them independent from the connectivity or other resources required.  In other cases where that's not possible, I run some code as a part of the test battery that checks for the availability of those resources that could not be available. Then, the test itself could be classified as \"skipped\", instead of mark it as failed.  And some other times (usually when there's no enough time for a better solution) I simply try to make sure the requirements and external conditions of the environment where the tests are ran will be the best. For example having a stable environment for this purpose.",
        "I don't.",
        "Actually no, but I know that frequently the \"integration tests\" are a sub-set of the non-deterministic ones.",
        "I don't.",
        "I don't.",
        "From the top of my ming, for detection and prevention I can think in these ideas:  List the points (test steps, code lines, etc) that could potentially have different results with the same entries and code. Similar to what code linter tools do. For example show recommendations or warnings when the tests use: - Random generated information that could make the test behave differently. - Date-time based tests that could fail depending on when are they ran. - Access to external resources such as the network (using an API for example). etc.  For prevention I'd also think in a library with some util methods to verify the availability of external required resources. For example, a library with methods like \"checkInternetConnectivity\", \"checkAvailableRAM\", etc. So the test developer can use them easily and the tool can suggest to use them when needed.  I also think in having a tool where resources could be registered (for example, an API or database) in a global part of the testing code, and the on each testing scenario the developer could declare with annotations or however those resources that the scenario requires.  For correction:  Provide an OOTB mocked-up for those interfaces that are usually used to access the network. For example a replacement for the class SoapClient used to request SOAP services. Then encourage the developer to implement those methods/requests done in the tests, but with mocked data.  I'd also expect the tool/s to have the possibility to run these verifications without running the tests.  ",
        "Even when I'm not specialized in testing at all, this study resulted very interesting to me because I have seen scenarios with the non-deterministic problem, and also why not to tell, because I'm generally interested in the topics related to software engineering.  I also think that this study could be extended to be more general and not specific for the PHP language, except of course for the existing tools questions.  I hope my answers help, and even when I'm not developing in PHP for the time being, I'd also like to hear about the results.",
        "Daniel Duarte",
        "danieldd.ar@gmail.com"
      ],
      [
        "20/04/2021 16:25:06",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Richmond, Canada",
        "High school student",
        "Student",
        "Never",
        "5",
        "I check for differences in environments. It would depend on the error thrown. ",
        "Sometimes",
        "Rarely",
        "Rarely",
        "None",
        "I use CI/CD such as Travis for testing Python. ",
        "No",
        "CI/CD tools such as Travis perform tests on multiple environments. ",
        "Linters often detect errors ahead of time. ",
        "Detection, prevention and correction",
        "I'm not too familiar with what a non deterministic test is so I Googled it. ",
        "Kevin",
        "Kevinlu1248@gmail.com "
      ],
      [
        "20/04/2021 19:01:02",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Portland, OR USA",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "2",
        "Check the environment and the build to see what is different.",
        "Rarely",
        "Rarely",
        "Often",
        "Mock external dependencies. Segregate tests with external dependencies.",
        "Check that dependency is available, then only run tests if dependency is available.",
        "Integration tests.",
        "no",
        "no",
        "Configure with a list of dependencies, check dependencies and flags tests if dependencies are unavailable.",
        "In general non-deterministic tests are to be avoided.",
        "Dan Revel",
        "dan@nopolabs.com"
      ],
      [
        "21/04/2021 02:29:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Montreal, Canada",
        "Undergraduate",
        "Software engineer",
        "Rarely",
        "10",
        "Try to see if there was a difference in our local environments, easy fix is usually docker",
        "Rarely",
        "Rarely",
        "Rarely",
        "I don’t come across them often and so i don’t take many precautions against them",
        "None",
        "None",
        "None",
        "None",
        "N/A",
        "",
        "",
        ""
      ],
      [
        "21/04/2021 07:37:14",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "ShengZheng/China",
        "Master's degree completed",
        "Software developer",
        "Sometimes",
        "2",
        "Check whether there are differences in the environment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Keep the environment unified",
        "no",
        "no",
        "no",
        "no",
        "no",
        "no",
        "YeZi",
        "875307054@qq.com"
      ],
      [
        "21/04/2021 11:26:15",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Buenos Aires / Argentina",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "Asking under what conditions de test was run",
        "Rarely",
        "Often",
        "Often",
        "always test with and without conection to apis and internet",
        "No",
        "No",
        "No",
        "No",
        "Tips for scenarios that the developer does not always consider",
        "",
        "Junior Ayala",
        "elessar303@gmail.com"
      ],
      [
        "21/04/2021 13:06:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Toronto/Canada",
        "Graduation completed",
        "Team Lead",
        "Sometimes",
        "8",
        "Check the machine's code version,  then the development setup,  the required external services, including VPN",
        "Sometimes",
        "Never",
        "Rarely",
        "Document the exceptions in KBs",
        "No",
        "No",
        "No",
        "No",
        "Standardized virtual dev environment, system check before starting the testing batch",
        "Congratulations for your initiative. ",
        "Humberto Ribeiro de Souza",
        "humbertosouza@outlook.com"
      ],
      [
        "23/04/2021 20:35:59",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Squamish, BC Canada",
        "Master's degree completed",
        "Secondary Teacher and k-12 sector technologist",
        "Never",
        "7",
        "I do not do this.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Good logic? Screening inputs for possibility",
        "nope",
        "nope",
        "no",
        "no",
        "Second order tests that asses output based on known-result input.",
        "",
        "Evan Sharp",
        "ego@evansharp.ca"
      ],
      [
        "24/04/2021 10:51:31",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Montreal/Canada",
        "Master's degree completed",
        "architect",
        "Always",
        "8",
        "isolate the test to determine what makes is a potentially weak test",
        "Often",
        "Often",
        "Often",
        "better understand the dependencies and properly locate the tests that have external dependencies. When possible use contract-based testing and leave those integration tests to a very minimum",
        "nothing other than the one reported above",
        "fragile tests",
        "pact.io",
        "no",
        "help me reduce the dependency on such tests or at least better identify those",
        "can you share the results of the survey?",
        "Mario Bittencourt",
        "mbneto@gmail.com"
      ],
      [
        "25/04/2021 05:34:54",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "China",
        "PhD completed",
        "Software developer",
        "Often",
        "8",
        "I ensure the environment is exactly the same as the one in my machine. Create the same environment, the same condition and run the test again. This include making sure that network connection is activated. When the environments match, and the tests still failed. I looked at external dependencies in the test code.",
        "Often",
        "Sometimes",
        "Always",
        "Avoid any non-deterministic call in the test code. That is, we must avoid calls to some function (such as network) or randomess in the test code. Except if random is part of the code being tested.",
        "I don't have any sequence of steps to execute",
        "No aware",
        "Non",
        "Non",
        "N/A",
        "One can override native PHP function that create randomness and avoid non-deterministic test",
        "",
        ""
      ],
      [
        "25/04/2021 12:25:29",
        "I agree",
        "7 - 10 years",
        "Up to 1 year",
        "Santa Fe, Santa Fe, Argentina",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "7",
        "I'll do docker container to have the same test environment and try not to rely on external sources",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock external services if I cannot reach them",
        "Api services calls, such as maps, firebase or database related",
        "I don't think so",
        "Not yet",
        "Waiting to fail xD",
        "Harcoded links specially",
        "I'm really looking forward to know about the results of this research! :)",
        "David Maximiliano Sosa",
        "maxi3390@gmail.com"
      ],
      [
        "25/04/2021 13:33:10",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Virginia Beach, USA",
        "High School",
        "Software engineer",
        "Rarely",
        "3",
        "debug with error logging",
        "Rarely",
        "Never",
        "Rarely",
        "extra logging for possible failures",
        "no",
        "no",
        "no",
        "no",
        "identify methods that could have non deterministic results ",
        "",
        "Zak Rabe",
        "zakrabe@gmail.com"
      ],
      [
        "25/04/2021 14:18:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Matawan, New Jersey, United States",
        "Undergraduate",
        "Platform Engineer",
        "Sometimes",
        "8",
        "Find out what conditions were different on the other machine. Whether it was a configuration issue, or an environment issue, or an overall logic issue.",
        "Rarely",
        "Rarely",
        "Rarely",
        "When writing the tests I make sure if I change something in the particular bit of code it tests. The test will completely fail. I do this by actually changing the code to make the test fail.",
        "Do not have one, at this point in time",
        "I am not",
        "We do not use any tool that tests for these things. A code review should catch these.",
        "We do not use any tool that prevents these things. Aside from code reviews.",
        "When the tests are written they should have a through code review.",
        "Seemed like there were a lot of the same questions. Aside from that seemed good.",
        "Vinnie Marone",
        "vinnie.marone35@gmail.com"
      ],
      [
        "25/04/2021 15:55:58",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Salt Lake City UT USA",
        "Master's degree completed",
        "Software engineer",
        "Never",
        "10",
        "Inquire about difference in environment",
        "Sometimes",
        "Never",
        "Never",
        "Run in a controlled environment",
        "No",
        "No",
        "No",
        "Not explicitly, just control the test environment",
        "Sufficient specification of test environment",
        "Non-determinism is usually a function of the environment not the software",
        "",
        ""
      ],
      [
        "25/04/2021 16:15:04",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Memphis, Tennessee, US",
        "PhD completed",
        "Software Consultant",
        "Sometimes",
        "5",
        "Check for differences in machine configuration",
        "Often",
        "Often",
        "Often",
        "Full preparation of host machine to specification",
        "Varies",
        "system configuration errors",
        "all by hand",
        "all by hand",
        "You need to be alert",
        "",
        "Greg Blumenthal",
        "greg@gmbs-consulting.com"
      ],
      [
        "26/04/2021 06:24:34",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Finland & France",
        "Graduation completed",
        "Designer Developer",
        "Never",
        "5",
        "Start digging apache/php settings",
        "Never",
        "Rarely",
        "Rarely",
        "None",
        "None",
        "None",
        "None",
        "None",
        "Good question! Usually people want code to be fixed automatically.",
        "This was easy! Probably knew a little too little of the subject.",
        "Jonatan Eriksson",
        "jonatan@tsto.org"
      ],
      [
        "26/04/2021 06:39:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Guangdong China",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "3",
        "check out if there is any evironment difference between two machine",
        "Sometimes",
        "Often",
        "Rarely",
        "it is time-comsuming",
        "environment differ",
        "no",
        "no",
        "no",
        "run fast and easy to use",
        "this study make me notice the non-deterministic test area",
        "Gary",
        "nutto.pan@gmail.com"
      ],
      [
        "26/04/2021 13:07:21",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Pittsfield MA",
        "Master's degree completed",
        "Software developer",
        "Never",
        "5",
        "Give up and test the component manually. (I'm being honest. This is not ideal, but due to limited budgets on our client projects, this is usually what happens)",
        "Rarely",
        "Never",
        "Never",
        "n/a",
        "no",
        "no",
        "no",
        "no",
        "n/a",
        "not really applicable to our normal workflow... sorry ",
        "Peter Wise",
        "peter@squarecandy.net"
      ],
      [
        "27/04/2021 04:21:13",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Mainz/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "5",
        "Verify the test environment. We use docker to have a very similar environment in a team. Also the configuration is managed.",
        "Sometimes",
        "Rarely",
        "Never",
        "We try to mocks for external interfaces. The used test framework provides functions to do that.",
        "It depends about we are talking here. If it's a unit test, we try to prevent that behavior. For functional tests it's ok to call a real interface (with all the down sites).",
        "Functional testing. Maybe acceptance testing (depending on the definition).",
        "no",
        "no",
        "At least a static code check to find calls to external resources. Maybe a plugin for PhpStorm.",
        "Interesting. Never thought so much about non-deterministic tests.",
        "Christian Münch",
        "christian@muench-worms.de"
      ],
      [
        "27/04/2021 04:54:33",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Duesseldorf/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "Compare machines and execution environment (php version, extensions, etc), code state (modifications, revision). If that does not solve it, run a step-debugger or do poor-mans-debugging with var_dump.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Run tests in isolated environments, like docker, with restrictions on resources like network or disk.",
        "No.",
        "No.",
        "Generally not, but linters can be used to detect the usage of ext/curl and other subjects.",
        "PECL/runkit to mock php internals.",
        "* Detect: output a machine readable format for CI integration * Prevent: If configured, let tests fail for having non-deterministic side-effects * Correction: No tool should correct this on its own. It may suggest alternatives, though",
        "All the best and good luck!",
        "",
        ""
      ],
      [
        "27/04/2021 04:57:11",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Berlin",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "5",
        "Debug on that other machine. Reproduce. Fix.",
        "Never",
        "Never",
        "Never",
        "None, I hardly have that case.",
        "No.",
        "No.",
        "No.",
        "No.",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:29:10",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Lübeck/Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "9",
        "Check the versions of anything involved. Check again locally. Check for any changes not (correctly) committed to the code. Debug the failing test.",
        "Rarely",
        "Sometimes",
        "Often",
        "Most of the time I just make sure the test is not relying on external factors (time passing, network being available, randomness involved, …)",
        "No…",
        "🤷‍♂️",
        "No",
        "No",
        "🤷‍♂️",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:58:44",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Münster/Germany",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "8",
        "Checking the dependencies (e.g. installed libraries, composer packages, software versions).",
        "Rarely",
        "Never",
        "Never",
        "Common error handling (e.g. try-catch around the external request).",
        "/",
        "/",
        "/",
        "/",
        "/",
        "",
        "Kai Neuwerth",
        "kai@neuwerth.me"
      ],
      [
        "27/04/2021 07:51:01",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Often",
        "9",
        "Find the difference between his and mine setup, if there is none, check the test validity.",
        "Rarely",
        "Never",
        "Rarely",
        "Good Test Design and good Environment Preparements",
        "See https://ruby.sadi.st/Heckle.html and https://infection.github.io/guide/ (Mutation Testing)",
        "No",
        "https://infection.github.io/guide/",
        "No",
        "https://infection.github.io/guide/",
        "",
        "Herbert Maschke",
        "thyseus@gmail.com"
      ],
      [
        "27/04/2021 08:17:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Würzburg / Germany",
        "Undergraduate",
        "Software developer",
        "Never",
        "5",
        "Check the test and / or the code",
        "Never",
        "Never",
        "Never",
        "None :-)",
        "no",
        "no",
        "no",
        "no",
        "dont know?",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 08:43:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Dresden, Germany",
        "Bachelor's degree completed",
        "I was a software developer, then gradually became more of an software engineer and nowadays am a consultant and manager for software development projects.",
        "Sometimes",
        "7",
        "I'd search for differences in the runtime environments to figure out, which external factors could have influenced the test. Then I try to improve the test in order to check those dependencies as well.",
        "Sometimes",
        "Rarely",
        "Often",
        "For each test I try to figure out if there are any dependencies from external factors. If there are, I write additional tests explicitly checking for those factors.",
        "If the non-determistic behaviour is intrinsic, I would not write a test expecting a deterministic result, but just perform a plausability test instead.",
        "No.",
        "No.",
        "No.",
        "That's hard to say. I'd expect the tool to at least recognize external dependencies, but that would be really hard to do, I guess.",
        "Very interesting topic! Good luck with your degree!",
        "Sebastian Meyer",
        "https://github.com/sebastian-meyer"
      ],
      [
        "27/04/2021 08:52:26",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "self-educated",
        "Software Quality Consultant",
        "Never",
        "10",
        "That only happens, if I rely on a dependency that is not explicitely stated in composer.json but installed locally. In that case, I fix composer.json to also reflect that dependency.",
        "Never",
        "Never",
        "Always",
        "Mocking external dependencies. External services can always be mocked using Docker containers.",
        "I completely avoid non-deterministic tests, so there's never a need to execute them.",
        "Those tests are simply broken.",
        "No",
        "No, just code review.",
        " I personally don't need such a tool, it is superseeded by my awareness. Nevertheless, I know people who should use it ;)  Since mock genereation is not the easiest task, a mock generator could be useful, i.e., create a Docker container with senseful data that mimics the original service just as much as needed by the tests. The mock is generated once, when the connection is available, but is then independent from any outbound connection.",
        "I'm interested in the results of the survey. Please send it to nbraczek@bsds.de, if possible.",
        "Niels Braczek",
        "nbraczek@bsds.de"
      ],
      [
        "27/04/2021 09:20:13",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Duisburg/Germany",
        "Fachabitur, lower as university + trained as IT specialist in application development",
        "Software developer",
        "Rarely",
        "8",
        "Telling him \"it works on my machine\". Joke aside, inspectiong the code and triying to find the differences of his and my machine and envioment which could affect the test code.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "Use a general \"enviroment\" or general test before testing the code and/or write detailed error messages/logs why the test failed.",
        "phpunittests? Not sure what is meant, so \"no\".",
        "No",
        "No",
        "No",
        "Checking the enviroment (like my general test)",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 10:06:57",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin/Germany ",
        "Undergraduate",
        "Engineering Lead ",
        "Sometimes",
        "10",
        "I would typicslly step through the test case with a debugger. I'll be likely looking for branching (if, switch, etc) logic based on random, time or other  external resources. (In other languages data races are just as common)",
        "Rarely",
        "Rarely",
        "Often",
        "Helper classes which use external sources by default but let tests override it",
        "No",
        "No",
        "Not in PHP.",
        "No.",
        "I'd expect them to listen potential issues. I'd probably run them locally on commit.",
        "",
        "Peter Aba",
        "peter@peteraba.com "
      ],
      [
        "27/04/2021 10:31:42",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Berlin/Germany",
        "Graduation completed",
        "Engineering Manager",
        "Often",
        "6",
        "I compare our environment details (configurations, environment variables) and connectivity with external services involved.  I always advise my teams to use a common environment by making use of Docker/docker-compose or Virtual Machines.",
        "Rarely",
        "Rarely",
        "Often",
        "I encourage TDD practices (which builds majority of tests) using Unit tests only. Unit tests by convention must contain no I/O and rely on mocks where necessary.  Date/Time units that need to be tested should use \"relative time\" as much as possible in order to avoid time bombs such as new years eve build breaks.",
        "I usually understand non-deterministic tests as tests that connect components from outside the software's boundaries (reading from a disk, network..). So normalising the environment using VMs and common shared configurations is already a good start.  Sharing databases and services is also ideal and, when not possible, make use o migrations and conventions that make sure such tests will only use data provided by such migrations.  Another option that I use take is to spin up fake services that will return the expected response (force a response HTTP 2xx, 4xx, timeout exceptions...)",
        "No",
        "No",
        "No. As I mentioned before, I often use a mix of conventions and shared environments in order to reduce the amount of non-deterministic tests.",
        "Thinking of I/O as the source of all evil, I can envision a tool that monitors, takes snapshots and replays or mock network transactions for specific tests.  This way a test framework (such as phpunit or pest) may have different test profiles for each test in a test case. Potentially using a common \"given\" method (thinking of \"given/when/then\" testing approach) or annotations.",
        "Questions are very interesting and I'd be keen to read the output of your research. I must say that the video showing an example of non-deterministic tests created a huge bias on my responses, because I mostly think of your network exception example. I hope that's intentional.  I believe not differentiating test types can mislead people (unit/integration/e2e tests to name a few) and I hope the lack of guidance there is intentional.",
        "Níckolas Da Silva",
        "nawarian@gmail.com"
      ],
      [
        "27/04/2021 10:36:44",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Berlin, Germany",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "4",
        "For unit testing: - Check if such a test relies on external dependencies - Replace these hard dependencies (if any) with interfaces - Mock or stub these interfaces  For integration tests: - Add all stateful dependencies to docker containers - Make sure to rely on anything else but containers ",
        "Rarely",
        "Never",
        "Sometimes",
        "For Unit tests: never rely on stateful dependencies For Integration tests: Docker/containers for stateful dependencies",
        "-",
        "-",
        "-",
        "Docker",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 12:59:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Stuttgart Stralsund ",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "9",
        "Debug it! ",
        "Rarely",
        "Rarely",
        "Often",
        "Make e.g. sure external deps are mocked ",
        "...",
        "No",
        "No",
        "No",
        "No",
        "",
        "Phil ",
        "Phiamo@gmail.com "
      ],
      [
        "27/04/2021 20:25:09",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Germany",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "3",
        "Inspect the environment and examine the logs. ",
        "Often",
        "Never",
        "Never",
        "Depending on what type of tests I’m writing. Unittests have no external dependencies and work within a clearly defined scope. Functional tests or integration tests are by nature often non deterministic. ",
        "Don’t get this question. ",
        "Infected tests ",
        "No",
        "No",
        "/",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 01:16:37",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Düsseldorf/Gernany",
        "Undergraduate",
        "CEO (I used to be a developer, though)",
        "Rarely",
        "7",
        "Find the error in the tests",
        "Rarely",
        "Always",
        "Always",
        "Code-Reviews are done before code gets merged",
        "phpunit executes the tests, but I think I don‘t understand the question.",
        "Testing external dependencies should be done in integration tests. The integration tests may fail due to missing conbectivity and are re-run multiple times to verify the integration works",
        "no",
        "no",
        "detection, I guess?",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:50:25",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Pasig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "I evaluate the environment the test was performed on, specifically if there are huge differences in its core stack (was the test ran on a Linux environment or a Windows one?) I also extract the exact error to determine the next course of action.",
        "Always",
        "Always",
        "Often",
        "We usually assume through policy that a test environment MUST meet the expectations in the specification documents of the project. It is well-clarified throughout the team that such differences in expected environments will require a deeper analysis of the encountered errors and will be a significant cause of delay.",
        "None",
        "None",
        "None",
        "None",
        "Well-written test cases to clearly report back what caused the non-deterministic test to fail.",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:58:48",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Makati, Philippines",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Investigate",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mock the dependencies and use test or sample data",
        "PHPUnit",
        "Not aware",
        "Not aware of any tools on this",
        "Not aware of any tools on this",
        "Not sure",
        "",
        "Alexander Torrijos",
        "artorrijos@gmail.com"
      ],
      [
        "28/04/2021 03:24:15",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "1. rerun the test. 2. check versioning /device differences 3. debug the test",
        "Rarely",
        "Rarely",
        "Never",
        "None.",
        "I sometimes have to make async, external api calls and then just wait for a timeout. ",
        "no",
        "maybe SonarQube?",
        "maybe SonarQube?",
        "usual CI, with build features, code analysis, and adaptable to many platforms",
        "Tho I know what SW-Testing (and TTD) is, I rarely use it in personal projects (when I'm the only contributor anyway) which is quite often. Also, I know and worked with PHP for some time, but for sure wouldn't call me a PHP-expert and I never even wrote a single test in PHP.",
        "Henrik Storch",
        "thisisthefoxe.dhbw@gmail.com"
      ],
      [
        "28/04/2021 03:43:23",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Stuttgart, Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "8",
        "Investigate the error on the other machine. Try to reproduce the issue locally. Ensure that the underlying problem is understood. Try to make the test deterministic or if impossible try to determine the factors involved and skip the test if problematic condition is detected.",
        "Rarely",
        "Sometimes",
        "Often",
        "Reduce external dependencies, esp. operating system, filesystem, etc.",
        "Not sure what's meant with this question",
        "randomly failing tests",
        "No.",
        "No.",
        "Detect problematic use of functions that may cause non-deterministic behaviour. ",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 04:14:44",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Barcelona/spain",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "5",
        "I would adk him to show me the code",
        "Rarely",
        "Rarely",
        "Rarely",
        "External dependencies are wrapped in a new class or i add general exception catching for the call",
        "No",
        "No",
        "No",
        "No",
        "No idea",
        "Interesting topic",
        "",
        ""
      ],
      [
        "28/04/2021 04:37:42",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Olongapo",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "1",
        "use docker, and mock api test",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Just use Docker, and Mock the Api",
        "None , I just use my own method of test driven development , And i Do  run my code in 3 platform mac, windows and linux.",
        "none",
        "github workflow now can run test on all platform making sure your test pass in all platform",
        "NOne",
        "None",
        "",
        "Uriah",
        "codeitlikemiley@gmail.com"
      ],
      [
        "28/04/2021 05:01:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Bonn Germany ",
        "Master's degree completed",
        "Software engineer",
        "Always",
        "7",
        "Find out why this happens. Than the code to make the test deterministic. If that is not possible, for example like in your video, create a second test, that tests against a mock or a stub, so that one is deterministic. Then use the other test in a different testset, that runs against the third party application, to check, where the api still works. Usually these tests have a rerun possibility. The deterministic test set should never fail, the other one could. ",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mocking and stubbing, predetermined test data, e.g.",
        "E sometimes use retry mechanisms, and in your video example those tests would test the Internet connection before running the test, so that we know, that was the cause for the failure. ",
        "Flaky tests",
        "No. ",
        "Not automatically. Some people have rerun mechanisms for their tests, but I do not like those automated Nachsaisons, because it makes you not taking care. ",
        "Showing known causes",
        "I would like to see your resulting paper please, falk@kuehnel.du",
        "Falk Kühnel",
        "falk@kuehnel.eu"
      ],
      [
        "28/04/2021 05:11:34",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Passau/Germany",
        "Master's degree completed",
        "Hacker / Software hacker / Hacker aka tester/debuger/developer/creator",
        "Sometimes",
        "7",
        "1st) check configs, 2nd) get screen sharing online",
        "Rarely",
        "Rarely",
        "Rarely",
        "don't do too much in one test, do many tests based on just a few.",
        "-",
        "-",
        "-",
        "-",
        "should be plugin for phpstorm and for the other idea group like webstorm",
        "-",
        "",
        ""
      ],
      [
        "28/04/2021 05:53:04",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Taguig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "6",
        "read the error message if available or check if the another machine and my machine has same version of php ",
        "Rarely",
        "Rarely",
        "Often",
        "run unit test to locate the non deterministic code and revise it",
        "no",
        "no",
        "no",
        "no",
        "cpu profiler",
        "sorry, some answers are not substantial",
        "Frex Cuadillera",
        "fcuadillera@gmail.com"
      ],
      [
        "28/04/2021 06:17:52",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "3",
        "Docker",
        "Often",
        "Rarely",
        "Rarely",
        "Include as input whatever can change in the environment that makes the test deterministic",
        "N/a",
        "None",
        "None",
        "Docker and containerization",
        "Don't know",
        "Good luck",
        "Claude",
        "claudekirke@gmail.com"
      ],
      [
        "28/04/2021 06:47:20",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Germany Rosenheim",
        "Graduation completed",
        "Senior Backend Developer, Lead Product Developer",
        "Rarely",
        "8",
        "Identify and resolve the differences between the two test environments.",
        "Rarely",
        "Rarely",
        "Often",
        "Replace external APIs with local dummy APIs to create deterministic API responses/behavior (mostly based on docker)",
        "No",
        "\"Snowflake Tests\": They will break over something rather irrelevant or sensitive external condition. These are tests that will fail often in your pipeline and they will be successful if rerun.",
        "No. Sometimes our CI/CD Pipeline will break for no reason, which is an indicator for such (bad) tests.",
        "We don't test or rely on external resources. It's good practice to Mock/Stub the parts of your code that rely on external resources. PHPUnit is used to create Mocks/Stubs.",
        "The tool should detect if any external resource is used, identify the protocol, request and response contents and format and automatically derive a stub, which can be used to replace the external call. This information must be exportable as file to be commited with the tests and used by others to use the tool and the configuration to run the tests against the mocked API of the tool, not the Live-Api. Nice to Have: An UI to modify the detected reponses",
        "Good luck",
        "",
        ""
      ],
      [
        "28/04/2021 07:39:30",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Philippines",
        "Master's degree in progress",
        "Solutions Architect",
        "Rarely",
        "3",
        "Determine the similarity and difference in test execution environment",
        "Rarely",
        "Rarely",
        "Always",
        "With defensive coding practices, have the code define and ensure satisfaction of requirements before executing their function.",
        "No, it's a bad practice",
        "No",
        "No",
        "Rather than a tool, it's basic coding practice to ensure all requirements for success of your code is in place.",
        "Detection of dependencies to functions beyond the current system's control, but paradoxically it means everything",
        "The term 'non-deterministic test' is a misnomer, there may be no changes in the code, but we have observable and remediable changes on parameters or environment variables (i.e. internet connection) beyond control of the software that the PHP code depends on. ",
        "Tito Mari Francis Escaño",
        "titomarifrancis@gmail.com"
      ],
      [
        "28/04/2021 08:56:15",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Manila/Philippines",
        "Graduation completed",
        "Development Manager",
        "Often",
        "10",
        "Usually, discuss the issue with the developer and advise for mitigation. Sometimes, we also incorporate it already during brainstorming / grooming and discuss that this should have been included already in the beginning and not on the end.",
        "Sometimes",
        "Often",
        "Often",
        "We make as much realistic scenarios as possible. Also, on the code level, we tend to increase the support of the previously encountered scenarios and have it applied on future development.",
        "One is to setup automated testing mechanism being executed on regular / daily basis. This way, we can easily catch the potential issues during the execution and compare on the last result. From there, we can investigate / dig further what may caused it and make the necessary adjustment so that it will not happen again on the next run.  In addition, regular code analysis of both test case and also the main code itself is beneficial as you may not know that somewhere before or down the line, an incorrect argument or method may have caused the non-deterministic test.  Another one is to increase the test suites. Granted that one scenario is not enough but as mentioned, once we encounter the issue somewhere, it is automatically added on the list to be tested and have it incorporated on the test case and also on the code.",
        "Usually, we do isolation as sometimes, the application on one environment only shows the issue as compare to others. Once we isolate the application in question, we perform the test, either automated or manual, so that we can have proper verification that we need. Since its already isolated, we tend to perform other change of environment (like pretending of slow connection and like) as that shows a different side of story as well.  In relation to isolation, we tend to create a different test suite so that we can make sure that during execution, it will not be that invasive unlike the usual test suite and can be executed multiple times in different scenarios.",
        "Not that I know of specifically as we tend to rely on collective usage and adapt as we go along.",
        "Probably it can be covered at some point by code analysis like SonarQube. Because with SonarQube, its not just the code is being scanned, but also the potential coverage and also some duplicates of the test cases generated.",
        "I guess would be able to cover certain scenarios that usual testing won't be able to cover. Probably intelligent enough to advise that certain issue can be achieved by this scenario and so on.",
        "Really looking forward on the result of this study because its an eye opener to developers generating those applications and solutions which may lead towards service resiliency and better security.",
        "Rellmon P. Ponce de Leon",
        "raremon@gmail.com"
      ],
      [
        "28/04/2021 10:43:10",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Davao city, Philippines",
        "Graduation completed",
        "Software developer",
        "Often",
        "7",
        "View logs",
        "Sometimes",
        "Sometimes",
        "Often",
        "Add paramaters to run the test multiple times.",
        "no",
        "nope",
        "nope",
        "nope",
        "nope",
        "Thanks and good luck",
        "Goper",
        "goper.zosa@gmail.com"
      ],
      [
        "28/04/2021 11:58:57",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "7",
        "Check for time issues (i.e. mock 'now'), reduce integration tests with unreliable services to a minimum, mark them as unstable",
        "Rarely",
        "Sometimes",
        "Often",
        "Make boundaries to external services clear, easily mockable",
        "-",
        "Unstable tests",
        "No",
        "No",
        "Detect external calls in tests or time dependent logic (suggest injecting a clock component)",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 12:13:06",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Philippines",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "check the difference between configurations, then compatibility and then difference in environment",
        "Rarely",
        "Sometimes",
        "Rarely",
        "making sure to look for boolean results",
        "havent really",
        "none",
        "none",
        "none in particular",
        "i am not really verbose in testing",
        "I am actually a frontend developer, I have worked with php for just a short period so it might be better to look for respondents who are truly backend",
        "Sanz moses",
        "web@sanzmoses.com"
      ],
      [
        "28/04/2021 13:08:01",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Bohol, Philippines",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "I usually look for relevant error messages in the console and in the logs.",
        "Sometimes",
        "Always",
        "Always",
        "I mock the causes of the non-deterministic tests. I also test the cause separately and sometimes manually.",
        "If the code requires an external service, my usual step is to mock that service when writing tests.",
        "No",
        "No",
        "No",
        "Pointing the exact cause of the non-deterministic behavior like if I cannot reach the external service required due to a severed internet connection.",
        "Good luck!",
        "",
        "ejillberth@gmail.com"
      ],
      [
        "28/04/2021 21:04:10",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Manila, Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Find the difference between my machine and the other persons machine",
        "Sometimes",
        "Always",
        "Often",
        "Have a source of truth, like CI, with the correct configuration. Use virtual machines for reproducibility. Avoid code and tests that produce non-deterministic output, like RNGs, timezone libraries, unmocked classes.",
        "no",
        "race conditions, intermittent failure, false positive",
        "no",
        "no",
        "i dont really use one, mostly its detected by the test runner itself",
        "",
        "Kelly Navarro",
        "gabrnavarro@gmail.com"
      ],
      [
        "28/04/2021 22:43:52",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "Check operating system, check network connectivity or whitelisting to external API, check environmental variable",
        "Often",
        "Often",
        "Often",
        "Separate non-deterministic test like creating a new test suite so that it can be executed separately from internal business logic test case",
        "From test creation, separate non-deterministic tests externally and group them together according to their purpose. Grouping together tests dependent on operating system, tests dependent on connectivity, or tests dependent on other microservices. If it is okay to bypass the dependency and we will only require the target data/response, it could be replaced by mock testing.",
        "Dependency testing as I could say, as it depends on multiple variables in order for it be success.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "If there's a tool, maybe it will detect first the connectivity of the non-deterministic tests and then catch its error to notify the executor of the test. Or it can save such scenario on time of creation like the response of the third party API and store it into a folder so that it can be used as referenced for future non-deterministic tests.",
        "The purpose of this study is good to the point that it can increase the developer/tester experience in tackling non-deterministic tests.",
        "Arvin Reynoso",
        "reynosoarvin@gmail.com"
      ],
      [
        "29/04/2021 02:04:20",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Bacolod City",
        "Graduation completed",
        "Software developer",
        "Always",
        "6",
        "list down your apps machine what you install and install to other machine or use docker..",
        "Sometimes",
        "Always",
        "Always",
        "set workflow of your code structure, be strict on data types and always restart or hard refresh",
        "yes because you should take down list of the error with solution",
        "yes I'm strict when it comes to variables",
        "no",
        "no",
        "none",
        "Such a nice survey.. so interesting",
        "edrian jan solatorio",
        "edrianjansolatorio@gmail.com"
      ],
      [
        "29/04/2021 04:01:19",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Frankfurt/Germany",
        "vocational technical diploma",
        "Software developer",
        "Rarely",
        "3",
        "Analyze the error message, in most cases there are differences in the conditions between developer-machine and another",
        "Rarely",
        "Rarely",
        "Rarely",
        "avoid depending on 3rd party services mostly, if not possible, catch possible issues and output accordingly",
        "no",
        "external service/data dependent",
        "no",
        "no",
        "analyze what parts of the code are refering to external services",
        "",
        "Michael",
        "d00p@froxlor.org"
      ],
      [
        "29/04/2021 07:41:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin, Germany",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "7",
        "It depends on the kind of test. Browser tests (written in PHP or any other language) for example are often non-deterministic and require timeouts to be configured for the completion of certain interactions. In such cases the test may fail because the execution time exceeds the default timeout specified for the test and needs to be increased.  In other cases the test may require the software to be configured in a way that cannot be done within the test setup. Investigating whether the test outcome is influenced e.g. by environment variables would be something that I'd check in such a scenario.",
        "Often",
        "Often",
        "Often",
        "Peer review and running tests as part of automated continuous integration tests.",
        "I don't understand the question.",
        "\"tests with non-deterministic behavior\" is the term I would use. Browser tests and edge to edge tests come to mind as classes of tests that often fall into this category.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "It should cause the affected tests to fail or trigger some sort of warning.",
        "",
        "",
        ""
      ],
      [
        "29/04/2021 21:58:21",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Remote for US, Belgium and Argentina",
        "Graduation completed",
        "Software engineer",
        "Always",
        "5",
        "I would try to reproduce it and change the test so it works aisolated to the environment",
        "Sometimes",
        "Sometimes",
        "Rarely",
        "I run them in a virtualized environment and so do the rest Of the devs ",
        "No",
        "No",
        "No",
        "No",
        "To cover every possible scenario",
        "Good luck with your study! ",
        "Vicky Jauregui ",
        "jaureguivictoria@gmail.com"
      ]
    ],
    "classifications": [
      "timestamp",
      "terms",
      "groupsInAnswer",
      "groupsInAnswer",
      "cityState",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "openQuestion",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "groupsInAnswer",
      "feedback",
      "groupsInAnswer",
      "groupsInAnswer"
    ],
    "manualSettings": {}
  },
  "1620317303169": {
    "titles": [
      "Carimbo de data/hora",
      "Check the \"I agree\" option if you have read and agree to the consent form.",
      "How long have you been working with PHP?",
      "How long have you been working with PHP software testing?",
      "Where do you work? (City/Country)",
      "What is your academic level?",
      "Regarding your profession, what title would you give yourself?",
      "Have you ever dealt with non-deterministic software testing of any kind?",
      "On a scale of 1 to 10, how problematic do you consider the occurrence of non-deterministic tests in software projects?",
      "Let us consider the following scenario: You have developed a test code, and you were successful at running it on your machine. However, when you or someone else ran the same test on another machine, it failed. What action do you usually take when face such a scenario?",
      "How often do non-deterministic tests appear in your workflow?",
      "How often do you employ non-deterministic tests correction practices in your workflow?",
      "How often do you employ non-deterministic tests prevention practices in your workflow?",
      "What precautions do you take to prevent the tests you write from being non-deterministic?",
      "Do you use (or be aware of) any routine for the execution of non-deterministic tests? If so, could you please detail it/them?",
      "Are you aware of any other name associated with \"tests with non-deterministic behavior\"? If so, could you please detail it/them?",
      "Do you use or know any tools to detect non-deterministic tests? Please detail it/them.",
      "Do you use or know any tools to prevent non-deterministic tests? Please detail it/them.",
      "What are the expected features for a tool dealing with (detection, prevention or correction) non-deterministic tests in software projects?",
      "Give your feedback on this study, or comment freely.",
      "What is your name?",
      "What is your email?"
    ],
    "rows": [
      [
        "08/04/2021 18:53:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "France",
        "Master's degree completed",
        "Software developer",
        "Rarely",
        "5",
        "Examine test environment",
        "Rarely",
        "Never",
        "Rarely",
        "Mocking / emulating external resources",
        "No",
        "Tests with external dependencies",
        "no",
        "no",
        "Checking for external dependencies, comparing with previous test runs",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 20:04:13",
        "I don't agree",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 22:31:59",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Banjarmasin, Indonesia",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "I usually check for the other person's project setup, eg: 1. Are they follow the setup instruction correctly? 2. Are they set the correct env variable values correctly?  Related to the tests it self, sometimes I face this issue because: 1. Some random function (eg. php faker) generates an invalid value (usually status_code numbers in integer). 2. Date time value definition related to calculation of holidays (rarely).  But for me, mostly this issue occurs related to the project setup documentation.",
        "Rarely",
        "Sometimes",
        "Always",
        "1. Using mock object and response for the tests related to external API calls 2. Using carbon instance and carbon mock object for date time definition on tests 3. Prevent using random function for particular model attributes, eg: user_role_id, status_code, which I will use for data filtering or where clause on the production code. 4. Update the project documentation if the changes will impact the tests.",
        "I don't really get this question.",
        "I was using term \"intermittent test failures\" for this kind of test issue.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "I don't expect any tool to deal with it, I think I don't need one. Because this issue rarely occurs on my projects. Mostly this issue happen because of my own careless",
        "TBH, I still don't get the point of this research, why do you need these answers, and what the goal of this research.  I just get that: 1. You want to know how often developers facing non-deterministic tests 2. You want to develop some tool to detect and prevent this test issue  But, still not sure about that :D  PS: I didn't understand 1 question (see my answers). If you can elaborate more about it (via email), I'd be happy to answer it.",
        "Nafies Luthfi",
        "nafiesl@gmail.com"
      ],
      [
        "09/04/2021 08:52:22",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Tokyo/Japan ",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "9",
        "Develop and share Docker environments",
        "Rarely",
        "Sometimes",
        "Always",
        "Mocking Disk IO or API calls",
        "None",
        "tests with side effects",
        "None",
        "None",
        "?",
        "",
        "mpyw",
        "mpyw628@gmail.com"
      ],
      [
        "09/04/2021 12:12:40",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "From home in Canada",
        "Graduation completed",
        "Software Developer and Tester",
        "Sometimes",
        "10",
        "Pair with another developer to determine differences in data, language settings or even operating system to debug why the test fails in one environment but not another ",
        "Often",
        "Often",
        "Often",
        "Understand what data is required for the test to pass and determine any “side effects” that might be occurring that could make the test non-deterministic ",
        "No",
        "No",
        "No",
        "No",
        "Clear error messages and the ability to be easily run in in a continuous integration environment like GitHub Actions",
        "",
        "Chris Hartjes",
        "chartjes@littlehart.net"
      ],
      [
        "10/04/2021 11:37:15",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Grand Rapids, USA",
        "Undergraduate",
        "Software developer",
        "Often",
        "4",
        "Try to have THAT developer debug why it's not working on their machine",
        "Often",
        "Sometimes",
        "Rarely",
        "Mocking inside a unit test. However, sometimes we purposely want to to test the entire, connected system and so we do NOT want to mock external things (like databases, APIs, etc)",
        "For tests that rely on an external API call, we try to use an API service that can be used by all devs (e.g. not something that requires a production API key). But mostly... if it makes sense, we would try to mock out these external services. But when we specifically choose to NOT mock them (because the test is most valuable when using the real API), we just \"live\" with the possibility that it may fail sometimes.",
        "We call them \"phantom failure\" tests - tests that fail sometimes but not other times. These are a PAIN. They are actually most commonly associated with Selenium-style tests where, for whatever reason, the interface responds more slowly sometimes, and so our tests fail because they have not waited long enough for something to load.",
        ".",
        ".",
        ".",
        "",
        "Ryan Weaver",
        "ryan@symfonycasts.com"
      ],
      [
        "10/04/2021 11:54:33",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "China",
        "Senior high school in progress",
        "Software developer",
        "Rarely",
        "6",
        "Ask for the environmental parameters of the other party, and reproduce these problems as much as possible. And ask him/her completely delete the software and then re-install it.",
        "Rarely",
        "Rarely",
        "Rarely",
        "None",
        "idk",
        "We usually call it metaphysics",
        "I lack experience in this field",
        "I lack experience in this field",
        "I lack experience in this field",
        "",
        "MlgmXyysd",
        "mlgmxyysd@meowcat.org"
      ],
      [
        "10/04/2021 14:53:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Czech Republic",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "File an issue to fix it, to make the test deterministic",
        "Rarely",
        "Rarely",
        "Often",
        "Mocking objects and/or responses",
        "No",
        "Maybe \"tests with external dependencies\"",
        "No",
        "Mock libraries",
        "Don't know",
        "",
        "",
        ""
      ],
      [
        "10/04/2021 15:29:22",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Kolkata/India",
        "Graduation completed",
        "Software developer",
        "Never",
        "1",
        "Use docker",
        "Never",
        "Never",
        "Never",
        "Nothing",
        "No",
        "Sounds like random probability",
        "No",
        "No",
        "No",
        "Would be good to give a code example of non deterministic test",
        "Anubhav",
        "xprilion@gmail.com"
      ],
      [
        "10/04/2021 18:34:14",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "New York City/USA",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Check the testing environment",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock third-party dependencies",
        "Make sure that dependencies are injectable, then replace the dependencies with mocked objects/results",
        "Non-atomic tests, tests with external dependencies",
        "Nope",
        "Nope",
        "This tool would be able to identify dependencies that interface with third-party software, like curl, cache engines, database engines, etc...",
        "",
        "Hypolite Petovan",
        "hypolite@mrpetovan.com"
      ],
      [
        "10/04/2021 18:59:11",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Frederick, Maryland, USA",
        "Some college",
        "Software developer",
        "Always",
        "9",
        "Confirm that both systems have the same things installed and investigate further",
        "Rarely",
        "Often",
        "Sometimes",
        "Manual review of the tests",
        "Not really",
        "Heisenbugs ;-)",
        "No",
        "No",
        "I don't know",
        "",
        "",
        ""
      ],
      [
        "11/04/2021 00:13:03",
        "I agree",
        "Up to 1 year",
        "Up to 1 year",
        "China",
        "Graduation completed",
        "Software developer",
        "Never",
        "2",
        "Check their PHP version, etc",
        "Never",
        "Never",
        "Never",
        "I never write tests",
        "Nope.",
        "No",
        "No.",
        "NO",
        "I don't know",
        "",
        "Anonymous",
        ""
      ],
      [
        "11/04/2021 07:12:52",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Muncih, Germany",
        "Master's degree completed",
        "IT Consultant",
        "Sometimes",
        "2",
        "Find out why the test fails on other machine.",
        "Rarely",
        "Never",
        "Always",
        "Decouple.",
        "Replace randomness and actual time by pre-defined values that get injected; decouple tests from external resources.",
        "Flaky tests",
        "PHPUnit allows repeated test execution.",
        "For testing external APIs, I hand-code an \"is available\" check. When external resource is not available, I skip the test.",
        "Magically fix all problems? ,-)",
        "I found the term \"non-deterministic tests\" a bit misleading first, because I thought it would refer to testing code with non-deterministic behaviour. The way it was presented in the video, it \"just\" refers to external resources that are not available. Or at least, this is my assumption at this point.",
        "Stefan Priebsch",
        "stefan@priebsch.de"
      ],
      [
        "11/04/2021 09:43:45",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Berlin",
        "Graduation completed",
        "Software engineer",
        "Often",
        "7",
        "try to run all tests on CI, and consider that as main source of truth",
        "Sometimes",
        "Sometimes",
        "Often",
        "avoid network access, avoid random data, avoid waiting for stuff... whatever is not in your control should be avoided",
        "no",
        "no",
        "no",
        "no",
        "locating code that depends on possible not deterministic features (network, time, randomness...)",
        "cool",
        "Asmir",
        "goetas@gmail.com"
      ],
      [
        "12/04/2021 00:22:12",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Hong Kong",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "1",
        "Relicate failed enviroment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Enviromental tests to ensure matching enviroment before running test",
        "Library check etc.",
        "no",
        "no",
        "no",
        "n/a",
        "Probably use a text description for non-deterministic tests, rather than video.",
        "Alan Knowles",
        "alan@roojs.com"
      ],
      [
        "12/04/2021 00:25:33",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Melbourne/Australia",
        "Dropout",
        "DevOps Engineer",
        "Sometimes",
        "5",
        "Teach the other user about Docker, and implement it as a CI/CD pipeline so it always has the same outcome.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Use Docker for coding environments, and use a CI/CD pipeline from my Git repo.",
        "Nope",
        "Nope",
        "Nope, I just do it manually",
        "I use Docker",
        "NA",
        "It isn't really something I've had to worry about, or applies to any of the projects I've worked with.",
        "Dean Lofts",
        "dean@deanlofts.xyz"
      ],
      [
        "12/04/2021 17:29:12",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Columbus, OH, USA",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "Look for potential causes (environment configuration, race conditions, etc.) that may be causing the test to behave differently, then refactor the test method to compensate for or eliminate these differences.",
        "Sometimes",
        "Often",
        "Often",
        "Be explicit with the arrangement of the tests and leverage test doubles to ensure that processes outside of the System Under Test (SUT) are not polluting the test.",
        "If tests fail intermittently when run either locally or in a CI pipeline, determine what is causing the test to fail and, if it's from outside causes, use test doubles or other approaches to ensure consistent results.",
        "Nothing formal, but \"there's a race condition in this test\" gets thrown around a lot.",
        "PHPStan and Psalm can be helpful in catching logical errors, but are not specific to non-deterministic tests. I suppose mutation testing (e.g. InfectionPHP) could also be effective, but I have not explored this.",
        "PHPStan and Psalm (see previous).",
        "Warning when items outside of the scope of the SUT are being evaluated, and recommend approaches to avoid these from being a factor.",
        "",
        "Steve Grunwell",
        "steve@stevegrunwell.com"
      ],
      [
        "14/04/2021 23:15:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Nashville, TN, US",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "10",
        "I try to isolate the variable part of the code that causes the failure and use a mock to ensure that the test is deterministic. If the code should run successfully during a failure state, then I create a mock that simulates failure to ensure the failure state in a deterministic way. One of the best ways to achieve this is to use dependency injection.",
        "Rarely",
        "Always",
        "Often",
        "I make extensive use of dependency injection and use mocks to mock as much as possible, except for the lines of code I am testing.",
        "I do not make use of it currently, but if I needed to test non-deterministic code, I might use the PHP library \"Infection\" to facilitate mutation testing.",
        "Mutation testing",
        "I have used PHP-Mock, which allows you to test non-deterministic PHP functions, such as time() and random_int().",
        "I regularly use PHPStan and Psalm to statically analyze my code for type correctness. This does not fully prevent non-deterministic tests, but it can help.",
        "Analyze code and identify functions and methods that might return values that later code paths may not be able to process.",
        "",
        "Ben Ramsey",
        "ben@benramsey.com"
      ],
      [
        "18/04/2021 23:51:40",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "5",
        "Extension checks, re-check composer packages and other dependancies, validate ini's are matching and PHP versions are equal. ",
        "Rarely",
        "Sometimes",
        "Sometimes",
        "Not in tests; however in CI/CD",
        "No",
        "N/a",
        "N/a",
        "N/a",
        "N/a",
        "",
        "Rama",
        "me@rexsdev.com"
      ],
      [
        "18/04/2021 23:52:46",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Montreal/Canada",
        "Master's degree completed",
        "Backend Developer / DevOps",
        "Rarely",
        "10",
        "Try to reproduce the error on the working machine",
        "Rarely",
        "Never",
        "Never",
        "I always isolate the thing I want to try and remove any link to external services/tools",
        "no",
        "no",
        "PHPUnit infection (Mutation testing)",
        "No",
        "Output the list of potential issues and a quick explanation of what could be the issue for the specific test",
        "",
        "",
        ""
      ],
      [
        "18/04/2021 23:58:13",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Often",
        "7",
        "1. Rule out any environment misconfiguration 2. Evaluate if the use of a non-determisitic test is correct/necessary 3. Rewrite the test such that it passes on both machines",
        "Often",
        "Often",
        "Rarely",
        "- CI - Deterministic thinking",
        "Monitoring them actively",
        "Dynamic tests",
        "No, just manual code review",
        "No",
        "Encourage the use of deterministic tests wherever possible (provide guidance on how to achieve this), bring attention to unintentionally non-deterministic tests",
        "Best of luck with your research!",
        "",
        ""
      ],
      [
        "19/04/2021 00:57:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Ottawa, Canada",
        "Master's degree in progress",
        "CTO",
        "Rarely",
        "10",
        "NDTs are useless.  They have to be solved rapidly before they ruin the whole test suite.",
        "Rarely",
        "Always",
        "Always",
        "Writing specs that respect LoD go a long way.  Isolation is important.  Fixture resets to prevent setup pollution.  After this, you're just eliminating randomness to remove NDT deps.",
        "This question doesn't make sense.",
        "No -- but funny.  At work, we call them GTs.  Garbage tests.  NDTs have no place in a proper test suite.",
        "We use Bamboo CI",
        "You can apply Mutators to test your test suite itself.",
        "I don't really need tools here.  Bamboo CI logs history, we parse for tests that lack rigor, and slate them for repair or replacement.  Tests span from phpunit, to phpspec, to Behat tests (the tests that most often cause these problems, are Behat tests)",
        "Honest feedback, it read as though you were crafting a commercial offering under the guise of an academic survey.",
        "",
        ""
      ],
      [
        "19/04/2021 03:37:01",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Ottawa, Ontario, Canada",
        "Graduation completed",
        "Web developer",
        "Never",
        "10",
        "There could be many external factors effecting the test of such nature. However I use containerized development environment such as Docker, which can element many external factors that can cause different outcome for same code. ",
        "Rarely",
        "Rarely",
        "Often",
        "Making sure the platform stays the same across all the environment and for all developers, Docker helps to implement it.",
        "There can't be silver bullet for all types of non-deterministic test issue. What I would like to see if the test depends on external factors such as host OS settings, hardware requirements or third party API, test result mention that specific dependent issue in fail message. ",
        "Not aware of that ",
        "Not that I know of",
        "Not that I know of",
        "Flags a warning message about external dependency ",
        "",
        "Dushyant Patel",
        "msg2dushyant@gmail.com"
      ],
      [
        "19/04/2021 06:44:05",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Regina, SK, Canada",
        "No secondary education",
        "Software developer",
        "Rarely",
        "8",
        "diagnose environmental differences",
        "Rarely",
        "Rarely",
        "Rarely",
        "none specifically, just internalized knowledge that explicitly non-deterministic test cases (like connecting to an API) are moreso testing the API connection than the validity of your code.",
        "no",
        "no",
        "no",
        "no",
        "dunno",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 07:37:32",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Mississauga, Ontario, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "1 - Check to see if they have all of the changes 2 - Investigate the output and determine the root cause 3 - Fix the root cause of the discrepancy",
        "Rarely",
        "Sometimes",
        "Always",
        "I push the api calls as far from my main code as possible, and then use mocks to avoid it in the non-specific tests.",
        "No",
        "no",
        "no",
        "no",
        "The ability to break dependencies/point them out.",
        "",
        "Andrew",
        "awjudd@gmail.com"
      ],
      [
        "19/04/2021 08:22:04",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Toronto/Canada",
        "Graduation completed",
        "Software Architect",
        "Sometimes",
        "10",
        "Collect the logs, and analyze the failing code visually to identify system/state dependent variance.",
        "Rarely",
        "Sometimes",
        "Often",
        "Granular isolation",
        "We tend to avoid non-deterministic test cases, but mocking the variable components. However, when not possible, we carefully generate the software state to make the outcomes predictable.",
        "state-volatile tests",
        "No",
        "No",
        "Detect system/state specific dependencies.",
        "Intriguing study. Why did you focus on PHP?",
        "Seva",
        "Seva.lapsha@gmail.com"
      ],
      [
        "19/04/2021 09:33:41",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Montreal, Canada",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Usually attach a debugger to see if I can find the point where it diverges, or add logging if it’s a race condition ",
        "Rarely",
        "Always",
        "Always",
        "Reproducible test fixtures and environments, special care around tests related to time",
        "I don’t understand the question",
        "Flaky tests",
        "No",
        "No",
        "Run multiple tests multiple times to detect non deterministic tests. Maybe linting or static analysis to detect common scenarios that can create this situation",
        "",
        "Samuel Schmidt",
        "samuel@dersam.net"
      ],
      [
        "19/04/2021 10:26:27",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Chicago, IL",
        "HS",
        "Software developer",
        "Sometimes",
        "10",
        "Examine possible causes like fixture data being manipulated in other tests & creating implicit dependencies between test cases",
        "Rarely",
        "Never",
        "Often",
        "best practices guide for devs",
        "No",
        "cursed tests",
        "No",
        "No",
        "A warning that highlights the problematic test(s) & states why they're non-deterministic would be great!",
        "",
        "Nick Evans",
        "nick.evans@northwestern.edu"
      ],
      [
        "19/04/2021 11:43:09",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Lancaster, OH, USA",
        "No higher education",
        "DevOps",
        "Rarely",
        "10",
        "attempting to reproduce the problem in my environment; then ask the other user for the output to determine what might be wrong; i can usually determine the problem that way",
        "Rarely",
        "Never",
        "Never",
        "none",
        "no",
        "\"tests with external uncontrolled dependencies\" would be a subset",
        "no",
        "no",
        "no idea",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 13:57:26",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Resistencia/Argentina",
        "",
        "Software developer",
        "Never",
        "1",
        "1. Check if the other part have replicate the enviroment. 2. Check the imputs. 3. Replicate the other part actions.",
        "Never",
        "Never",
        "Never",
        "I Do create atomic tests for my code. Really small tests. ",
        "No",
        "No",
        "No",
        "No",
        "Don't know",
        "https://martinfowler.com/articles/nonDeterminism.html",
        "Ariel",
        "arieltoledo@gmail.com"
      ],
      [
        "19/04/2021 14:09:06",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "10",
        "I ask for more details, like the other person's enviroment.",
        "Rarely",
        "Rarely",
        "Always",
        "I set a seed for random outputs.",
        "Not besides setting a seed for random functions.",
        "No",
        "NO",
        "No",
        "No",
        "Wish you best of luck!",
        "Patricio Tarantino",
        "patriciotarantino@gmail.com"
      ],
      [
        "19/04/2021 15:23:29",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "7",
        "check infrastructure dependencies and debug the test in the failed environment",
        "Sometimes",
        "Often",
        "Often",
        "trying to mock most of infra dependencies",
        "No",
        "No",
        "No",
        "No",
        "detect posible non-deterministic tests",
        "",
        "Piero Recchia",
        "piero.recchia@gmail.com"
      ],
      [
        "19/04/2021 15:26:28",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "San Francisco, Córdoba, Argentina",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "2",
        "I would consider environment differences and try to reproduce the error using the same dataset, or catching the non-deterministic factor by doing an static code review over that test method.",
        "Sometimes",
        "Often",
        "Always",
        "1. Deactivate curl primitives in order to prevent unintentional connections to third party systems. 2. Wrap undeterministic factors generally expressed as PHP primitives like rand() calls, new DateTime('now'), etc. Wrapping those behaviours into mockable dependencies.",
        "No, I don't use any automatic routine.",
        "xUnit Patterns define this anti-pattern as \"Erratic tests\"",
        "No",
        "No",
        "Detection and prevention I think",
        "",
        "Carlos Frutos",
        "carlos@rooftop.dev"
      ],
      [
        "19/04/2021 17:51:23",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Ciudad Autónoma  de Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "5",
        "Trying to reproduce the same steps on my computer to generate the error.",
        "Sometimes",
        "Often",
        "Sometimes",
        "I try to generate a file with different options. For example, if I have to communicate to an API, what I am trying to generate is possibly a JSON with which the application should return.",
        "-",
        "-",
        "-",
        "-",
        "Trying to find as many errors as possible, although if it is not mastered perfectly, it could become a big problem",
        "",
        "Martín",
        "Dell'Oro"
      ],
      [
        "19/04/2021 18:10:26",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "rio cuarto",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "check the code with partner",
        "Sometimes",
        "Never",
        "Never",
        "mock apis",
        "no",
        "no",
        "no",
        "no",
        "detection",
        "",
        "cristian",
        "cristianaalvarez@gmail.com"
      ],
      [
        "19/04/2021 18:11:54",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Argentina - Buenos Aires",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "Maybe different OS, or different version of php, maybe a failure of resources of the OS",
        "Rarely",
        "Rarely",
        "Rarely",
        "IDK",
        "No",
        "No",
        "No",
        "No",
        "IDK",
        "I tried to help, but i'm not very familiar with tests, sorry ! i try to do all my best.",
        "Sandro",
        "sdezerio@gmail.com"
      ],
      [
        "19/04/2021 20:26:58",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Los Angeles, USA",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "try to reproduce the issue locally",
        "Sometimes",
        "Rarely",
        "Rarely",
        "Mocking response, Double objects, avoid calling externals APIs except when there's no options",
        "No",
        "No, is the first time I saw they have a name",
        "No.",
        "No.",
        "Detect them before they run, more accurate message on detection (specially within CI tools)",
        "It sounds interesting",
        "",
        ""
      ],
      [
        "19/04/2021 22:50:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buckley, WA, United States",
        "Undergraduate",
        "Software developer",
        "Never",
        "10",
        "Make certain that the machine environments are as similar as possible, run tests in CI, and check the test itself for logic flaws",
        "Never",
        "Never",
        "Always",
        "I write extremely granular tests, often including a test intended to falsify the previous test if possible",
        "No",
        "Broken",
        "Writing tests which run through multiple possibilities",
        "Writing tests granularly, writing palindromic tests",
        "Start up a vm, run tests, export results, and repeat for many variant setups.",
        "I don’t really have much to say",
        "Casey Parker",
        "parker.casey@pm.me"
      ],
      [
        "20/04/2021 11:08:34",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "5",
        "Check dependencies, libraries and programming language versions between both machines.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Try to evaluate as much as try/catch scenarios I can.",
        "Try to evaluate as much as try/catch scenarios I can.",
        "No.",
        "No.",
        "No.",
        "Detecting non-deterministc scenarios on developed software.",
        "This is a very interesting study that made me to research on computing theory I have studied some years ago to have a deeper understanding for this survey.",
        "Guillermo Ramiro Maquieira",
        "guimaq@gmail.com"
      ],
      [
        "20/04/2021 12:21:32",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Argentina",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "6",
        "I double-check:  - If deployment or installation of the project was done properly in the other machine.  - If the codebase is correct (for example, make sure the git branch is the correct one and no other code changes were made that could affect the results).  - If the configuration of the project is correct (for example, environment variables that could alter the application behavior).  - If external required resources are available in the same way on the second machine (APIs, databases, any connectivity needed, permissions required, IPs allow-listed, etc).  - If the test could be affected for having different hardware resources (for example, requiring more time to not timeout in a slower machine, requiring more available RAM, etc).  - The versions of the running environment to see if that could affect the compatibility (PHP version running, OS type and version, dependencies versions).   Finally I would check the steps of the failing test and probably comment/remove temporarily some of them to find out what's exactly the problem.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "I use equivalent but \"mocked-up\" interfaces to replace the resources that could not be available.  For example, I create classes/code with the same interface that the code used to manage real APIs or databases. The use that in the tests to make them independent from the connectivity or other resources required.  In other cases where that's not possible, I run some code as a part of the test battery that checks for the availability of those resources that could not be available. Then, the test itself could be classified as \"skipped\", instead of mark it as failed.  And some other times (usually when there's no enough time for a better solution) I simply try to make sure the requirements and external conditions of the environment where the tests are ran will be the best. For example having a stable environment for this purpose.",
        "I don't.",
        "Actually no, but I know that frequently the \"integration tests\" are a sub-set of the non-deterministic ones.",
        "I don't.",
        "I don't.",
        "From the top of my ming, for detection and prevention I can think in these ideas:  List the points (test steps, code lines, etc) that could potentially have different results with the same entries and code. Similar to what code linter tools do. For example show recommendations or warnings when the tests use: - Random generated information that could make the test behave differently. - Date-time based tests that could fail depending on when are they ran. - Access to external resources such as the network (using an API for example). etc.  For prevention I'd also think in a library with some util methods to verify the availability of external required resources. For example, a library with methods like \"checkInternetConnectivity\", \"checkAvailableRAM\", etc. So the test developer can use them easily and the tool can suggest to use them when needed.  I also think in having a tool where resources could be registered (for example, an API or database) in a global part of the testing code, and the on each testing scenario the developer could declare with annotations or however those resources that the scenario requires.  For correction:  Provide an OOTB mocked-up for those interfaces that are usually used to access the network. For example a replacement for the class SoapClient used to request SOAP services. Then encourage the developer to implement those methods/requests done in the tests, but with mocked data.  I'd also expect the tool/s to have the possibility to run these verifications without running the tests.  ",
        "Even when I'm not specialized in testing at all, this study resulted very interesting to me because I have seen scenarios with the non-deterministic problem, and also why not to tell, because I'm generally interested in the topics related to software engineering.  I also think that this study could be extended to be more general and not specific for the PHP language, except of course for the existing tools questions.  I hope my answers help, and even when I'm not developing in PHP for the time being, I'd also like to hear about the results.",
        "Daniel Duarte",
        "danieldd.ar@gmail.com"
      ],
      [
        "20/04/2021 16:25:06",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Richmond, Canada",
        "High school student",
        "Student",
        "Never",
        "5",
        "I check for differences in environments. It would depend on the error thrown. ",
        "Sometimes",
        "Rarely",
        "Rarely",
        "None",
        "I use CI/CD such as Travis for testing Python. ",
        "No",
        "CI/CD tools such as Travis perform tests on multiple environments. ",
        "Linters often detect errors ahead of time. ",
        "Detection, prevention and correction",
        "I'm not too familiar with what a non deterministic test is so I Googled it. ",
        "Kevin",
        "Kevinlu1248@gmail.com "
      ],
      [
        "20/04/2021 19:01:02",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Portland, OR USA",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "2",
        "Check the environment and the build to see what is different.",
        "Rarely",
        "Rarely",
        "Often",
        "Mock external dependencies. Segregate tests with external dependencies.",
        "Check that dependency is available, then only run tests if dependency is available.",
        "Integration tests.",
        "no",
        "no",
        "Configure with a list of dependencies, check dependencies and flags tests if dependencies are unavailable.",
        "In general non-deterministic tests are to be avoided.",
        "Dan Revel",
        "dan@nopolabs.com"
      ],
      [
        "21/04/2021 02:29:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Montreal, Canada",
        "Undergraduate",
        "Software engineer",
        "Rarely",
        "10",
        "Try to see if there was a difference in our local environments, easy fix is usually docker",
        "Rarely",
        "Rarely",
        "Rarely",
        "I don’t come across them often and so i don’t take many precautions against them",
        "None",
        "None",
        "None",
        "None",
        "N/A",
        "",
        "",
        ""
      ],
      [
        "21/04/2021 07:37:14",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "ShengZheng/China",
        "Master's degree completed",
        "Software developer",
        "Sometimes",
        "2",
        "Check whether there are differences in the environment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Keep the environment unified",
        "no",
        "no",
        "no",
        "no",
        "no",
        "no",
        "YeZi",
        "875307054@qq.com"
      ],
      [
        "21/04/2021 11:26:15",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Buenos Aires / Argentina",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "Asking under what conditions de test was run",
        "Rarely",
        "Often",
        "Often",
        "always test with and without conection to apis and internet",
        "No",
        "No",
        "No",
        "No",
        "Tips for scenarios that the developer does not always consider",
        "",
        "Junior Ayala",
        "elessar303@gmail.com"
      ],
      [
        "21/04/2021 13:06:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Toronto/Canada",
        "Graduation completed",
        "Team Lead",
        "Sometimes",
        "8",
        "Check the machine's code version,  then the development setup,  the required external services, including VPN",
        "Sometimes",
        "Never",
        "Rarely",
        "Document the exceptions in KBs",
        "No",
        "No",
        "No",
        "No",
        "Standardized virtual dev environment, system check before starting the testing batch",
        "Congratulations for your initiative. ",
        "Humberto Ribeiro de Souza",
        "humbertosouza@outlook.com"
      ],
      [
        "23/04/2021 20:35:59",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Squamish, BC Canada",
        "Master's degree completed",
        "Secondary Teacher and k-12 sector technologist",
        "Never",
        "7",
        "I do not do this.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Good logic? Screening inputs for possibility",
        "nope",
        "nope",
        "no",
        "no",
        "Second order tests that asses output based on known-result input.",
        "",
        "Evan Sharp",
        "ego@evansharp.ca"
      ],
      [
        "24/04/2021 10:51:31",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Montreal/Canada",
        "Master's degree completed",
        "architect",
        "Always",
        "8",
        "isolate the test to determine what makes is a potentially weak test",
        "Often",
        "Often",
        "Often",
        "better understand the dependencies and properly locate the tests that have external dependencies. When possible use contract-based testing and leave those integration tests to a very minimum",
        "nothing other than the one reported above",
        "fragile tests",
        "pact.io",
        "no",
        "help me reduce the dependency on such tests or at least better identify those",
        "can you share the results of the survey?",
        "Mario Bittencourt",
        "mbneto@gmail.com"
      ],
      [
        "25/04/2021 05:34:54",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "China",
        "PhD completed",
        "Software developer",
        "Often",
        "8",
        "I ensure the environment is exactly the same as the one in my machine. Create the same environment, the same condition and run the test again. This include making sure that network connection is activated. When the environments match, and the tests still failed. I looked at external dependencies in the test code.",
        "Often",
        "Sometimes",
        "Always",
        "Avoid any non-deterministic call in the test code. That is, we must avoid calls to some function (such as network) or randomess in the test code. Except if random is part of the code being tested.",
        "I don't have any sequence of steps to execute",
        "No aware",
        "Non",
        "Non",
        "N/A",
        "One can override native PHP function that create randomness and avoid non-deterministic test",
        "",
        ""
      ],
      [
        "25/04/2021 12:25:29",
        "I agree",
        "7 - 10 years",
        "Up to 1 year",
        "Santa Fe, Santa Fe, Argentina",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "7",
        "I'll do docker container to have the same test environment and try not to rely on external sources",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock external services if I cannot reach them",
        "Api services calls, such as maps, firebase or database related",
        "I don't think so",
        "Not yet",
        "Waiting to fail xD",
        "Harcoded links specially",
        "I'm really looking forward to know about the results of this research! :)",
        "David Maximiliano Sosa",
        "maxi3390@gmail.com"
      ],
      [
        "25/04/2021 13:33:10",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Virginia Beach, USA",
        "High School",
        "Software engineer",
        "Rarely",
        "3",
        "debug with error logging",
        "Rarely",
        "Never",
        "Rarely",
        "extra logging for possible failures",
        "no",
        "no",
        "no",
        "no",
        "identify methods that could have non deterministic results ",
        "",
        "Zak Rabe",
        "zakrabe@gmail.com"
      ],
      [
        "25/04/2021 14:18:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Matawan, New Jersey, United States",
        "Undergraduate",
        "Platform Engineer",
        "Sometimes",
        "8",
        "Find out what conditions were different on the other machine. Whether it was a configuration issue, or an environment issue, or an overall logic issue.",
        "Rarely",
        "Rarely",
        "Rarely",
        "When writing the tests I make sure if I change something in the particular bit of code it tests. The test will completely fail. I do this by actually changing the code to make the test fail.",
        "Do not have one, at this point in time",
        "I am not",
        "We do not use any tool that tests for these things. A code review should catch these.",
        "We do not use any tool that prevents these things. Aside from code reviews.",
        "When the tests are written they should have a through code review.",
        "Seemed like there were a lot of the same questions. Aside from that seemed good.",
        "Vinnie Marone",
        "vinnie.marone35@gmail.com"
      ],
      [
        "25/04/2021 15:55:58",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Salt Lake City UT USA",
        "Master's degree completed",
        "Software engineer",
        "Never",
        "10",
        "Inquire about difference in environment",
        "Sometimes",
        "Never",
        "Never",
        "Run in a controlled environment",
        "No",
        "No",
        "No",
        "Not explicitly, just control the test environment",
        "Sufficient specification of test environment",
        "Non-determinism is usually a function of the environment not the software",
        "",
        ""
      ],
      [
        "25/04/2021 16:15:04",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Memphis, Tennessee, US",
        "PhD completed",
        "Software Consultant",
        "Sometimes",
        "5",
        "Check for differences in machine configuration",
        "Often",
        "Often",
        "Often",
        "Full preparation of host machine to specification",
        "Varies",
        "system configuration errors",
        "all by hand",
        "all by hand",
        "You need to be alert",
        "",
        "Greg Blumenthal",
        "greg@gmbs-consulting.com"
      ],
      [
        "26/04/2021 06:24:34",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Finland & France",
        "Graduation completed",
        "Designer Developer",
        "Never",
        "5",
        "Start digging apache/php settings",
        "Never",
        "Rarely",
        "Rarely",
        "None",
        "None",
        "None",
        "None",
        "None",
        "Good question! Usually people want code to be fixed automatically.",
        "This was easy! Probably knew a little too little of the subject.",
        "Jonatan Eriksson",
        "jonatan@tsto.org"
      ],
      [
        "26/04/2021 06:39:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Guangdong China",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "3",
        "check out if there is any evironment difference between two machine",
        "Sometimes",
        "Often",
        "Rarely",
        "it is time-comsuming",
        "environment differ",
        "no",
        "no",
        "no",
        "run fast and easy to use",
        "this study make me notice the non-deterministic test area",
        "Gary",
        "nutto.pan@gmail.com"
      ],
      [
        "26/04/2021 13:07:21",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Pittsfield MA",
        "Master's degree completed",
        "Software developer",
        "Never",
        "5",
        "Give up and test the component manually. (I'm being honest. This is not ideal, but due to limited budgets on our client projects, this is usually what happens)",
        "Rarely",
        "Never",
        "Never",
        "n/a",
        "no",
        "no",
        "no",
        "no",
        "n/a",
        "not really applicable to our normal workflow... sorry ",
        "Peter Wise",
        "peter@squarecandy.net"
      ],
      [
        "27/04/2021 04:21:13",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Mainz/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "5",
        "Verify the test environment. We use docker to have a very similar environment in a team. Also the configuration is managed.",
        "Sometimes",
        "Rarely",
        "Never",
        "We try to mocks for external interfaces. The used test framework provides functions to do that.",
        "It depends about we are talking here. If it's a unit test, we try to prevent that behavior. For functional tests it's ok to call a real interface (with all the down sites).",
        "Functional testing. Maybe acceptance testing (depending on the definition).",
        "no",
        "no",
        "At least a static code check to find calls to external resources. Maybe a plugin for PhpStorm.",
        "Interesting. Never thought so much about non-deterministic tests.",
        "Christian Münch",
        "christian@muench-worms.de"
      ],
      [
        "27/04/2021 04:54:33",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Duesseldorf/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "Compare machines and execution environment (php version, extensions, etc), code state (modifications, revision). If that does not solve it, run a step-debugger or do poor-mans-debugging with var_dump.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Run tests in isolated environments, like docker, with restrictions on resources like network or disk.",
        "No.",
        "No.",
        "Generally not, but linters can be used to detect the usage of ext/curl and other subjects.",
        "PECL/runkit to mock php internals.",
        "* Detect: output a machine readable format for CI integration * Prevent: If configured, let tests fail for having non-deterministic side-effects * Correction: No tool should correct this on its own. It may suggest alternatives, though",
        "All the best and good luck!",
        "",
        ""
      ],
      [
        "27/04/2021 04:57:11",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Berlin",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "5",
        "Debug on that other machine. Reproduce. Fix.",
        "Never",
        "Never",
        "Never",
        "None, I hardly have that case.",
        "No.",
        "No.",
        "No.",
        "No.",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:29:10",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Lübeck/Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "9",
        "Check the versions of anything involved. Check again locally. Check for any changes not (correctly) committed to the code. Debug the failing test.",
        "Rarely",
        "Sometimes",
        "Often",
        "Most of the time I just make sure the test is not relying on external factors (time passing, network being available, randomness involved, …)",
        "No…",
        "🤷‍♂️",
        "No",
        "No",
        "🤷‍♂️",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:58:44",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Münster/Germany",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "8",
        "Checking the dependencies (e.g. installed libraries, composer packages, software versions).",
        "Rarely",
        "Never",
        "Never",
        "Common error handling (e.g. try-catch around the external request).",
        "/",
        "/",
        "/",
        "/",
        "/",
        "",
        "Kai Neuwerth",
        "kai@neuwerth.me"
      ],
      [
        "27/04/2021 07:51:01",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Often",
        "9",
        "Find the difference between his and mine setup, if there is none, check the test validity.",
        "Rarely",
        "Never",
        "Rarely",
        "Good Test Design and good Environment Preparements",
        "See https://ruby.sadi.st/Heckle.html and https://infection.github.io/guide/ (Mutation Testing)",
        "No",
        "https://infection.github.io/guide/",
        "No",
        "https://infection.github.io/guide/",
        "",
        "Herbert Maschke",
        "thyseus@gmail.com"
      ],
      [
        "27/04/2021 08:17:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Würzburg / Germany",
        "Undergraduate",
        "Software developer",
        "Never",
        "5",
        "Check the test and / or the code",
        "Never",
        "Never",
        "Never",
        "None :-)",
        "no",
        "no",
        "no",
        "no",
        "dont know?",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 08:43:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Dresden, Germany",
        "Bachelor's degree completed",
        "I was a software developer, then gradually became more of an software engineer and nowadays am a consultant and manager for software development projects.",
        "Sometimes",
        "7",
        "I'd search for differences in the runtime environments to figure out, which external factors could have influenced the test. Then I try to improve the test in order to check those dependencies as well.",
        "Sometimes",
        "Rarely",
        "Often",
        "For each test I try to figure out if there are any dependencies from external factors. If there are, I write additional tests explicitly checking for those factors.",
        "If the non-determistic behaviour is intrinsic, I would not write a test expecting a deterministic result, but just perform a plausability test instead.",
        "No.",
        "No.",
        "No.",
        "That's hard to say. I'd expect the tool to at least recognize external dependencies, but that would be really hard to do, I guess.",
        "Very interesting topic! Good luck with your degree!",
        "Sebastian Meyer",
        "https://github.com/sebastian-meyer"
      ],
      [
        "27/04/2021 08:52:26",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "self-educated",
        "Software Quality Consultant",
        "Never",
        "10",
        "That only happens, if I rely on a dependency that is not explicitely stated in composer.json but installed locally. In that case, I fix composer.json to also reflect that dependency.",
        "Never",
        "Never",
        "Always",
        "Mocking external dependencies. External services can always be mocked using Docker containers.",
        "I completely avoid non-deterministic tests, so there's never a need to execute them.",
        "Those tests are simply broken.",
        "No",
        "No, just code review.",
        " I personally don't need such a tool, it is superseeded by my awareness. Nevertheless, I know people who should use it ;)  Since mock genereation is not the easiest task, a mock generator could be useful, i.e., create a Docker container with senseful data that mimics the original service just as much as needed by the tests. The mock is generated once, when the connection is available, but is then independent from any outbound connection.",
        "I'm interested in the results of the survey. Please send it to nbraczek@bsds.de, if possible.",
        "Niels Braczek",
        "nbraczek@bsds.de"
      ],
      [
        "27/04/2021 09:20:13",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Duisburg/Germany",
        "Fachabitur, lower as university + trained as IT specialist in application development",
        "Software developer",
        "Rarely",
        "8",
        "Telling him \"it works on my machine\". Joke aside, inspectiong the code and triying to find the differences of his and my machine and envioment which could affect the test code.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "Use a general \"enviroment\" or general test before testing the code and/or write detailed error messages/logs why the test failed.",
        "phpunittests? Not sure what is meant, so \"no\".",
        "No",
        "No",
        "No",
        "Checking the enviroment (like my general test)",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 10:06:57",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin/Germany ",
        "Undergraduate",
        "Engineering Lead ",
        "Sometimes",
        "10",
        "I would typicslly step through the test case with a debugger. I'll be likely looking for branching (if, switch, etc) logic based on random, time or other  external resources. (In other languages data races are just as common)",
        "Rarely",
        "Rarely",
        "Often",
        "Helper classes which use external sources by default but let tests override it",
        "No",
        "No",
        "Not in PHP.",
        "No.",
        "I'd expect them to listen potential issues. I'd probably run them locally on commit.",
        "",
        "Peter Aba",
        "peter@peteraba.com "
      ],
      [
        "27/04/2021 10:31:42",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Berlin/Germany",
        "Graduation completed",
        "Engineering Manager",
        "Often",
        "6",
        "I compare our environment details (configurations, environment variables) and connectivity with external services involved.  I always advise my teams to use a common environment by making use of Docker/docker-compose or Virtual Machines.",
        "Rarely",
        "Rarely",
        "Often",
        "I encourage TDD practices (which builds majority of tests) using Unit tests only. Unit tests by convention must contain no I/O and rely on mocks where necessary.  Date/Time units that need to be tested should use \"relative time\" as much as possible in order to avoid time bombs such as new years eve build breaks.",
        "I usually understand non-deterministic tests as tests that connect components from outside the software's boundaries (reading from a disk, network..). So normalising the environment using VMs and common shared configurations is already a good start.  Sharing databases and services is also ideal and, when not possible, make use o migrations and conventions that make sure such tests will only use data provided by such migrations.  Another option that I use take is to spin up fake services that will return the expected response (force a response HTTP 2xx, 4xx, timeout exceptions...)",
        "No",
        "No",
        "No. As I mentioned before, I often use a mix of conventions and shared environments in order to reduce the amount of non-deterministic tests.",
        "Thinking of I/O as the source of all evil, I can envision a tool that monitors, takes snapshots and replays or mock network transactions for specific tests.  This way a test framework (such as phpunit or pest) may have different test profiles for each test in a test case. Potentially using a common \"given\" method (thinking of \"given/when/then\" testing approach) or annotations.",
        "Questions are very interesting and I'd be keen to read the output of your research. I must say that the video showing an example of non-deterministic tests created a huge bias on my responses, because I mostly think of your network exception example. I hope that's intentional.  I believe not differentiating test types can mislead people (unit/integration/e2e tests to name a few) and I hope the lack of guidance there is intentional.",
        "Níckolas Da Silva",
        "nawarian@gmail.com"
      ],
      [
        "27/04/2021 10:36:44",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Berlin, Germany",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "4",
        "For unit testing: - Check if such a test relies on external dependencies - Replace these hard dependencies (if any) with interfaces - Mock or stub these interfaces  For integration tests: - Add all stateful dependencies to docker containers - Make sure to rely on anything else but containers ",
        "Rarely",
        "Never",
        "Sometimes",
        "For Unit tests: never rely on stateful dependencies For Integration tests: Docker/containers for stateful dependencies",
        "-",
        "-",
        "-",
        "Docker",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 12:59:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Stuttgart Stralsund ",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "9",
        "Debug it! ",
        "Rarely",
        "Rarely",
        "Often",
        "Make e.g. sure external deps are mocked ",
        "...",
        "No",
        "No",
        "No",
        "No",
        "",
        "Phil ",
        "Phiamo@gmail.com "
      ],
      [
        "27/04/2021 20:25:09",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Germany",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "3",
        "Inspect the environment and examine the logs. ",
        "Often",
        "Never",
        "Never",
        "Depending on what type of tests I’m writing. Unittests have no external dependencies and work within a clearly defined scope. Functional tests or integration tests are by nature often non deterministic. ",
        "Don’t get this question. ",
        "Infected tests ",
        "No",
        "No",
        "/",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 01:16:37",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Düsseldorf/Gernany",
        "Undergraduate",
        "CEO (I used to be a developer, though)",
        "Rarely",
        "7",
        "Find the error in the tests",
        "Rarely",
        "Always",
        "Always",
        "Code-Reviews are done before code gets merged",
        "phpunit executes the tests, but I think I don‘t understand the question.",
        "Testing external dependencies should be done in integration tests. The integration tests may fail due to missing conbectivity and are re-run multiple times to verify the integration works",
        "no",
        "no",
        "detection, I guess?",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:50:25",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Pasig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "I evaluate the environment the test was performed on, specifically if there are huge differences in its core stack (was the test ran on a Linux environment or a Windows one?) I also extract the exact error to determine the next course of action.",
        "Always",
        "Always",
        "Often",
        "We usually assume through policy that a test environment MUST meet the expectations in the specification documents of the project. It is well-clarified throughout the team that such differences in expected environments will require a deeper analysis of the encountered errors and will be a significant cause of delay.",
        "None",
        "None",
        "None",
        "None",
        "Well-written test cases to clearly report back what caused the non-deterministic test to fail.",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:58:48",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Makati, Philippines",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Investigate",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mock the dependencies and use test or sample data",
        "PHPUnit",
        "Not aware",
        "Not aware of any tools on this",
        "Not aware of any tools on this",
        "Not sure",
        "",
        "Alexander Torrijos",
        "artorrijos@gmail.com"
      ],
      [
        "28/04/2021 03:24:15",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "1. rerun the test. 2. check versioning /device differences 3. debug the test",
        "Rarely",
        "Rarely",
        "Never",
        "None.",
        "I sometimes have to make async, external api calls and then just wait for a timeout. ",
        "no",
        "maybe SonarQube?",
        "maybe SonarQube?",
        "usual CI, with build features, code analysis, and adaptable to many platforms",
        "Tho I know what SW-Testing (and TTD) is, I rarely use it in personal projects (when I'm the only contributor anyway) which is quite often. Also, I know and worked with PHP for some time, but for sure wouldn't call me a PHP-expert and I never even wrote a single test in PHP.",
        "Henrik Storch",
        "thisisthefoxe.dhbw@gmail.com"
      ],
      [
        "28/04/2021 03:43:23",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Stuttgart, Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "8",
        "Investigate the error on the other machine. Try to reproduce the issue locally. Ensure that the underlying problem is understood. Try to make the test deterministic or if impossible try to determine the factors involved and skip the test if problematic condition is detected.",
        "Rarely",
        "Sometimes",
        "Often",
        "Reduce external dependencies, esp. operating system, filesystem, etc.",
        "Not sure what's meant with this question",
        "randomly failing tests",
        "No.",
        "No.",
        "Detect problematic use of functions that may cause non-deterministic behaviour. ",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 04:14:44",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Barcelona/spain",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "5",
        "I would adk him to show me the code",
        "Rarely",
        "Rarely",
        "Rarely",
        "External dependencies are wrapped in a new class or i add general exception catching for the call",
        "No",
        "No",
        "No",
        "No",
        "No idea",
        "Interesting topic",
        "",
        ""
      ],
      [
        "28/04/2021 04:37:42",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Olongapo",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "1",
        "use docker, and mock api test",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Just use Docker, and Mock the Api",
        "None , I just use my own method of test driven development , And i Do  run my code in 3 platform mac, windows and linux.",
        "none",
        "github workflow now can run test on all platform making sure your test pass in all platform",
        "NOne",
        "None",
        "",
        "Uriah",
        "codeitlikemiley@gmail.com"
      ],
      [
        "28/04/2021 05:01:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Bonn Germany ",
        "Master's degree completed",
        "Software engineer",
        "Always",
        "7",
        "Find out why this happens. Than the code to make the test deterministic. If that is not possible, for example like in your video, create a second test, that tests against a mock or a stub, so that one is deterministic. Then use the other test in a different testset, that runs against the third party application, to check, where the api still works. Usually these tests have a rerun possibility. The deterministic test set should never fail, the other one could. ",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mocking and stubbing, predetermined test data, e.g.",
        "E sometimes use retry mechanisms, and in your video example those tests would test the Internet connection before running the test, so that we know, that was the cause for the failure. ",
        "Flaky tests",
        "No. ",
        "Not automatically. Some people have rerun mechanisms for their tests, but I do not like those automated Nachsaisons, because it makes you not taking care. ",
        "Showing known causes",
        "I would like to see your resulting paper please, falk@kuehnel.du",
        "Falk Kühnel",
        "falk@kuehnel.eu"
      ],
      [
        "28/04/2021 05:11:34",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Passau/Germany",
        "Master's degree completed",
        "Hacker / Software hacker / Hacker aka tester/debuger/developer/creator",
        "Sometimes",
        "7",
        "1st) check configs, 2nd) get screen sharing online",
        "Rarely",
        "Rarely",
        "Rarely",
        "don't do too much in one test, do many tests based on just a few.",
        "-",
        "-",
        "-",
        "-",
        "should be plugin for phpstorm and for the other idea group like webstorm",
        "-",
        "",
        ""
      ],
      [
        "28/04/2021 05:53:04",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Taguig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "6",
        "read the error message if available or check if the another machine and my machine has same version of php ",
        "Rarely",
        "Rarely",
        "Often",
        "run unit test to locate the non deterministic code and revise it",
        "no",
        "no",
        "no",
        "no",
        "cpu profiler",
        "sorry, some answers are not substantial",
        "Frex Cuadillera",
        "fcuadillera@gmail.com"
      ],
      [
        "28/04/2021 06:17:52",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "3",
        "Docker",
        "Often",
        "Rarely",
        "Rarely",
        "Include as input whatever can change in the environment that makes the test deterministic",
        "N/a",
        "None",
        "None",
        "Docker and containerization",
        "Don't know",
        "Good luck",
        "Claude",
        "claudekirke@gmail.com"
      ],
      [
        "28/04/2021 06:47:20",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Germany Rosenheim",
        "Graduation completed",
        "Senior Backend Developer, Lead Product Developer",
        "Rarely",
        "8",
        "Identify and resolve the differences between the two test environments.",
        "Rarely",
        "Rarely",
        "Often",
        "Replace external APIs with local dummy APIs to create deterministic API responses/behavior (mostly based on docker)",
        "No",
        "\"Snowflake Tests\": They will break over something rather irrelevant or sensitive external condition. These are tests that will fail often in your pipeline and they will be successful if rerun.",
        "No. Sometimes our CI/CD Pipeline will break for no reason, which is an indicator for such (bad) tests.",
        "We don't test or rely on external resources. It's good practice to Mock/Stub the parts of your code that rely on external resources. PHPUnit is used to create Mocks/Stubs.",
        "The tool should detect if any external resource is used, identify the protocol, request and response contents and format and automatically derive a stub, which can be used to replace the external call. This information must be exportable as file to be commited with the tests and used by others to use the tool and the configuration to run the tests against the mocked API of the tool, not the Live-Api. Nice to Have: An UI to modify the detected reponses",
        "Good luck",
        "",
        ""
      ],
      [
        "28/04/2021 07:39:30",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Philippines",
        "Master's degree in progress",
        "Solutions Architect",
        "Rarely",
        "3",
        "Determine the similarity and difference in test execution environment",
        "Rarely",
        "Rarely",
        "Always",
        "With defensive coding practices, have the code define and ensure satisfaction of requirements before executing their function.",
        "No, it's a bad practice",
        "No",
        "No",
        "Rather than a tool, it's basic coding practice to ensure all requirements for success of your code is in place.",
        "Detection of dependencies to functions beyond the current system's control, but paradoxically it means everything",
        "The term 'non-deterministic test' is a misnomer, there may be no changes in the code, but we have observable and remediable changes on parameters or environment variables (i.e. internet connection) beyond control of the software that the PHP code depends on. ",
        "Tito Mari Francis Escaño",
        "titomarifrancis@gmail.com"
      ],
      [
        "28/04/2021 08:56:15",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Manila/Philippines",
        "Graduation completed",
        "Development Manager",
        "Often",
        "10",
        "Usually, discuss the issue with the developer and advise for mitigation. Sometimes, we also incorporate it already during brainstorming / grooming and discuss that this should have been included already in the beginning and not on the end.",
        "Sometimes",
        "Often",
        "Often",
        "We make as much realistic scenarios as possible. Also, on the code level, we tend to increase the support of the previously encountered scenarios and have it applied on future development.",
        "One is to setup automated testing mechanism being executed on regular / daily basis. This way, we can easily catch the potential issues during the execution and compare on the last result. From there, we can investigate / dig further what may caused it and make the necessary adjustment so that it will not happen again on the next run.  In addition, regular code analysis of both test case and also the main code itself is beneficial as you may not know that somewhere before or down the line, an incorrect argument or method may have caused the non-deterministic test.  Another one is to increase the test suites. Granted that one scenario is not enough but as mentioned, once we encounter the issue somewhere, it is automatically added on the list to be tested and have it incorporated on the test case and also on the code.",
        "Usually, we do isolation as sometimes, the application on one environment only shows the issue as compare to others. Once we isolate the application in question, we perform the test, either automated or manual, so that we can have proper verification that we need. Since its already isolated, we tend to perform other change of environment (like pretending of slow connection and like) as that shows a different side of story as well.  In relation to isolation, we tend to create a different test suite so that we can make sure that during execution, it will not be that invasive unlike the usual test suite and can be executed multiple times in different scenarios.",
        "Not that I know of specifically as we tend to rely on collective usage and adapt as we go along.",
        "Probably it can be covered at some point by code analysis like SonarQube. Because with SonarQube, its not just the code is being scanned, but also the potential coverage and also some duplicates of the test cases generated.",
        "I guess would be able to cover certain scenarios that usual testing won't be able to cover. Probably intelligent enough to advise that certain issue can be achieved by this scenario and so on.",
        "Really looking forward on the result of this study because its an eye opener to developers generating those applications and solutions which may lead towards service resiliency and better security.",
        "Rellmon P. Ponce de Leon",
        "raremon@gmail.com"
      ],
      [
        "28/04/2021 10:43:10",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Davao city, Philippines",
        "Graduation completed",
        "Software developer",
        "Often",
        "7",
        "View logs",
        "Sometimes",
        "Sometimes",
        "Often",
        "Add paramaters to run the test multiple times.",
        "no",
        "nope",
        "nope",
        "nope",
        "nope",
        "Thanks and good luck",
        "Goper",
        "goper.zosa@gmail.com"
      ],
      [
        "28/04/2021 11:58:57",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "7",
        "Check for time issues (i.e. mock 'now'), reduce integration tests with unreliable services to a minimum, mark them as unstable",
        "Rarely",
        "Sometimes",
        "Often",
        "Make boundaries to external services clear, easily mockable",
        "-",
        "Unstable tests",
        "No",
        "No",
        "Detect external calls in tests or time dependent logic (suggest injecting a clock component)",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 12:13:06",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Philippines",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "check the difference between configurations, then compatibility and then difference in environment",
        "Rarely",
        "Sometimes",
        "Rarely",
        "making sure to look for boolean results",
        "havent really",
        "none",
        "none",
        "none in particular",
        "i am not really verbose in testing",
        "I am actually a frontend developer, I have worked with php for just a short period so it might be better to look for respondents who are truly backend",
        "Sanz moses",
        "web@sanzmoses.com"
      ],
      [
        "28/04/2021 13:08:01",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Bohol, Philippines",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "I usually look for relevant error messages in the console and in the logs.",
        "Sometimes",
        "Always",
        "Always",
        "I mock the causes of the non-deterministic tests. I also test the cause separately and sometimes manually.",
        "If the code requires an external service, my usual step is to mock that service when writing tests.",
        "No",
        "No",
        "No",
        "Pointing the exact cause of the non-deterministic behavior like if I cannot reach the external service required due to a severed internet connection.",
        "Good luck!",
        "",
        "ejillberth@gmail.com"
      ],
      [
        "28/04/2021 21:04:10",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Manila, Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Find the difference between my machine and the other persons machine",
        "Sometimes",
        "Always",
        "Often",
        "Have a source of truth, like CI, with the correct configuration. Use virtual machines for reproducibility. Avoid code and tests that produce non-deterministic output, like RNGs, timezone libraries, unmocked classes.",
        "no",
        "race conditions, intermittent failure, false positive",
        "no",
        "no",
        "i dont really use one, mostly its detected by the test runner itself",
        "",
        "Kelly Navarro",
        "gabrnavarro@gmail.com"
      ],
      [
        "28/04/2021 22:43:52",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "Check operating system, check network connectivity or whitelisting to external API, check environmental variable",
        "Often",
        "Often",
        "Often",
        "Separate non-deterministic test like creating a new test suite so that it can be executed separately from internal business logic test case",
        "From test creation, separate non-deterministic tests externally and group them together according to their purpose. Grouping together tests dependent on operating system, tests dependent on connectivity, or tests dependent on other microservices. If it is okay to bypass the dependency and we will only require the target data/response, it could be replaced by mock testing.",
        "Dependency testing as I could say, as it depends on multiple variables in order for it be success.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "If there's a tool, maybe it will detect first the connectivity of the non-deterministic tests and then catch its error to notify the executor of the test. Or it can save such scenario on time of creation like the response of the third party API and store it into a folder so that it can be used as referenced for future non-deterministic tests.",
        "The purpose of this study is good to the point that it can increase the developer/tester experience in tackling non-deterministic tests.",
        "Arvin Reynoso",
        "reynosoarvin@gmail.com"
      ],
      [
        "29/04/2021 02:04:20",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Bacolod City",
        "Graduation completed",
        "Software developer",
        "Always",
        "6",
        "list down your apps machine what you install and install to other machine or use docker..",
        "Sometimes",
        "Always",
        "Always",
        "set workflow of your code structure, be strict on data types and always restart or hard refresh",
        "yes because you should take down list of the error with solution",
        "yes I'm strict when it comes to variables",
        "no",
        "no",
        "none",
        "Such a nice survey.. so interesting",
        "edrian jan solatorio",
        "edrianjansolatorio@gmail.com"
      ],
      [
        "29/04/2021 04:01:19",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Frankfurt/Germany",
        "vocational technical diploma",
        "Software developer",
        "Rarely",
        "3",
        "Analyze the error message, in most cases there are differences in the conditions between developer-machine and another",
        "Rarely",
        "Rarely",
        "Rarely",
        "avoid depending on 3rd party services mostly, if not possible, catch possible issues and output accordingly",
        "no",
        "external service/data dependent",
        "no",
        "no",
        "analyze what parts of the code are refering to external services",
        "",
        "Michael",
        "d00p@froxlor.org"
      ],
      [
        "29/04/2021 07:41:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin, Germany",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "7",
        "It depends on the kind of test. Browser tests (written in PHP or any other language) for example are often non-deterministic and require timeouts to be configured for the completion of certain interactions. In such cases the test may fail because the execution time exceeds the default timeout specified for the test and needs to be increased.  In other cases the test may require the software to be configured in a way that cannot be done within the test setup. Investigating whether the test outcome is influenced e.g. by environment variables would be something that I'd check in such a scenario.",
        "Often",
        "Often",
        "Often",
        "Peer review and running tests as part of automated continuous integration tests.",
        "I don't understand the question.",
        "\"tests with non-deterministic behavior\" is the term I would use. Browser tests and edge to edge tests come to mind as classes of tests that often fall into this category.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "It should cause the affected tests to fail or trigger some sort of warning.",
        "",
        "",
        ""
      ],
      [
        "29/04/2021 21:58:21",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Remote for US, Belgium and Argentina",
        "Graduation completed",
        "Software engineer",
        "Always",
        "5",
        "I would try to reproduce it and change the test so it works aisolated to the environment",
        "Sometimes",
        "Sometimes",
        "Rarely",
        "I run them in a virtualized environment and so do the rest Of the devs ",
        "No",
        "No",
        "No",
        "No",
        "To cover every possible scenario",
        "Good luck with your study! ",
        "Vicky Jauregui ",
        "jaureguivictoria@gmail.com"
      ]
    ],
    "classifications": [
      "timestamp",
      "terms",
      "groupsInAnswer",
      "groupsInAnswer",
      "cityState",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "npsLike",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "groupsInAnswer",
      "feedback",
      "groupsInAnswer",
      "groupsInAnswer"
    ],
    "manualSettings": {}
  },
  "1620317410103": {
    "titles": [
      "Carimbo de data/hora",
      "Check the \"I agree\" option if you have read and agree to the consent form.",
      "How long have you been working with PHP?",
      "How long have you been working with PHP software testing?",
      "Where do you work? (City/Country)",
      "What is your academic level?",
      "Regarding your profession, what title would you give yourself?",
      "Have you ever dealt with non-deterministic software testing of any kind?",
      "On a scale of 1 to 10, how problematic do you consider the occurrence of non-deterministic tests in software projects?",
      "Let us consider the following scenario: You have developed a test code, and you were successful at running it on your machine. However, when you or someone else ran the same test on another machine, it failed. What action do you usually take when face such a scenario?",
      "How often do non-deterministic tests appear in your workflow?",
      "How often do you employ non-deterministic tests correction practices in your workflow?",
      "How often do you employ non-deterministic tests prevention practices in your workflow?",
      "What precautions do you take to prevent the tests you write from being non-deterministic?",
      "Do you use (or be aware of) any routine for the execution of non-deterministic tests? If so, could you please detail it/them?",
      "Are you aware of any other name associated with \"tests with non-deterministic behavior\"? If so, could you please detail it/them?",
      "Do you use or know any tools to detect non-deterministic tests? Please detail it/them.",
      "Do you use or know any tools to prevent non-deterministic tests? Please detail it/them.",
      "What are the expected features for a tool dealing with (detection, prevention or correction) non-deterministic tests in software projects?",
      "Give your feedback on this study, or comment freely.",
      "What is your name?",
      "What is your email?"
    ],
    "rows": [
      [
        "08/04/2021 18:53:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "France",
        "Master's degree completed",
        "Software developer",
        "Rarely",
        "5",
        "Examine test environment",
        "Rarely",
        "Never",
        "Rarely",
        "Mocking / emulating external resources",
        "No",
        "Tests with external dependencies",
        "no",
        "no",
        "Checking for external dependencies, comparing with previous test runs",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 20:04:13",
        "I don't agree",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 22:31:59",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Banjarmasin, Indonesia",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "I usually check for the other person's project setup, eg: 1. Are they follow the setup instruction correctly? 2. Are they set the correct env variable values correctly?  Related to the tests it self, sometimes I face this issue because: 1. Some random function (eg. php faker) generates an invalid value (usually status_code numbers in integer). 2. Date time value definition related to calculation of holidays (rarely).  But for me, mostly this issue occurs related to the project setup documentation.",
        "Rarely",
        "Sometimes",
        "Always",
        "1. Using mock object and response for the tests related to external API calls 2. Using carbon instance and carbon mock object for date time definition on tests 3. Prevent using random function for particular model attributes, eg: user_role_id, status_code, which I will use for data filtering or where clause on the production code. 4. Update the project documentation if the changes will impact the tests.",
        "I don't really get this question.",
        "I was using term \"intermittent test failures\" for this kind of test issue.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "I don't expect any tool to deal with it, I think I don't need one. Because this issue rarely occurs on my projects. Mostly this issue happen because of my own careless",
        "TBH, I still don't get the point of this research, why do you need these answers, and what the goal of this research.  I just get that: 1. You want to know how often developers facing non-deterministic tests 2. You want to develop some tool to detect and prevent this test issue  But, still not sure about that :D  PS: I didn't understand 1 question (see my answers). If you can elaborate more about it (via email), I'd be happy to answer it.",
        "Nafies Luthfi",
        "nafiesl@gmail.com"
      ],
      [
        "09/04/2021 08:52:22",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Tokyo/Japan ",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "9",
        "Develop and share Docker environments",
        "Rarely",
        "Sometimes",
        "Always",
        "Mocking Disk IO or API calls",
        "None",
        "tests with side effects",
        "None",
        "None",
        "?",
        "",
        "mpyw",
        "mpyw628@gmail.com"
      ],
      [
        "09/04/2021 12:12:40",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "From home in Canada",
        "Graduation completed",
        "Software Developer and Tester",
        "Sometimes",
        "10",
        "Pair with another developer to determine differences in data, language settings or even operating system to debug why the test fails in one environment but not another ",
        "Often",
        "Often",
        "Often",
        "Understand what data is required for the test to pass and determine any “side effects” that might be occurring that could make the test non-deterministic ",
        "No",
        "No",
        "No",
        "No",
        "Clear error messages and the ability to be easily run in in a continuous integration environment like GitHub Actions",
        "",
        "Chris Hartjes",
        "chartjes@littlehart.net"
      ],
      [
        "10/04/2021 11:37:15",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Grand Rapids, USA",
        "Undergraduate",
        "Software developer",
        "Often",
        "4",
        "Try to have THAT developer debug why it's not working on their machine",
        "Often",
        "Sometimes",
        "Rarely",
        "Mocking inside a unit test. However, sometimes we purposely want to to test the entire, connected system and so we do NOT want to mock external things (like databases, APIs, etc)",
        "For tests that rely on an external API call, we try to use an API service that can be used by all devs (e.g. not something that requires a production API key). But mostly... if it makes sense, we would try to mock out these external services. But when we specifically choose to NOT mock them (because the test is most valuable when using the real API), we just \"live\" with the possibility that it may fail sometimes.",
        "We call them \"phantom failure\" tests - tests that fail sometimes but not other times. These are a PAIN. They are actually most commonly associated with Selenium-style tests where, for whatever reason, the interface responds more slowly sometimes, and so our tests fail because they have not waited long enough for something to load.",
        ".",
        ".",
        ".",
        "",
        "Ryan Weaver",
        "ryan@symfonycasts.com"
      ],
      [
        "10/04/2021 11:54:33",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "China",
        "Senior high school in progress",
        "Software developer",
        "Rarely",
        "6",
        "Ask for the environmental parameters of the other party, and reproduce these problems as much as possible. And ask him/her completely delete the software and then re-install it.",
        "Rarely",
        "Rarely",
        "Rarely",
        "None",
        "idk",
        "We usually call it metaphysics",
        "I lack experience in this field",
        "I lack experience in this field",
        "I lack experience in this field",
        "",
        "MlgmXyysd",
        "mlgmxyysd@meowcat.org"
      ],
      [
        "10/04/2021 14:53:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Czech Republic",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "File an issue to fix it, to make the test deterministic",
        "Rarely",
        "Rarely",
        "Often",
        "Mocking objects and/or responses",
        "No",
        "Maybe \"tests with external dependencies\"",
        "No",
        "Mock libraries",
        "Don't know",
        "",
        "",
        ""
      ],
      [
        "10/04/2021 15:29:22",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Kolkata/India",
        "Graduation completed",
        "Software developer",
        "Never",
        "1",
        "Use docker",
        "Never",
        "Never",
        "Never",
        "Nothing",
        "No",
        "Sounds like random probability",
        "No",
        "No",
        "No",
        "Would be good to give a code example of non deterministic test",
        "Anubhav",
        "xprilion@gmail.com"
      ],
      [
        "10/04/2021 18:34:14",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "New York City/USA",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Check the testing environment",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock third-party dependencies",
        "Make sure that dependencies are injectable, then replace the dependencies with mocked objects/results",
        "Non-atomic tests, tests with external dependencies",
        "Nope",
        "Nope",
        "This tool would be able to identify dependencies that interface with third-party software, like curl, cache engines, database engines, etc...",
        "",
        "Hypolite Petovan",
        "hypolite@mrpetovan.com"
      ],
      [
        "10/04/2021 18:59:11",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Frederick, Maryland, USA",
        "Some college",
        "Software developer",
        "Always",
        "9",
        "Confirm that both systems have the same things installed and investigate further",
        "Rarely",
        "Often",
        "Sometimes",
        "Manual review of the tests",
        "Not really",
        "Heisenbugs ;-)",
        "No",
        "No",
        "I don't know",
        "",
        "",
        ""
      ],
      [
        "11/04/2021 00:13:03",
        "I agree",
        "Up to 1 year",
        "Up to 1 year",
        "China",
        "Graduation completed",
        "Software developer",
        "Never",
        "2",
        "Check their PHP version, etc",
        "Never",
        "Never",
        "Never",
        "I never write tests",
        "Nope.",
        "No",
        "No.",
        "NO",
        "I don't know",
        "",
        "Anonymous",
        ""
      ],
      [
        "11/04/2021 07:12:52",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Muncih, Germany",
        "Master's degree completed",
        "IT Consultant",
        "Sometimes",
        "2",
        "Find out why the test fails on other machine.",
        "Rarely",
        "Never",
        "Always",
        "Decouple.",
        "Replace randomness and actual time by pre-defined values that get injected; decouple tests from external resources.",
        "Flaky tests",
        "PHPUnit allows repeated test execution.",
        "For testing external APIs, I hand-code an \"is available\" check. When external resource is not available, I skip the test.",
        "Magically fix all problems? ,-)",
        "I found the term \"non-deterministic tests\" a bit misleading first, because I thought it would refer to testing code with non-deterministic behaviour. The way it was presented in the video, it \"just\" refers to external resources that are not available. Or at least, this is my assumption at this point.",
        "Stefan Priebsch",
        "stefan@priebsch.de"
      ],
      [
        "11/04/2021 09:43:45",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Berlin",
        "Graduation completed",
        "Software engineer",
        "Often",
        "7",
        "try to run all tests on CI, and consider that as main source of truth",
        "Sometimes",
        "Sometimes",
        "Often",
        "avoid network access, avoid random data, avoid waiting for stuff... whatever is not in your control should be avoided",
        "no",
        "no",
        "no",
        "no",
        "locating code that depends on possible not deterministic features (network, time, randomness...)",
        "cool",
        "Asmir",
        "goetas@gmail.com"
      ],
      [
        "12/04/2021 00:22:12",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Hong Kong",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "1",
        "Relicate failed enviroment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Enviromental tests to ensure matching enviroment before running test",
        "Library check etc.",
        "no",
        "no",
        "no",
        "n/a",
        "Probably use a text description for non-deterministic tests, rather than video.",
        "Alan Knowles",
        "alan@roojs.com"
      ],
      [
        "12/04/2021 00:25:33",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Melbourne/Australia",
        "Dropout",
        "DevOps Engineer",
        "Sometimes",
        "5",
        "Teach the other user about Docker, and implement it as a CI/CD pipeline so it always has the same outcome.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Use Docker for coding environments, and use a CI/CD pipeline from my Git repo.",
        "Nope",
        "Nope",
        "Nope, I just do it manually",
        "I use Docker",
        "NA",
        "It isn't really something I've had to worry about, or applies to any of the projects I've worked with.",
        "Dean Lofts",
        "dean@deanlofts.xyz"
      ],
      [
        "12/04/2021 17:29:12",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Columbus, OH, USA",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "Look for potential causes (environment configuration, race conditions, etc.) that may be causing the test to behave differently, then refactor the test method to compensate for or eliminate these differences.",
        "Sometimes",
        "Often",
        "Often",
        "Be explicit with the arrangement of the tests and leverage test doubles to ensure that processes outside of the System Under Test (SUT) are not polluting the test.",
        "If tests fail intermittently when run either locally or in a CI pipeline, determine what is causing the test to fail and, if it's from outside causes, use test doubles or other approaches to ensure consistent results.",
        "Nothing formal, but \"there's a race condition in this test\" gets thrown around a lot.",
        "PHPStan and Psalm can be helpful in catching logical errors, but are not specific to non-deterministic tests. I suppose mutation testing (e.g. InfectionPHP) could also be effective, but I have not explored this.",
        "PHPStan and Psalm (see previous).",
        "Warning when items outside of the scope of the SUT are being evaluated, and recommend approaches to avoid these from being a factor.",
        "",
        "Steve Grunwell",
        "steve@stevegrunwell.com"
      ],
      [
        "14/04/2021 23:15:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Nashville, TN, US",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "10",
        "I try to isolate the variable part of the code that causes the failure and use a mock to ensure that the test is deterministic. If the code should run successfully during a failure state, then I create a mock that simulates failure to ensure the failure state in a deterministic way. One of the best ways to achieve this is to use dependency injection.",
        "Rarely",
        "Always",
        "Often",
        "I make extensive use of dependency injection and use mocks to mock as much as possible, except for the lines of code I am testing.",
        "I do not make use of it currently, but if I needed to test non-deterministic code, I might use the PHP library \"Infection\" to facilitate mutation testing.",
        "Mutation testing",
        "I have used PHP-Mock, which allows you to test non-deterministic PHP functions, such as time() and random_int().",
        "I regularly use PHPStan and Psalm to statically analyze my code for type correctness. This does not fully prevent non-deterministic tests, but it can help.",
        "Analyze code and identify functions and methods that might return values that later code paths may not be able to process.",
        "",
        "Ben Ramsey",
        "ben@benramsey.com"
      ],
      [
        "18/04/2021 23:51:40",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "5",
        "Extension checks, re-check composer packages and other dependancies, validate ini's are matching and PHP versions are equal. ",
        "Rarely",
        "Sometimes",
        "Sometimes",
        "Not in tests; however in CI/CD",
        "No",
        "N/a",
        "N/a",
        "N/a",
        "N/a",
        "",
        "Rama",
        "me@rexsdev.com"
      ],
      [
        "18/04/2021 23:52:46",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Montreal/Canada",
        "Master's degree completed",
        "Backend Developer / DevOps",
        "Rarely",
        "10",
        "Try to reproduce the error on the working machine",
        "Rarely",
        "Never",
        "Never",
        "I always isolate the thing I want to try and remove any link to external services/tools",
        "no",
        "no",
        "PHPUnit infection (Mutation testing)",
        "No",
        "Output the list of potential issues and a quick explanation of what could be the issue for the specific test",
        "",
        "",
        ""
      ],
      [
        "18/04/2021 23:58:13",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Often",
        "7",
        "1. Rule out any environment misconfiguration 2. Evaluate if the use of a non-determisitic test is correct/necessary 3. Rewrite the test such that it passes on both machines",
        "Often",
        "Often",
        "Rarely",
        "- CI - Deterministic thinking",
        "Monitoring them actively",
        "Dynamic tests",
        "No, just manual code review",
        "No",
        "Encourage the use of deterministic tests wherever possible (provide guidance on how to achieve this), bring attention to unintentionally non-deterministic tests",
        "Best of luck with your research!",
        "",
        ""
      ],
      [
        "19/04/2021 00:57:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Ottawa, Canada",
        "Master's degree in progress",
        "CTO",
        "Rarely",
        "10",
        "NDTs are useless.  They have to be solved rapidly before they ruin the whole test suite.",
        "Rarely",
        "Always",
        "Always",
        "Writing specs that respect LoD go a long way.  Isolation is important.  Fixture resets to prevent setup pollution.  After this, you're just eliminating randomness to remove NDT deps.",
        "This question doesn't make sense.",
        "No -- but funny.  At work, we call them GTs.  Garbage tests.  NDTs have no place in a proper test suite.",
        "We use Bamboo CI",
        "You can apply Mutators to test your test suite itself.",
        "I don't really need tools here.  Bamboo CI logs history, we parse for tests that lack rigor, and slate them for repair or replacement.  Tests span from phpunit, to phpspec, to Behat tests (the tests that most often cause these problems, are Behat tests)",
        "Honest feedback, it read as though you were crafting a commercial offering under the guise of an academic survey.",
        "",
        ""
      ],
      [
        "19/04/2021 03:37:01",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Ottawa, Ontario, Canada",
        "Graduation completed",
        "Web developer",
        "Never",
        "10",
        "There could be many external factors effecting the test of such nature. However I use containerized development environment such as Docker, which can element many external factors that can cause different outcome for same code. ",
        "Rarely",
        "Rarely",
        "Often",
        "Making sure the platform stays the same across all the environment and for all developers, Docker helps to implement it.",
        "There can't be silver bullet for all types of non-deterministic test issue. What I would like to see if the test depends on external factors such as host OS settings, hardware requirements or third party API, test result mention that specific dependent issue in fail message. ",
        "Not aware of that ",
        "Not that I know of",
        "Not that I know of",
        "Flags a warning message about external dependency ",
        "",
        "Dushyant Patel",
        "msg2dushyant@gmail.com"
      ],
      [
        "19/04/2021 06:44:05",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Regina, SK, Canada",
        "No secondary education",
        "Software developer",
        "Rarely",
        "8",
        "diagnose environmental differences",
        "Rarely",
        "Rarely",
        "Rarely",
        "none specifically, just internalized knowledge that explicitly non-deterministic test cases (like connecting to an API) are moreso testing the API connection than the validity of your code.",
        "no",
        "no",
        "no",
        "no",
        "dunno",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 07:37:32",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Mississauga, Ontario, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "1 - Check to see if they have all of the changes 2 - Investigate the output and determine the root cause 3 - Fix the root cause of the discrepancy",
        "Rarely",
        "Sometimes",
        "Always",
        "I push the api calls as far from my main code as possible, and then use mocks to avoid it in the non-specific tests.",
        "No",
        "no",
        "no",
        "no",
        "The ability to break dependencies/point them out.",
        "",
        "Andrew",
        "awjudd@gmail.com"
      ],
      [
        "19/04/2021 08:22:04",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Toronto/Canada",
        "Graduation completed",
        "Software Architect",
        "Sometimes",
        "10",
        "Collect the logs, and analyze the failing code visually to identify system/state dependent variance.",
        "Rarely",
        "Sometimes",
        "Often",
        "Granular isolation",
        "We tend to avoid non-deterministic test cases, but mocking the variable components. However, when not possible, we carefully generate the software state to make the outcomes predictable.",
        "state-volatile tests",
        "No",
        "No",
        "Detect system/state specific dependencies.",
        "Intriguing study. Why did you focus on PHP?",
        "Seva",
        "Seva.lapsha@gmail.com"
      ],
      [
        "19/04/2021 09:33:41",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Montreal, Canada",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Usually attach a debugger to see if I can find the point where it diverges, or add logging if it’s a race condition ",
        "Rarely",
        "Always",
        "Always",
        "Reproducible test fixtures and environments, special care around tests related to time",
        "I don’t understand the question",
        "Flaky tests",
        "No",
        "No",
        "Run multiple tests multiple times to detect non deterministic tests. Maybe linting or static analysis to detect common scenarios that can create this situation",
        "",
        "Samuel Schmidt",
        "samuel@dersam.net"
      ],
      [
        "19/04/2021 10:26:27",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Chicago, IL",
        "HS",
        "Software developer",
        "Sometimes",
        "10",
        "Examine possible causes like fixture data being manipulated in other tests & creating implicit dependencies between test cases",
        "Rarely",
        "Never",
        "Often",
        "best practices guide for devs",
        "No",
        "cursed tests",
        "No",
        "No",
        "A warning that highlights the problematic test(s) & states why they're non-deterministic would be great!",
        "",
        "Nick Evans",
        "nick.evans@northwestern.edu"
      ],
      [
        "19/04/2021 11:43:09",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Lancaster, OH, USA",
        "No higher education",
        "DevOps",
        "Rarely",
        "10",
        "attempting to reproduce the problem in my environment; then ask the other user for the output to determine what might be wrong; i can usually determine the problem that way",
        "Rarely",
        "Never",
        "Never",
        "none",
        "no",
        "\"tests with external uncontrolled dependencies\" would be a subset",
        "no",
        "no",
        "no idea",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 13:57:26",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Resistencia/Argentina",
        "",
        "Software developer",
        "Never",
        "1",
        "1. Check if the other part have replicate the enviroment. 2. Check the imputs. 3. Replicate the other part actions.",
        "Never",
        "Never",
        "Never",
        "I Do create atomic tests for my code. Really small tests. ",
        "No",
        "No",
        "No",
        "No",
        "Don't know",
        "https://martinfowler.com/articles/nonDeterminism.html",
        "Ariel",
        "arieltoledo@gmail.com"
      ],
      [
        "19/04/2021 14:09:06",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "10",
        "I ask for more details, like the other person's enviroment.",
        "Rarely",
        "Rarely",
        "Always",
        "I set a seed for random outputs.",
        "Not besides setting a seed for random functions.",
        "No",
        "NO",
        "No",
        "No",
        "Wish you best of luck!",
        "Patricio Tarantino",
        "patriciotarantino@gmail.com"
      ],
      [
        "19/04/2021 15:23:29",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "7",
        "check infrastructure dependencies and debug the test in the failed environment",
        "Sometimes",
        "Often",
        "Often",
        "trying to mock most of infra dependencies",
        "No",
        "No",
        "No",
        "No",
        "detect posible non-deterministic tests",
        "",
        "Piero Recchia",
        "piero.recchia@gmail.com"
      ],
      [
        "19/04/2021 15:26:28",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "San Francisco, Córdoba, Argentina",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "2",
        "I would consider environment differences and try to reproduce the error using the same dataset, or catching the non-deterministic factor by doing an static code review over that test method.",
        "Sometimes",
        "Often",
        "Always",
        "1. Deactivate curl primitives in order to prevent unintentional connections to third party systems. 2. Wrap undeterministic factors generally expressed as PHP primitives like rand() calls, new DateTime('now'), etc. Wrapping those behaviours into mockable dependencies.",
        "No, I don't use any automatic routine.",
        "xUnit Patterns define this anti-pattern as \"Erratic tests\"",
        "No",
        "No",
        "Detection and prevention I think",
        "",
        "Carlos Frutos",
        "carlos@rooftop.dev"
      ],
      [
        "19/04/2021 17:51:23",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Ciudad Autónoma  de Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "5",
        "Trying to reproduce the same steps on my computer to generate the error.",
        "Sometimes",
        "Often",
        "Sometimes",
        "I try to generate a file with different options. For example, if I have to communicate to an API, what I am trying to generate is possibly a JSON with which the application should return.",
        "-",
        "-",
        "-",
        "-",
        "Trying to find as many errors as possible, although if it is not mastered perfectly, it could become a big problem",
        "",
        "Martín",
        "Dell'Oro"
      ],
      [
        "19/04/2021 18:10:26",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "rio cuarto",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "check the code with partner",
        "Sometimes",
        "Never",
        "Never",
        "mock apis",
        "no",
        "no",
        "no",
        "no",
        "detection",
        "",
        "cristian",
        "cristianaalvarez@gmail.com"
      ],
      [
        "19/04/2021 18:11:54",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Argentina - Buenos Aires",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "Maybe different OS, or different version of php, maybe a failure of resources of the OS",
        "Rarely",
        "Rarely",
        "Rarely",
        "IDK",
        "No",
        "No",
        "No",
        "No",
        "IDK",
        "I tried to help, but i'm not very familiar with tests, sorry ! i try to do all my best.",
        "Sandro",
        "sdezerio@gmail.com"
      ],
      [
        "19/04/2021 20:26:58",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Los Angeles, USA",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "try to reproduce the issue locally",
        "Sometimes",
        "Rarely",
        "Rarely",
        "Mocking response, Double objects, avoid calling externals APIs except when there's no options",
        "No",
        "No, is the first time I saw they have a name",
        "No.",
        "No.",
        "Detect them before they run, more accurate message on detection (specially within CI tools)",
        "It sounds interesting",
        "",
        ""
      ],
      [
        "19/04/2021 22:50:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buckley, WA, United States",
        "Undergraduate",
        "Software developer",
        "Never",
        "10",
        "Make certain that the machine environments are as similar as possible, run tests in CI, and check the test itself for logic flaws",
        "Never",
        "Never",
        "Always",
        "I write extremely granular tests, often including a test intended to falsify the previous test if possible",
        "No",
        "Broken",
        "Writing tests which run through multiple possibilities",
        "Writing tests granularly, writing palindromic tests",
        "Start up a vm, run tests, export results, and repeat for many variant setups.",
        "I don’t really have much to say",
        "Casey Parker",
        "parker.casey@pm.me"
      ],
      [
        "20/04/2021 11:08:34",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "5",
        "Check dependencies, libraries and programming language versions between both machines.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Try to evaluate as much as try/catch scenarios I can.",
        "Try to evaluate as much as try/catch scenarios I can.",
        "No.",
        "No.",
        "No.",
        "Detecting non-deterministc scenarios on developed software.",
        "This is a very interesting study that made me to research on computing theory I have studied some years ago to have a deeper understanding for this survey.",
        "Guillermo Ramiro Maquieira",
        "guimaq@gmail.com"
      ],
      [
        "20/04/2021 12:21:32",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Argentina",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "6",
        "I double-check:  - If deployment or installation of the project was done properly in the other machine.  - If the codebase is correct (for example, make sure the git branch is the correct one and no other code changes were made that could affect the results).  - If the configuration of the project is correct (for example, environment variables that could alter the application behavior).  - If external required resources are available in the same way on the second machine (APIs, databases, any connectivity needed, permissions required, IPs allow-listed, etc).  - If the test could be affected for having different hardware resources (for example, requiring more time to not timeout in a slower machine, requiring more available RAM, etc).  - The versions of the running environment to see if that could affect the compatibility (PHP version running, OS type and version, dependencies versions).   Finally I would check the steps of the failing test and probably comment/remove temporarily some of them to find out what's exactly the problem.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "I use equivalent but \"mocked-up\" interfaces to replace the resources that could not be available.  For example, I create classes/code with the same interface that the code used to manage real APIs or databases. The use that in the tests to make them independent from the connectivity or other resources required.  In other cases where that's not possible, I run some code as a part of the test battery that checks for the availability of those resources that could not be available. Then, the test itself could be classified as \"skipped\", instead of mark it as failed.  And some other times (usually when there's no enough time for a better solution) I simply try to make sure the requirements and external conditions of the environment where the tests are ran will be the best. For example having a stable environment for this purpose.",
        "I don't.",
        "Actually no, but I know that frequently the \"integration tests\" are a sub-set of the non-deterministic ones.",
        "I don't.",
        "I don't.",
        "From the top of my ming, for detection and prevention I can think in these ideas:  List the points (test steps, code lines, etc) that could potentially have different results with the same entries and code. Similar to what code linter tools do. For example show recommendations or warnings when the tests use: - Random generated information that could make the test behave differently. - Date-time based tests that could fail depending on when are they ran. - Access to external resources such as the network (using an API for example). etc.  For prevention I'd also think in a library with some util methods to verify the availability of external required resources. For example, a library with methods like \"checkInternetConnectivity\", \"checkAvailableRAM\", etc. So the test developer can use them easily and the tool can suggest to use them when needed.  I also think in having a tool where resources could be registered (for example, an API or database) in a global part of the testing code, and the on each testing scenario the developer could declare with annotations or however those resources that the scenario requires.  For correction:  Provide an OOTB mocked-up for those interfaces that are usually used to access the network. For example a replacement for the class SoapClient used to request SOAP services. Then encourage the developer to implement those methods/requests done in the tests, but with mocked data.  I'd also expect the tool/s to have the possibility to run these verifications without running the tests.  ",
        "Even when I'm not specialized in testing at all, this study resulted very interesting to me because I have seen scenarios with the non-deterministic problem, and also why not to tell, because I'm generally interested in the topics related to software engineering.  I also think that this study could be extended to be more general and not specific for the PHP language, except of course for the existing tools questions.  I hope my answers help, and even when I'm not developing in PHP for the time being, I'd also like to hear about the results.",
        "Daniel Duarte",
        "danieldd.ar@gmail.com"
      ],
      [
        "20/04/2021 16:25:06",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Richmond, Canada",
        "High school student",
        "Student",
        "Never",
        "5",
        "I check for differences in environments. It would depend on the error thrown. ",
        "Sometimes",
        "Rarely",
        "Rarely",
        "None",
        "I use CI/CD such as Travis for testing Python. ",
        "No",
        "CI/CD tools such as Travis perform tests on multiple environments. ",
        "Linters often detect errors ahead of time. ",
        "Detection, prevention and correction",
        "I'm not too familiar with what a non deterministic test is so I Googled it. ",
        "Kevin",
        "Kevinlu1248@gmail.com "
      ],
      [
        "20/04/2021 19:01:02",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Portland, OR USA",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "2",
        "Check the environment and the build to see what is different.",
        "Rarely",
        "Rarely",
        "Often",
        "Mock external dependencies. Segregate tests with external dependencies.",
        "Check that dependency is available, then only run tests if dependency is available.",
        "Integration tests.",
        "no",
        "no",
        "Configure with a list of dependencies, check dependencies and flags tests if dependencies are unavailable.",
        "In general non-deterministic tests are to be avoided.",
        "Dan Revel",
        "dan@nopolabs.com"
      ],
      [
        "21/04/2021 02:29:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Montreal, Canada",
        "Undergraduate",
        "Software engineer",
        "Rarely",
        "10",
        "Try to see if there was a difference in our local environments, easy fix is usually docker",
        "Rarely",
        "Rarely",
        "Rarely",
        "I don’t come across them often and so i don’t take many precautions against them",
        "None",
        "None",
        "None",
        "None",
        "N/A",
        "",
        "",
        ""
      ],
      [
        "21/04/2021 07:37:14",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "ShengZheng/China",
        "Master's degree completed",
        "Software developer",
        "Sometimes",
        "2",
        "Check whether there are differences in the environment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Keep the environment unified",
        "no",
        "no",
        "no",
        "no",
        "no",
        "no",
        "YeZi",
        "875307054@qq.com"
      ],
      [
        "21/04/2021 11:26:15",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Buenos Aires / Argentina",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "Asking under what conditions de test was run",
        "Rarely",
        "Often",
        "Often",
        "always test with and without conection to apis and internet",
        "No",
        "No",
        "No",
        "No",
        "Tips for scenarios that the developer does not always consider",
        "",
        "Junior Ayala",
        "elessar303@gmail.com"
      ],
      [
        "21/04/2021 13:06:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Toronto/Canada",
        "Graduation completed",
        "Team Lead",
        "Sometimes",
        "8",
        "Check the machine's code version,  then the development setup,  the required external services, including VPN",
        "Sometimes",
        "Never",
        "Rarely",
        "Document the exceptions in KBs",
        "No",
        "No",
        "No",
        "No",
        "Standardized virtual dev environment, system check before starting the testing batch",
        "Congratulations for your initiative. ",
        "Humberto Ribeiro de Souza",
        "humbertosouza@outlook.com"
      ],
      [
        "23/04/2021 20:35:59",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Squamish, BC Canada",
        "Master's degree completed",
        "Secondary Teacher and k-12 sector technologist",
        "Never",
        "7",
        "I do not do this.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Good logic? Screening inputs for possibility",
        "nope",
        "nope",
        "no",
        "no",
        "Second order tests that asses output based on known-result input.",
        "",
        "Evan Sharp",
        "ego@evansharp.ca"
      ],
      [
        "24/04/2021 10:51:31",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Montreal/Canada",
        "Master's degree completed",
        "architect",
        "Always",
        "8",
        "isolate the test to determine what makes is a potentially weak test",
        "Often",
        "Often",
        "Often",
        "better understand the dependencies and properly locate the tests that have external dependencies. When possible use contract-based testing and leave those integration tests to a very minimum",
        "nothing other than the one reported above",
        "fragile tests",
        "pact.io",
        "no",
        "help me reduce the dependency on such tests or at least better identify those",
        "can you share the results of the survey?",
        "Mario Bittencourt",
        "mbneto@gmail.com"
      ],
      [
        "25/04/2021 05:34:54",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "China",
        "PhD completed",
        "Software developer",
        "Often",
        "8",
        "I ensure the environment is exactly the same as the one in my machine. Create the same environment, the same condition and run the test again. This include making sure that network connection is activated. When the environments match, and the tests still failed. I looked at external dependencies in the test code.",
        "Often",
        "Sometimes",
        "Always",
        "Avoid any non-deterministic call in the test code. That is, we must avoid calls to some function (such as network) or randomess in the test code. Except if random is part of the code being tested.",
        "I don't have any sequence of steps to execute",
        "No aware",
        "Non",
        "Non",
        "N/A",
        "One can override native PHP function that create randomness and avoid non-deterministic test",
        "",
        ""
      ],
      [
        "25/04/2021 12:25:29",
        "I agree",
        "7 - 10 years",
        "Up to 1 year",
        "Santa Fe, Santa Fe, Argentina",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "7",
        "I'll do docker container to have the same test environment and try not to rely on external sources",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock external services if I cannot reach them",
        "Api services calls, such as maps, firebase or database related",
        "I don't think so",
        "Not yet",
        "Waiting to fail xD",
        "Harcoded links specially",
        "I'm really looking forward to know about the results of this research! :)",
        "David Maximiliano Sosa",
        "maxi3390@gmail.com"
      ],
      [
        "25/04/2021 13:33:10",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Virginia Beach, USA",
        "High School",
        "Software engineer",
        "Rarely",
        "3",
        "debug with error logging",
        "Rarely",
        "Never",
        "Rarely",
        "extra logging for possible failures",
        "no",
        "no",
        "no",
        "no",
        "identify methods that could have non deterministic results ",
        "",
        "Zak Rabe",
        "zakrabe@gmail.com"
      ],
      [
        "25/04/2021 14:18:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Matawan, New Jersey, United States",
        "Undergraduate",
        "Platform Engineer",
        "Sometimes",
        "8",
        "Find out what conditions were different on the other machine. Whether it was a configuration issue, or an environment issue, or an overall logic issue.",
        "Rarely",
        "Rarely",
        "Rarely",
        "When writing the tests I make sure if I change something in the particular bit of code it tests. The test will completely fail. I do this by actually changing the code to make the test fail.",
        "Do not have one, at this point in time",
        "I am not",
        "We do not use any tool that tests for these things. A code review should catch these.",
        "We do not use any tool that prevents these things. Aside from code reviews.",
        "When the tests are written they should have a through code review.",
        "Seemed like there were a lot of the same questions. Aside from that seemed good.",
        "Vinnie Marone",
        "vinnie.marone35@gmail.com"
      ],
      [
        "25/04/2021 15:55:58",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Salt Lake City UT USA",
        "Master's degree completed",
        "Software engineer",
        "Never",
        "10",
        "Inquire about difference in environment",
        "Sometimes",
        "Never",
        "Never",
        "Run in a controlled environment",
        "No",
        "No",
        "No",
        "Not explicitly, just control the test environment",
        "Sufficient specification of test environment",
        "Non-determinism is usually a function of the environment not the software",
        "",
        ""
      ],
      [
        "25/04/2021 16:15:04",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Memphis, Tennessee, US",
        "PhD completed",
        "Software Consultant",
        "Sometimes",
        "5",
        "Check for differences in machine configuration",
        "Often",
        "Often",
        "Often",
        "Full preparation of host machine to specification",
        "Varies",
        "system configuration errors",
        "all by hand",
        "all by hand",
        "You need to be alert",
        "",
        "Greg Blumenthal",
        "greg@gmbs-consulting.com"
      ],
      [
        "26/04/2021 06:24:34",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Finland & France",
        "Graduation completed",
        "Designer Developer",
        "Never",
        "5",
        "Start digging apache/php settings",
        "Never",
        "Rarely",
        "Rarely",
        "None",
        "None",
        "None",
        "None",
        "None",
        "Good question! Usually people want code to be fixed automatically.",
        "This was easy! Probably knew a little too little of the subject.",
        "Jonatan Eriksson",
        "jonatan@tsto.org"
      ],
      [
        "26/04/2021 06:39:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Guangdong China",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "3",
        "check out if there is any evironment difference between two machine",
        "Sometimes",
        "Often",
        "Rarely",
        "it is time-comsuming",
        "environment differ",
        "no",
        "no",
        "no",
        "run fast and easy to use",
        "this study make me notice the non-deterministic test area",
        "Gary",
        "nutto.pan@gmail.com"
      ],
      [
        "26/04/2021 13:07:21",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Pittsfield MA",
        "Master's degree completed",
        "Software developer",
        "Never",
        "5",
        "Give up and test the component manually. (I'm being honest. This is not ideal, but due to limited budgets on our client projects, this is usually what happens)",
        "Rarely",
        "Never",
        "Never",
        "n/a",
        "no",
        "no",
        "no",
        "no",
        "n/a",
        "not really applicable to our normal workflow... sorry ",
        "Peter Wise",
        "peter@squarecandy.net"
      ],
      [
        "27/04/2021 04:21:13",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Mainz/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "5",
        "Verify the test environment. We use docker to have a very similar environment in a team. Also the configuration is managed.",
        "Sometimes",
        "Rarely",
        "Never",
        "We try to mocks for external interfaces. The used test framework provides functions to do that.",
        "It depends about we are talking here. If it's a unit test, we try to prevent that behavior. For functional tests it's ok to call a real interface (with all the down sites).",
        "Functional testing. Maybe acceptance testing (depending on the definition).",
        "no",
        "no",
        "At least a static code check to find calls to external resources. Maybe a plugin for PhpStorm.",
        "Interesting. Never thought so much about non-deterministic tests.",
        "Christian Münch",
        "christian@muench-worms.de"
      ],
      [
        "27/04/2021 04:54:33",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Duesseldorf/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "Compare machines and execution environment (php version, extensions, etc), code state (modifications, revision). If that does not solve it, run a step-debugger or do poor-mans-debugging with var_dump.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Run tests in isolated environments, like docker, with restrictions on resources like network or disk.",
        "No.",
        "No.",
        "Generally not, but linters can be used to detect the usage of ext/curl and other subjects.",
        "PECL/runkit to mock php internals.",
        "* Detect: output a machine readable format for CI integration * Prevent: If configured, let tests fail for having non-deterministic side-effects * Correction: No tool should correct this on its own. It may suggest alternatives, though",
        "All the best and good luck!",
        "",
        ""
      ],
      [
        "27/04/2021 04:57:11",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Berlin",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "5",
        "Debug on that other machine. Reproduce. Fix.",
        "Never",
        "Never",
        "Never",
        "None, I hardly have that case.",
        "No.",
        "No.",
        "No.",
        "No.",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:29:10",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Lübeck/Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "9",
        "Check the versions of anything involved. Check again locally. Check for any changes not (correctly) committed to the code. Debug the failing test.",
        "Rarely",
        "Sometimes",
        "Often",
        "Most of the time I just make sure the test is not relying on external factors (time passing, network being available, randomness involved, …)",
        "No…",
        "🤷‍♂️",
        "No",
        "No",
        "🤷‍♂️",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:58:44",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Münster/Germany",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "8",
        "Checking the dependencies (e.g. installed libraries, composer packages, software versions).",
        "Rarely",
        "Never",
        "Never",
        "Common error handling (e.g. try-catch around the external request).",
        "/",
        "/",
        "/",
        "/",
        "/",
        "",
        "Kai Neuwerth",
        "kai@neuwerth.me"
      ],
      [
        "27/04/2021 07:51:01",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Often",
        "9",
        "Find the difference between his and mine setup, if there is none, check the test validity.",
        "Rarely",
        "Never",
        "Rarely",
        "Good Test Design and good Environment Preparements",
        "See https://ruby.sadi.st/Heckle.html and https://infection.github.io/guide/ (Mutation Testing)",
        "No",
        "https://infection.github.io/guide/",
        "No",
        "https://infection.github.io/guide/",
        "",
        "Herbert Maschke",
        "thyseus@gmail.com"
      ],
      [
        "27/04/2021 08:17:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Würzburg / Germany",
        "Undergraduate",
        "Software developer",
        "Never",
        "5",
        "Check the test and / or the code",
        "Never",
        "Never",
        "Never",
        "None :-)",
        "no",
        "no",
        "no",
        "no",
        "dont know?",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 08:43:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Dresden, Germany",
        "Bachelor's degree completed",
        "I was a software developer, then gradually became more of an software engineer and nowadays am a consultant and manager for software development projects.",
        "Sometimes",
        "7",
        "I'd search for differences in the runtime environments to figure out, which external factors could have influenced the test. Then I try to improve the test in order to check those dependencies as well.",
        "Sometimes",
        "Rarely",
        "Often",
        "For each test I try to figure out if there are any dependencies from external factors. If there are, I write additional tests explicitly checking for those factors.",
        "If the non-determistic behaviour is intrinsic, I would not write a test expecting a deterministic result, but just perform a plausability test instead.",
        "No.",
        "No.",
        "No.",
        "That's hard to say. I'd expect the tool to at least recognize external dependencies, but that would be really hard to do, I guess.",
        "Very interesting topic! Good luck with your degree!",
        "Sebastian Meyer",
        "https://github.com/sebastian-meyer"
      ],
      [
        "27/04/2021 08:52:26",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "self-educated",
        "Software Quality Consultant",
        "Never",
        "10",
        "That only happens, if I rely on a dependency that is not explicitely stated in composer.json but installed locally. In that case, I fix composer.json to also reflect that dependency.",
        "Never",
        "Never",
        "Always",
        "Mocking external dependencies. External services can always be mocked using Docker containers.",
        "I completely avoid non-deterministic tests, so there's never a need to execute them.",
        "Those tests are simply broken.",
        "No",
        "No, just code review.",
        " I personally don't need such a tool, it is superseeded by my awareness. Nevertheless, I know people who should use it ;)  Since mock genereation is not the easiest task, a mock generator could be useful, i.e., create a Docker container with senseful data that mimics the original service just as much as needed by the tests. The mock is generated once, when the connection is available, but is then independent from any outbound connection.",
        "I'm interested in the results of the survey. Please send it to nbraczek@bsds.de, if possible.",
        "Niels Braczek",
        "nbraczek@bsds.de"
      ],
      [
        "27/04/2021 09:20:13",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Duisburg/Germany",
        "Fachabitur, lower as university + trained as IT specialist in application development",
        "Software developer",
        "Rarely",
        "8",
        "Telling him \"it works on my machine\". Joke aside, inspectiong the code and triying to find the differences of his and my machine and envioment which could affect the test code.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "Use a general \"enviroment\" or general test before testing the code and/or write detailed error messages/logs why the test failed.",
        "phpunittests? Not sure what is meant, so \"no\".",
        "No",
        "No",
        "No",
        "Checking the enviroment (like my general test)",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 10:06:57",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin/Germany ",
        "Undergraduate",
        "Engineering Lead ",
        "Sometimes",
        "10",
        "I would typicslly step through the test case with a debugger. I'll be likely looking for branching (if, switch, etc) logic based on random, time or other  external resources. (In other languages data races are just as common)",
        "Rarely",
        "Rarely",
        "Often",
        "Helper classes which use external sources by default but let tests override it",
        "No",
        "No",
        "Not in PHP.",
        "No.",
        "I'd expect them to listen potential issues. I'd probably run them locally on commit.",
        "",
        "Peter Aba",
        "peter@peteraba.com "
      ],
      [
        "27/04/2021 10:31:42",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Berlin/Germany",
        "Graduation completed",
        "Engineering Manager",
        "Often",
        "6",
        "I compare our environment details (configurations, environment variables) and connectivity with external services involved.  I always advise my teams to use a common environment by making use of Docker/docker-compose or Virtual Machines.",
        "Rarely",
        "Rarely",
        "Often",
        "I encourage TDD practices (which builds majority of tests) using Unit tests only. Unit tests by convention must contain no I/O and rely on mocks where necessary.  Date/Time units that need to be tested should use \"relative time\" as much as possible in order to avoid time bombs such as new years eve build breaks.",
        "I usually understand non-deterministic tests as tests that connect components from outside the software's boundaries (reading from a disk, network..). So normalising the environment using VMs and common shared configurations is already a good start.  Sharing databases and services is also ideal and, when not possible, make use o migrations and conventions that make sure such tests will only use data provided by such migrations.  Another option that I use take is to spin up fake services that will return the expected response (force a response HTTP 2xx, 4xx, timeout exceptions...)",
        "No",
        "No",
        "No. As I mentioned before, I often use a mix of conventions and shared environments in order to reduce the amount of non-deterministic tests.",
        "Thinking of I/O as the source of all evil, I can envision a tool that monitors, takes snapshots and replays or mock network transactions for specific tests.  This way a test framework (such as phpunit or pest) may have different test profiles for each test in a test case. Potentially using a common \"given\" method (thinking of \"given/when/then\" testing approach) or annotations.",
        "Questions are very interesting and I'd be keen to read the output of your research. I must say that the video showing an example of non-deterministic tests created a huge bias on my responses, because I mostly think of your network exception example. I hope that's intentional.  I believe not differentiating test types can mislead people (unit/integration/e2e tests to name a few) and I hope the lack of guidance there is intentional.",
        "Níckolas Da Silva",
        "nawarian@gmail.com"
      ],
      [
        "27/04/2021 10:36:44",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Berlin, Germany",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "4",
        "For unit testing: - Check if such a test relies on external dependencies - Replace these hard dependencies (if any) with interfaces - Mock or stub these interfaces  For integration tests: - Add all stateful dependencies to docker containers - Make sure to rely on anything else but containers ",
        "Rarely",
        "Never",
        "Sometimes",
        "For Unit tests: never rely on stateful dependencies For Integration tests: Docker/containers for stateful dependencies",
        "-",
        "-",
        "-",
        "Docker",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 12:59:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Stuttgart Stralsund ",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "9",
        "Debug it! ",
        "Rarely",
        "Rarely",
        "Often",
        "Make e.g. sure external deps are mocked ",
        "...",
        "No",
        "No",
        "No",
        "No",
        "",
        "Phil ",
        "Phiamo@gmail.com "
      ],
      [
        "27/04/2021 20:25:09",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Germany",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "3",
        "Inspect the environment and examine the logs. ",
        "Often",
        "Never",
        "Never",
        "Depending on what type of tests I’m writing. Unittests have no external dependencies and work within a clearly defined scope. Functional tests or integration tests are by nature often non deterministic. ",
        "Don’t get this question. ",
        "Infected tests ",
        "No",
        "No",
        "/",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 01:16:37",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Düsseldorf/Gernany",
        "Undergraduate",
        "CEO (I used to be a developer, though)",
        "Rarely",
        "7",
        "Find the error in the tests",
        "Rarely",
        "Always",
        "Always",
        "Code-Reviews are done before code gets merged",
        "phpunit executes the tests, but I think I don‘t understand the question.",
        "Testing external dependencies should be done in integration tests. The integration tests may fail due to missing conbectivity and are re-run multiple times to verify the integration works",
        "no",
        "no",
        "detection, I guess?",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:50:25",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Pasig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "I evaluate the environment the test was performed on, specifically if there are huge differences in its core stack (was the test ran on a Linux environment or a Windows one?) I also extract the exact error to determine the next course of action.",
        "Always",
        "Always",
        "Often",
        "We usually assume through policy that a test environment MUST meet the expectations in the specification documents of the project. It is well-clarified throughout the team that such differences in expected environments will require a deeper analysis of the encountered errors and will be a significant cause of delay.",
        "None",
        "None",
        "None",
        "None",
        "Well-written test cases to clearly report back what caused the non-deterministic test to fail.",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:58:48",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Makati, Philippines",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Investigate",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mock the dependencies and use test or sample data",
        "PHPUnit",
        "Not aware",
        "Not aware of any tools on this",
        "Not aware of any tools on this",
        "Not sure",
        "",
        "Alexander Torrijos",
        "artorrijos@gmail.com"
      ],
      [
        "28/04/2021 03:24:15",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "1. rerun the test. 2. check versioning /device differences 3. debug the test",
        "Rarely",
        "Rarely",
        "Never",
        "None.",
        "I sometimes have to make async, external api calls and then just wait for a timeout. ",
        "no",
        "maybe SonarQube?",
        "maybe SonarQube?",
        "usual CI, with build features, code analysis, and adaptable to many platforms",
        "Tho I know what SW-Testing (and TTD) is, I rarely use it in personal projects (when I'm the only contributor anyway) which is quite often. Also, I know and worked with PHP for some time, but for sure wouldn't call me a PHP-expert and I never even wrote a single test in PHP.",
        "Henrik Storch",
        "thisisthefoxe.dhbw@gmail.com"
      ],
      [
        "28/04/2021 03:43:23",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Stuttgart, Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "8",
        "Investigate the error on the other machine. Try to reproduce the issue locally. Ensure that the underlying problem is understood. Try to make the test deterministic or if impossible try to determine the factors involved and skip the test if problematic condition is detected.",
        "Rarely",
        "Sometimes",
        "Often",
        "Reduce external dependencies, esp. operating system, filesystem, etc.",
        "Not sure what's meant with this question",
        "randomly failing tests",
        "No.",
        "No.",
        "Detect problematic use of functions that may cause non-deterministic behaviour. ",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 04:14:44",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Barcelona/spain",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "5",
        "I would adk him to show me the code",
        "Rarely",
        "Rarely",
        "Rarely",
        "External dependencies are wrapped in a new class or i add general exception catching for the call",
        "No",
        "No",
        "No",
        "No",
        "No idea",
        "Interesting topic",
        "",
        ""
      ],
      [
        "28/04/2021 04:37:42",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Olongapo",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "1",
        "use docker, and mock api test",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Just use Docker, and Mock the Api",
        "None , I just use my own method of test driven development , And i Do  run my code in 3 platform mac, windows and linux.",
        "none",
        "github workflow now can run test on all platform making sure your test pass in all platform",
        "NOne",
        "None",
        "",
        "Uriah",
        "codeitlikemiley@gmail.com"
      ],
      [
        "28/04/2021 05:01:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Bonn Germany ",
        "Master's degree completed",
        "Software engineer",
        "Always",
        "7",
        "Find out why this happens. Than the code to make the test deterministic. If that is not possible, for example like in your video, create a second test, that tests against a mock or a stub, so that one is deterministic. Then use the other test in a different testset, that runs against the third party application, to check, where the api still works. Usually these tests have a rerun possibility. The deterministic test set should never fail, the other one could. ",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mocking and stubbing, predetermined test data, e.g.",
        "E sometimes use retry mechanisms, and in your video example those tests would test the Internet connection before running the test, so that we know, that was the cause for the failure. ",
        "Flaky tests",
        "No. ",
        "Not automatically. Some people have rerun mechanisms for their tests, but I do not like those automated Nachsaisons, because it makes you not taking care. ",
        "Showing known causes",
        "I would like to see your resulting paper please, falk@kuehnel.du",
        "Falk Kühnel",
        "falk@kuehnel.eu"
      ],
      [
        "28/04/2021 05:11:34",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Passau/Germany",
        "Master's degree completed",
        "Hacker / Software hacker / Hacker aka tester/debuger/developer/creator",
        "Sometimes",
        "7",
        "1st) check configs, 2nd) get screen sharing online",
        "Rarely",
        "Rarely",
        "Rarely",
        "don't do too much in one test, do many tests based on just a few.",
        "-",
        "-",
        "-",
        "-",
        "should be plugin for phpstorm and for the other idea group like webstorm",
        "-",
        "",
        ""
      ],
      [
        "28/04/2021 05:53:04",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Taguig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "6",
        "read the error message if available or check if the another machine and my machine has same version of php ",
        "Rarely",
        "Rarely",
        "Often",
        "run unit test to locate the non deterministic code and revise it",
        "no",
        "no",
        "no",
        "no",
        "cpu profiler",
        "sorry, some answers are not substantial",
        "Frex Cuadillera",
        "fcuadillera@gmail.com"
      ],
      [
        "28/04/2021 06:17:52",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "3",
        "Docker",
        "Often",
        "Rarely",
        "Rarely",
        "Include as input whatever can change in the environment that makes the test deterministic",
        "N/a",
        "None",
        "None",
        "Docker and containerization",
        "Don't know",
        "Good luck",
        "Claude",
        "claudekirke@gmail.com"
      ],
      [
        "28/04/2021 06:47:20",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Germany Rosenheim",
        "Graduation completed",
        "Senior Backend Developer, Lead Product Developer",
        "Rarely",
        "8",
        "Identify and resolve the differences between the two test environments.",
        "Rarely",
        "Rarely",
        "Often",
        "Replace external APIs with local dummy APIs to create deterministic API responses/behavior (mostly based on docker)",
        "No",
        "\"Snowflake Tests\": They will break over something rather irrelevant or sensitive external condition. These are tests that will fail often in your pipeline and they will be successful if rerun.",
        "No. Sometimes our CI/CD Pipeline will break for no reason, which is an indicator for such (bad) tests.",
        "We don't test or rely on external resources. It's good practice to Mock/Stub the parts of your code that rely on external resources. PHPUnit is used to create Mocks/Stubs.",
        "The tool should detect if any external resource is used, identify the protocol, request and response contents and format and automatically derive a stub, which can be used to replace the external call. This information must be exportable as file to be commited with the tests and used by others to use the tool and the configuration to run the tests against the mocked API of the tool, not the Live-Api. Nice to Have: An UI to modify the detected reponses",
        "Good luck",
        "",
        ""
      ],
      [
        "28/04/2021 07:39:30",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Philippines",
        "Master's degree in progress",
        "Solutions Architect",
        "Rarely",
        "3",
        "Determine the similarity and difference in test execution environment",
        "Rarely",
        "Rarely",
        "Always",
        "With defensive coding practices, have the code define and ensure satisfaction of requirements before executing their function.",
        "No, it's a bad practice",
        "No",
        "No",
        "Rather than a tool, it's basic coding practice to ensure all requirements for success of your code is in place.",
        "Detection of dependencies to functions beyond the current system's control, but paradoxically it means everything",
        "The term 'non-deterministic test' is a misnomer, there may be no changes in the code, but we have observable and remediable changes on parameters or environment variables (i.e. internet connection) beyond control of the software that the PHP code depends on. ",
        "Tito Mari Francis Escaño",
        "titomarifrancis@gmail.com"
      ],
      [
        "28/04/2021 08:56:15",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Manila/Philippines",
        "Graduation completed",
        "Development Manager",
        "Often",
        "10",
        "Usually, discuss the issue with the developer and advise for mitigation. Sometimes, we also incorporate it already during brainstorming / grooming and discuss that this should have been included already in the beginning and not on the end.",
        "Sometimes",
        "Often",
        "Often",
        "We make as much realistic scenarios as possible. Also, on the code level, we tend to increase the support of the previously encountered scenarios and have it applied on future development.",
        "One is to setup automated testing mechanism being executed on regular / daily basis. This way, we can easily catch the potential issues during the execution and compare on the last result. From there, we can investigate / dig further what may caused it and make the necessary adjustment so that it will not happen again on the next run.  In addition, regular code analysis of both test case and also the main code itself is beneficial as you may not know that somewhere before or down the line, an incorrect argument or method may have caused the non-deterministic test.  Another one is to increase the test suites. Granted that one scenario is not enough but as mentioned, once we encounter the issue somewhere, it is automatically added on the list to be tested and have it incorporated on the test case and also on the code.",
        "Usually, we do isolation as sometimes, the application on one environment only shows the issue as compare to others. Once we isolate the application in question, we perform the test, either automated or manual, so that we can have proper verification that we need. Since its already isolated, we tend to perform other change of environment (like pretending of slow connection and like) as that shows a different side of story as well.  In relation to isolation, we tend to create a different test suite so that we can make sure that during execution, it will not be that invasive unlike the usual test suite and can be executed multiple times in different scenarios.",
        "Not that I know of specifically as we tend to rely on collective usage and adapt as we go along.",
        "Probably it can be covered at some point by code analysis like SonarQube. Because with SonarQube, its not just the code is being scanned, but also the potential coverage and also some duplicates of the test cases generated.",
        "I guess would be able to cover certain scenarios that usual testing won't be able to cover. Probably intelligent enough to advise that certain issue can be achieved by this scenario and so on.",
        "Really looking forward on the result of this study because its an eye opener to developers generating those applications and solutions which may lead towards service resiliency and better security.",
        "Rellmon P. Ponce de Leon",
        "raremon@gmail.com"
      ],
      [
        "28/04/2021 10:43:10",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Davao city, Philippines",
        "Graduation completed",
        "Software developer",
        "Often",
        "7",
        "View logs",
        "Sometimes",
        "Sometimes",
        "Often",
        "Add paramaters to run the test multiple times.",
        "no",
        "nope",
        "nope",
        "nope",
        "nope",
        "Thanks and good luck",
        "Goper",
        "goper.zosa@gmail.com"
      ],
      [
        "28/04/2021 11:58:57",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "7",
        "Check for time issues (i.e. mock 'now'), reduce integration tests with unreliable services to a minimum, mark them as unstable",
        "Rarely",
        "Sometimes",
        "Often",
        "Make boundaries to external services clear, easily mockable",
        "-",
        "Unstable tests",
        "No",
        "No",
        "Detect external calls in tests or time dependent logic (suggest injecting a clock component)",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 12:13:06",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Philippines",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "check the difference between configurations, then compatibility and then difference in environment",
        "Rarely",
        "Sometimes",
        "Rarely",
        "making sure to look for boolean results",
        "havent really",
        "none",
        "none",
        "none in particular",
        "i am not really verbose in testing",
        "I am actually a frontend developer, I have worked with php for just a short period so it might be better to look for respondents who are truly backend",
        "Sanz moses",
        "web@sanzmoses.com"
      ],
      [
        "28/04/2021 13:08:01",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Bohol, Philippines",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "I usually look for relevant error messages in the console and in the logs.",
        "Sometimes",
        "Always",
        "Always",
        "I mock the causes of the non-deterministic tests. I also test the cause separately and sometimes manually.",
        "If the code requires an external service, my usual step is to mock that service when writing tests.",
        "No",
        "No",
        "No",
        "Pointing the exact cause of the non-deterministic behavior like if I cannot reach the external service required due to a severed internet connection.",
        "Good luck!",
        "",
        "ejillberth@gmail.com"
      ],
      [
        "28/04/2021 21:04:10",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Manila, Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Find the difference between my machine and the other persons machine",
        "Sometimes",
        "Always",
        "Often",
        "Have a source of truth, like CI, with the correct configuration. Use virtual machines for reproducibility. Avoid code and tests that produce non-deterministic output, like RNGs, timezone libraries, unmocked classes.",
        "no",
        "race conditions, intermittent failure, false positive",
        "no",
        "no",
        "i dont really use one, mostly its detected by the test runner itself",
        "",
        "Kelly Navarro",
        "gabrnavarro@gmail.com"
      ],
      [
        "28/04/2021 22:43:52",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "Check operating system, check network connectivity or whitelisting to external API, check environmental variable",
        "Often",
        "Often",
        "Often",
        "Separate non-deterministic test like creating a new test suite so that it can be executed separately from internal business logic test case",
        "From test creation, separate non-deterministic tests externally and group them together according to their purpose. Grouping together tests dependent on operating system, tests dependent on connectivity, or tests dependent on other microservices. If it is okay to bypass the dependency and we will only require the target data/response, it could be replaced by mock testing.",
        "Dependency testing as I could say, as it depends on multiple variables in order for it be success.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "If there's a tool, maybe it will detect first the connectivity of the non-deterministic tests and then catch its error to notify the executor of the test. Or it can save such scenario on time of creation like the response of the third party API and store it into a folder so that it can be used as referenced for future non-deterministic tests.",
        "The purpose of this study is good to the point that it can increase the developer/tester experience in tackling non-deterministic tests.",
        "Arvin Reynoso",
        "reynosoarvin@gmail.com"
      ],
      [
        "29/04/2021 02:04:20",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Bacolod City",
        "Graduation completed",
        "Software developer",
        "Always",
        "6",
        "list down your apps machine what you install and install to other machine or use docker..",
        "Sometimes",
        "Always",
        "Always",
        "set workflow of your code structure, be strict on data types and always restart or hard refresh",
        "yes because you should take down list of the error with solution",
        "yes I'm strict when it comes to variables",
        "no",
        "no",
        "none",
        "Such a nice survey.. so interesting",
        "edrian jan solatorio",
        "edrianjansolatorio@gmail.com"
      ],
      [
        "29/04/2021 04:01:19",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Frankfurt/Germany",
        "vocational technical diploma",
        "Software developer",
        "Rarely",
        "3",
        "Analyze the error message, in most cases there are differences in the conditions between developer-machine and another",
        "Rarely",
        "Rarely",
        "Rarely",
        "avoid depending on 3rd party services mostly, if not possible, catch possible issues and output accordingly",
        "no",
        "external service/data dependent",
        "no",
        "no",
        "analyze what parts of the code are refering to external services",
        "",
        "Michael",
        "d00p@froxlor.org"
      ],
      [
        "29/04/2021 07:41:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin, Germany",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "7",
        "It depends on the kind of test. Browser tests (written in PHP or any other language) for example are often non-deterministic and require timeouts to be configured for the completion of certain interactions. In such cases the test may fail because the execution time exceeds the default timeout specified for the test and needs to be increased.  In other cases the test may require the software to be configured in a way that cannot be done within the test setup. Investigating whether the test outcome is influenced e.g. by environment variables would be something that I'd check in such a scenario.",
        "Often",
        "Often",
        "Often",
        "Peer review and running tests as part of automated continuous integration tests.",
        "I don't understand the question.",
        "\"tests with non-deterministic behavior\" is the term I would use. Browser tests and edge to edge tests come to mind as classes of tests that often fall into this category.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "It should cause the affected tests to fail or trigger some sort of warning.",
        "",
        "",
        ""
      ],
      [
        "29/04/2021 21:58:21",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Remote for US, Belgium and Argentina",
        "Graduation completed",
        "Software engineer",
        "Always",
        "5",
        "I would try to reproduce it and change the test so it works aisolated to the environment",
        "Sometimes",
        "Sometimes",
        "Rarely",
        "I run them in a virtualized environment and so do the rest Of the devs ",
        "No",
        "No",
        "No",
        "No",
        "To cover every possible scenario",
        "Good luck with your study! ",
        "Vicky Jauregui ",
        "jaureguivictoria@gmail.com"
      ]
    ],
    "classifications": [
      "timestamp",
      "terms",
      "groupsInAnswer",
      "groupsInAnswer",
      "cityState",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "npsLike",
      "negativeOrList",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "feedback",
      "groupsInAnswer",
      "groupsInAnswer"
    ],
    "manualSettings": {}
  },
  "1620317504525": {
    "titles": [
      "Carimbo de data/hora",
      "Check the \"I agree\" option if you have read and agree to the consent form.",
      "How long have you been working with PHP?",
      "How long have you been working with PHP software testing?",
      "Where do you work? (City/Country)",
      "What is your academic level?",
      "Regarding your profession, what title would you give yourself?",
      "Have you ever dealt with non-deterministic software testing of any kind?",
      "On a scale of 1 to 10, how problematic do you consider the occurrence of non-deterministic tests in software projects?",
      "Let us consider the following scenario: You have developed a test code, and you were successful at running it on your machine. However, when you or someone else ran the same test on another machine, it failed. What action do you usually take when face such a scenario?",
      "How often do non-deterministic tests appear in your workflow?",
      "How often do you employ non-deterministic tests correction practices in your workflow?",
      "How often do you employ non-deterministic tests prevention practices in your workflow?",
      "What precautions do you take to prevent the tests you write from being non-deterministic?",
      "Do you use (or be aware of) any routine for the execution of non-deterministic tests? If so, could you please detail it/them?",
      "Are you aware of any other name associated with \"tests with non-deterministic behavior\"? If so, could you please detail it/them?",
      "Do you use or know any tools to detect non-deterministic tests? Please detail it/them.",
      "Do you use or know any tools to prevent non-deterministic tests? Please detail it/them.",
      "What are the expected features for a tool dealing with (detection, prevention or correction) non-deterministic tests in software projects?",
      "Give your feedback on this study, or comment freely.",
      "What is your name?",
      "What is your email?"
    ],
    "rows": [
      [
        "08/04/2021 18:53:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "France",
        "Master's degree completed",
        "Software developer",
        "Rarely",
        "5",
        "Examine test environment",
        "Rarely",
        "Never",
        "Rarely",
        "Mocking / emulating external resources",
        "No",
        "Tests with external dependencies",
        "no",
        "no",
        "Checking for external dependencies, comparing with previous test runs",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 20:04:13",
        "I don't agree",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 22:31:59",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Banjarmasin, Indonesia",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "I usually check for the other person's project setup, eg: 1. Are they follow the setup instruction correctly? 2. Are they set the correct env variable values correctly?  Related to the tests it self, sometimes I face this issue because: 1. Some random function (eg. php faker) generates an invalid value (usually status_code numbers in integer). 2. Date time value definition related to calculation of holidays (rarely).  But for me, mostly this issue occurs related to the project setup documentation.",
        "Rarely",
        "Sometimes",
        "Always",
        "1. Using mock object and response for the tests related to external API calls 2. Using carbon instance and carbon mock object for date time definition on tests 3. Prevent using random function for particular model attributes, eg: user_role_id, status_code, which I will use for data filtering or where clause on the production code. 4. Update the project documentation if the changes will impact the tests.",
        "I don't really get this question.",
        "I was using term \"intermittent test failures\" for this kind of test issue.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "I don't expect any tool to deal with it, I think I don't need one. Because this issue rarely occurs on my projects. Mostly this issue happen because of my own careless",
        "TBH, I still don't get the point of this research, why do you need these answers, and what the goal of this research.  I just get that: 1. You want to know how often developers facing non-deterministic tests 2. You want to develop some tool to detect and prevent this test issue  But, still not sure about that :D  PS: I didn't understand 1 question (see my answers). If you can elaborate more about it (via email), I'd be happy to answer it.",
        "Nafies Luthfi",
        "nafiesl@gmail.com"
      ],
      [
        "09/04/2021 08:52:22",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Tokyo/Japan ",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "9",
        "Develop and share Docker environments",
        "Rarely",
        "Sometimes",
        "Always",
        "Mocking Disk IO or API calls",
        "None",
        "tests with side effects",
        "None",
        "None",
        "?",
        "",
        "mpyw",
        "mpyw628@gmail.com"
      ],
      [
        "09/04/2021 12:12:40",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "From home in Canada",
        "Graduation completed",
        "Software Developer and Tester",
        "Sometimes",
        "10",
        "Pair with another developer to determine differences in data, language settings or even operating system to debug why the test fails in one environment but not another ",
        "Often",
        "Often",
        "Often",
        "Understand what data is required for the test to pass and determine any “side effects” that might be occurring that could make the test non-deterministic ",
        "No",
        "No",
        "No",
        "No",
        "Clear error messages and the ability to be easily run in in a continuous integration environment like GitHub Actions",
        "",
        "Chris Hartjes",
        "chartjes@littlehart.net"
      ],
      [
        "10/04/2021 11:37:15",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Grand Rapids, USA",
        "Undergraduate",
        "Software developer",
        "Often",
        "4",
        "Try to have THAT developer debug why it's not working on their machine",
        "Often",
        "Sometimes",
        "Rarely",
        "Mocking inside a unit test. However, sometimes we purposely want to to test the entire, connected system and so we do NOT want to mock external things (like databases, APIs, etc)",
        "For tests that rely on an external API call, we try to use an API service that can be used by all devs (e.g. not something that requires a production API key). But mostly... if it makes sense, we would try to mock out these external services. But when we specifically choose to NOT mock them (because the test is most valuable when using the real API), we just \"live\" with the possibility that it may fail sometimes.",
        "We call them \"phantom failure\" tests - tests that fail sometimes but not other times. These are a PAIN. They are actually most commonly associated with Selenium-style tests where, for whatever reason, the interface responds more slowly sometimes, and so our tests fail because they have not waited long enough for something to load.",
        ".",
        ".",
        ".",
        "",
        "Ryan Weaver",
        "ryan@symfonycasts.com"
      ],
      [
        "10/04/2021 11:54:33",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "China",
        "Senior high school in progress",
        "Software developer",
        "Rarely",
        "6",
        "Ask for the environmental parameters of the other party, and reproduce these problems as much as possible. And ask him/her completely delete the software and then re-install it.",
        "Rarely",
        "Rarely",
        "Rarely",
        "None",
        "idk",
        "We usually call it metaphysics",
        "I lack experience in this field",
        "I lack experience in this field",
        "I lack experience in this field",
        "",
        "MlgmXyysd",
        "mlgmxyysd@meowcat.org"
      ],
      [
        "10/04/2021 14:53:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Czech Republic",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "File an issue to fix it, to make the test deterministic",
        "Rarely",
        "Rarely",
        "Often",
        "Mocking objects and/or responses",
        "No",
        "Maybe \"tests with external dependencies\"",
        "No",
        "Mock libraries",
        "Don't know",
        "",
        "",
        ""
      ],
      [
        "10/04/2021 15:29:22",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Kolkata/India",
        "Graduation completed",
        "Software developer",
        "Never",
        "1",
        "Use docker",
        "Never",
        "Never",
        "Never",
        "Nothing",
        "No",
        "Sounds like random probability",
        "No",
        "No",
        "No",
        "Would be good to give a code example of non deterministic test",
        "Anubhav",
        "xprilion@gmail.com"
      ],
      [
        "10/04/2021 18:34:14",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "New York City/USA",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Check the testing environment",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock third-party dependencies",
        "Make sure that dependencies are injectable, then replace the dependencies with mocked objects/results",
        "Non-atomic tests, tests with external dependencies",
        "Nope",
        "Nope",
        "This tool would be able to identify dependencies that interface with third-party software, like curl, cache engines, database engines, etc...",
        "",
        "Hypolite Petovan",
        "hypolite@mrpetovan.com"
      ],
      [
        "10/04/2021 18:59:11",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Frederick, Maryland, USA",
        "Some college",
        "Software developer",
        "Always",
        "9",
        "Confirm that both systems have the same things installed and investigate further",
        "Rarely",
        "Often",
        "Sometimes",
        "Manual review of the tests",
        "Not really",
        "Heisenbugs ;-)",
        "No",
        "No",
        "I don't know",
        "",
        "",
        ""
      ],
      [
        "11/04/2021 00:13:03",
        "I agree",
        "Up to 1 year",
        "Up to 1 year",
        "China",
        "Graduation completed",
        "Software developer",
        "Never",
        "2",
        "Check their PHP version, etc",
        "Never",
        "Never",
        "Never",
        "I never write tests",
        "Nope.",
        "No",
        "No.",
        "NO",
        "I don't know",
        "",
        "Anonymous",
        ""
      ],
      [
        "11/04/2021 07:12:52",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Muncih, Germany",
        "Master's degree completed",
        "IT Consultant",
        "Sometimes",
        "2",
        "Find out why the test fails on other machine.",
        "Rarely",
        "Never",
        "Always",
        "Decouple.",
        "Replace randomness and actual time by pre-defined values that get injected; decouple tests from external resources.",
        "Flaky tests",
        "PHPUnit allows repeated test execution.",
        "For testing external APIs, I hand-code an \"is available\" check. When external resource is not available, I skip the test.",
        "Magically fix all problems? ,-)",
        "I found the term \"non-deterministic tests\" a bit misleading first, because I thought it would refer to testing code with non-deterministic behaviour. The way it was presented in the video, it \"just\" refers to external resources that are not available. Or at least, this is my assumption at this point.",
        "Stefan Priebsch",
        "stefan@priebsch.de"
      ],
      [
        "11/04/2021 09:43:45",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Berlin",
        "Graduation completed",
        "Software engineer",
        "Often",
        "7",
        "try to run all tests on CI, and consider that as main source of truth",
        "Sometimes",
        "Sometimes",
        "Often",
        "avoid network access, avoid random data, avoid waiting for stuff... whatever is not in your control should be avoided",
        "no",
        "no",
        "no",
        "no",
        "locating code that depends on possible not deterministic features (network, time, randomness...)",
        "cool",
        "Asmir",
        "goetas@gmail.com"
      ],
      [
        "12/04/2021 00:22:12",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Hong Kong",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "1",
        "Relicate failed enviroment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Enviromental tests to ensure matching enviroment before running test",
        "Library check etc.",
        "no",
        "no",
        "no",
        "n/a",
        "Probably use a text description for non-deterministic tests, rather than video.",
        "Alan Knowles",
        "alan@roojs.com"
      ],
      [
        "12/04/2021 00:25:33",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Melbourne/Australia",
        "Dropout",
        "DevOps Engineer",
        "Sometimes",
        "5",
        "Teach the other user about Docker, and implement it as a CI/CD pipeline so it always has the same outcome.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Use Docker for coding environments, and use a CI/CD pipeline from my Git repo.",
        "Nope",
        "Nope",
        "Nope, I just do it manually",
        "I use Docker",
        "NA",
        "It isn't really something I've had to worry about, or applies to any of the projects I've worked with.",
        "Dean Lofts",
        "dean@deanlofts.xyz"
      ],
      [
        "12/04/2021 17:29:12",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Columbus, OH, USA",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "Look for potential causes (environment configuration, race conditions, etc.) that may be causing the test to behave differently, then refactor the test method to compensate for or eliminate these differences.",
        "Sometimes",
        "Often",
        "Often",
        "Be explicit with the arrangement of the tests and leverage test doubles to ensure that processes outside of the System Under Test (SUT) are not polluting the test.",
        "If tests fail intermittently when run either locally or in a CI pipeline, determine what is causing the test to fail and, if it's from outside causes, use test doubles or other approaches to ensure consistent results.",
        "Nothing formal, but \"there's a race condition in this test\" gets thrown around a lot.",
        "PHPStan and Psalm can be helpful in catching logical errors, but are not specific to non-deterministic tests. I suppose mutation testing (e.g. InfectionPHP) could also be effective, but I have not explored this.",
        "PHPStan and Psalm (see previous).",
        "Warning when items outside of the scope of the SUT are being evaluated, and recommend approaches to avoid these from being a factor.",
        "",
        "Steve Grunwell",
        "steve@stevegrunwell.com"
      ],
      [
        "14/04/2021 23:15:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Nashville, TN, US",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "10",
        "I try to isolate the variable part of the code that causes the failure and use a mock to ensure that the test is deterministic. If the code should run successfully during a failure state, then I create a mock that simulates failure to ensure the failure state in a deterministic way. One of the best ways to achieve this is to use dependency injection.",
        "Rarely",
        "Always",
        "Often",
        "I make extensive use of dependency injection and use mocks to mock as much as possible, except for the lines of code I am testing.",
        "I do not make use of it currently, but if I needed to test non-deterministic code, I might use the PHP library \"Infection\" to facilitate mutation testing.",
        "Mutation testing",
        "I have used PHP-Mock, which allows you to test non-deterministic PHP functions, such as time() and random_int().",
        "I regularly use PHPStan and Psalm to statically analyze my code for type correctness. This does not fully prevent non-deterministic tests, but it can help.",
        "Analyze code and identify functions and methods that might return values that later code paths may not be able to process.",
        "",
        "Ben Ramsey",
        "ben@benramsey.com"
      ],
      [
        "18/04/2021 23:51:40",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "5",
        "Extension checks, re-check composer packages and other dependancies, validate ini's are matching and PHP versions are equal. ",
        "Rarely",
        "Sometimes",
        "Sometimes",
        "Not in tests; however in CI/CD",
        "No",
        "N/a",
        "N/a",
        "N/a",
        "N/a",
        "",
        "Rama",
        "me@rexsdev.com"
      ],
      [
        "18/04/2021 23:52:46",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Montreal/Canada",
        "Master's degree completed",
        "Backend Developer / DevOps",
        "Rarely",
        "10",
        "Try to reproduce the error on the working machine",
        "Rarely",
        "Never",
        "Never",
        "I always isolate the thing I want to try and remove any link to external services/tools",
        "no",
        "no",
        "PHPUnit infection (Mutation testing)",
        "No",
        "Output the list of potential issues and a quick explanation of what could be the issue for the specific test",
        "",
        "",
        ""
      ],
      [
        "18/04/2021 23:58:13",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Often",
        "7",
        "1. Rule out any environment misconfiguration 2. Evaluate if the use of a non-determisitic test is correct/necessary 3. Rewrite the test such that it passes on both machines",
        "Often",
        "Often",
        "Rarely",
        "- CI - Deterministic thinking",
        "Monitoring them actively",
        "Dynamic tests",
        "No, just manual code review",
        "No",
        "Encourage the use of deterministic tests wherever possible (provide guidance on how to achieve this), bring attention to unintentionally non-deterministic tests",
        "Best of luck with your research!",
        "",
        ""
      ],
      [
        "19/04/2021 00:57:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Ottawa, Canada",
        "Master's degree in progress",
        "CTO",
        "Rarely",
        "10",
        "NDTs are useless.  They have to be solved rapidly before they ruin the whole test suite.",
        "Rarely",
        "Always",
        "Always",
        "Writing specs that respect LoD go a long way.  Isolation is important.  Fixture resets to prevent setup pollution.  After this, you're just eliminating randomness to remove NDT deps.",
        "This question doesn't make sense.",
        "No -- but funny.  At work, we call them GTs.  Garbage tests.  NDTs have no place in a proper test suite.",
        "We use Bamboo CI",
        "You can apply Mutators to test your test suite itself.",
        "I don't really need tools here.  Bamboo CI logs history, we parse for tests that lack rigor, and slate them for repair or replacement.  Tests span from phpunit, to phpspec, to Behat tests (the tests that most often cause these problems, are Behat tests)",
        "Honest feedback, it read as though you were crafting a commercial offering under the guise of an academic survey.",
        "",
        ""
      ],
      [
        "19/04/2021 03:37:01",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Ottawa, Ontario, Canada",
        "Graduation completed",
        "Web developer",
        "Never",
        "10",
        "There could be many external factors effecting the test of such nature. However I use containerized development environment such as Docker, which can element many external factors that can cause different outcome for same code. ",
        "Rarely",
        "Rarely",
        "Often",
        "Making sure the platform stays the same across all the environment and for all developers, Docker helps to implement it.",
        "There can't be silver bullet for all types of non-deterministic test issue. What I would like to see if the test depends on external factors such as host OS settings, hardware requirements or third party API, test result mention that specific dependent issue in fail message. ",
        "Not aware of that ",
        "Not that I know of",
        "Not that I know of",
        "Flags a warning message about external dependency ",
        "",
        "Dushyant Patel",
        "msg2dushyant@gmail.com"
      ],
      [
        "19/04/2021 06:44:05",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Regina, SK, Canada",
        "No secondary education",
        "Software developer",
        "Rarely",
        "8",
        "diagnose environmental differences",
        "Rarely",
        "Rarely",
        "Rarely",
        "none specifically, just internalized knowledge that explicitly non-deterministic test cases (like connecting to an API) are moreso testing the API connection than the validity of your code.",
        "no",
        "no",
        "no",
        "no",
        "dunno",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 07:37:32",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Mississauga, Ontario, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "1 - Check to see if they have all of the changes 2 - Investigate the output and determine the root cause 3 - Fix the root cause of the discrepancy",
        "Rarely",
        "Sometimes",
        "Always",
        "I push the api calls as far from my main code as possible, and then use mocks to avoid it in the non-specific tests.",
        "No",
        "no",
        "no",
        "no",
        "The ability to break dependencies/point them out.",
        "",
        "Andrew",
        "awjudd@gmail.com"
      ],
      [
        "19/04/2021 08:22:04",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Toronto/Canada",
        "Graduation completed",
        "Software Architect",
        "Sometimes",
        "10",
        "Collect the logs, and analyze the failing code visually to identify system/state dependent variance.",
        "Rarely",
        "Sometimes",
        "Often",
        "Granular isolation",
        "We tend to avoid non-deterministic test cases, but mocking the variable components. However, when not possible, we carefully generate the software state to make the outcomes predictable.",
        "state-volatile tests",
        "No",
        "No",
        "Detect system/state specific dependencies.",
        "Intriguing study. Why did you focus on PHP?",
        "Seva",
        "Seva.lapsha@gmail.com"
      ],
      [
        "19/04/2021 09:33:41",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Montreal, Canada",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Usually attach a debugger to see if I can find the point where it diverges, or add logging if it’s a race condition ",
        "Rarely",
        "Always",
        "Always",
        "Reproducible test fixtures and environments, special care around tests related to time",
        "I don’t understand the question",
        "Flaky tests",
        "No",
        "No",
        "Run multiple tests multiple times to detect non deterministic tests. Maybe linting or static analysis to detect common scenarios that can create this situation",
        "",
        "Samuel Schmidt",
        "samuel@dersam.net"
      ],
      [
        "19/04/2021 10:26:27",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Chicago, IL",
        "HS",
        "Software developer",
        "Sometimes",
        "10",
        "Examine possible causes like fixture data being manipulated in other tests & creating implicit dependencies between test cases",
        "Rarely",
        "Never",
        "Often",
        "best practices guide for devs",
        "No",
        "cursed tests",
        "No",
        "No",
        "A warning that highlights the problematic test(s) & states why they're non-deterministic would be great!",
        "",
        "Nick Evans",
        "nick.evans@northwestern.edu"
      ],
      [
        "19/04/2021 11:43:09",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Lancaster, OH, USA",
        "No higher education",
        "DevOps",
        "Rarely",
        "10",
        "attempting to reproduce the problem in my environment; then ask the other user for the output to determine what might be wrong; i can usually determine the problem that way",
        "Rarely",
        "Never",
        "Never",
        "none",
        "no",
        "\"tests with external uncontrolled dependencies\" would be a subset",
        "no",
        "no",
        "no idea",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 13:57:26",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Resistencia/Argentina",
        "",
        "Software developer",
        "Never",
        "1",
        "1. Check if the other part have replicate the enviroment. 2. Check the imputs. 3. Replicate the other part actions.",
        "Never",
        "Never",
        "Never",
        "I Do create atomic tests for my code. Really small tests. ",
        "No",
        "No",
        "No",
        "No",
        "Don't know",
        "https://martinfowler.com/articles/nonDeterminism.html",
        "Ariel",
        "arieltoledo@gmail.com"
      ],
      [
        "19/04/2021 14:09:06",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "10",
        "I ask for more details, like the other person's enviroment.",
        "Rarely",
        "Rarely",
        "Always",
        "I set a seed for random outputs.",
        "Not besides setting a seed for random functions.",
        "No",
        "NO",
        "No",
        "No",
        "Wish you best of luck!",
        "Patricio Tarantino",
        "patriciotarantino@gmail.com"
      ],
      [
        "19/04/2021 15:23:29",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "7",
        "check infrastructure dependencies and debug the test in the failed environment",
        "Sometimes",
        "Often",
        "Often",
        "trying to mock most of infra dependencies",
        "No",
        "No",
        "No",
        "No",
        "detect posible non-deterministic tests",
        "",
        "Piero Recchia",
        "piero.recchia@gmail.com"
      ],
      [
        "19/04/2021 15:26:28",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "San Francisco, Córdoba, Argentina",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "2",
        "I would consider environment differences and try to reproduce the error using the same dataset, or catching the non-deterministic factor by doing an static code review over that test method.",
        "Sometimes",
        "Often",
        "Always",
        "1. Deactivate curl primitives in order to prevent unintentional connections to third party systems. 2. Wrap undeterministic factors generally expressed as PHP primitives like rand() calls, new DateTime('now'), etc. Wrapping those behaviours into mockable dependencies.",
        "No, I don't use any automatic routine.",
        "xUnit Patterns define this anti-pattern as \"Erratic tests\"",
        "No",
        "No",
        "Detection and prevention I think",
        "",
        "Carlos Frutos",
        "carlos@rooftop.dev"
      ],
      [
        "19/04/2021 17:51:23",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Ciudad Autónoma  de Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "5",
        "Trying to reproduce the same steps on my computer to generate the error.",
        "Sometimes",
        "Often",
        "Sometimes",
        "I try to generate a file with different options. For example, if I have to communicate to an API, what I am trying to generate is possibly a JSON with which the application should return.",
        "-",
        "-",
        "-",
        "-",
        "Trying to find as many errors as possible, although if it is not mastered perfectly, it could become a big problem",
        "",
        "Martín",
        "Dell'Oro"
      ],
      [
        "19/04/2021 18:10:26",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "rio cuarto",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "check the code with partner",
        "Sometimes",
        "Never",
        "Never",
        "mock apis",
        "no",
        "no",
        "no",
        "no",
        "detection",
        "",
        "cristian",
        "cristianaalvarez@gmail.com"
      ],
      [
        "19/04/2021 18:11:54",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Argentina - Buenos Aires",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "Maybe different OS, or different version of php, maybe a failure of resources of the OS",
        "Rarely",
        "Rarely",
        "Rarely",
        "IDK",
        "No",
        "No",
        "No",
        "No",
        "IDK",
        "I tried to help, but i'm not very familiar with tests, sorry ! i try to do all my best.",
        "Sandro",
        "sdezerio@gmail.com"
      ],
      [
        "19/04/2021 20:26:58",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Los Angeles, USA",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "try to reproduce the issue locally",
        "Sometimes",
        "Rarely",
        "Rarely",
        "Mocking response, Double objects, avoid calling externals APIs except when there's no options",
        "No",
        "No, is the first time I saw they have a name",
        "No.",
        "No.",
        "Detect them before they run, more accurate message on detection (specially within CI tools)",
        "It sounds interesting",
        "",
        ""
      ],
      [
        "19/04/2021 22:50:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buckley, WA, United States",
        "Undergraduate",
        "Software developer",
        "Never",
        "10",
        "Make certain that the machine environments are as similar as possible, run tests in CI, and check the test itself for logic flaws",
        "Never",
        "Never",
        "Always",
        "I write extremely granular tests, often including a test intended to falsify the previous test if possible",
        "No",
        "Broken",
        "Writing tests which run through multiple possibilities",
        "Writing tests granularly, writing palindromic tests",
        "Start up a vm, run tests, export results, and repeat for many variant setups.",
        "I don’t really have much to say",
        "Casey Parker",
        "parker.casey@pm.me"
      ],
      [
        "20/04/2021 11:08:34",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "5",
        "Check dependencies, libraries and programming language versions between both machines.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Try to evaluate as much as try/catch scenarios I can.",
        "Try to evaluate as much as try/catch scenarios I can.",
        "No.",
        "No.",
        "No.",
        "Detecting non-deterministc scenarios on developed software.",
        "This is a very interesting study that made me to research on computing theory I have studied some years ago to have a deeper understanding for this survey.",
        "Guillermo Ramiro Maquieira",
        "guimaq@gmail.com"
      ],
      [
        "20/04/2021 12:21:32",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Argentina",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "6",
        "I double-check:  - If deployment or installation of the project was done properly in the other machine.  - If the codebase is correct (for example, make sure the git branch is the correct one and no other code changes were made that could affect the results).  - If the configuration of the project is correct (for example, environment variables that could alter the application behavior).  - If external required resources are available in the same way on the second machine (APIs, databases, any connectivity needed, permissions required, IPs allow-listed, etc).  - If the test could be affected for having different hardware resources (for example, requiring more time to not timeout in a slower machine, requiring more available RAM, etc).  - The versions of the running environment to see if that could affect the compatibility (PHP version running, OS type and version, dependencies versions).   Finally I would check the steps of the failing test and probably comment/remove temporarily some of them to find out what's exactly the problem.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "I use equivalent but \"mocked-up\" interfaces to replace the resources that could not be available.  For example, I create classes/code with the same interface that the code used to manage real APIs or databases. The use that in the tests to make them independent from the connectivity or other resources required.  In other cases where that's not possible, I run some code as a part of the test battery that checks for the availability of those resources that could not be available. Then, the test itself could be classified as \"skipped\", instead of mark it as failed.  And some other times (usually when there's no enough time for a better solution) I simply try to make sure the requirements and external conditions of the environment where the tests are ran will be the best. For example having a stable environment for this purpose.",
        "I don't.",
        "Actually no, but I know that frequently the \"integration tests\" are a sub-set of the non-deterministic ones.",
        "I don't.",
        "I don't.",
        "From the top of my ming, for detection and prevention I can think in these ideas:  List the points (test steps, code lines, etc) that could potentially have different results with the same entries and code. Similar to what code linter tools do. For example show recommendations or warnings when the tests use: - Random generated information that could make the test behave differently. - Date-time based tests that could fail depending on when are they ran. - Access to external resources such as the network (using an API for example). etc.  For prevention I'd also think in a library with some util methods to verify the availability of external required resources. For example, a library with methods like \"checkInternetConnectivity\", \"checkAvailableRAM\", etc. So the test developer can use them easily and the tool can suggest to use them when needed.  I also think in having a tool where resources could be registered (for example, an API or database) in a global part of the testing code, and the on each testing scenario the developer could declare with annotations or however those resources that the scenario requires.  For correction:  Provide an OOTB mocked-up for those interfaces that are usually used to access the network. For example a replacement for the class SoapClient used to request SOAP services. Then encourage the developer to implement those methods/requests done in the tests, but with mocked data.  I'd also expect the tool/s to have the possibility to run these verifications without running the tests.  ",
        "Even when I'm not specialized in testing at all, this study resulted very interesting to me because I have seen scenarios with the non-deterministic problem, and also why not to tell, because I'm generally interested in the topics related to software engineering.  I also think that this study could be extended to be more general and not specific for the PHP language, except of course for the existing tools questions.  I hope my answers help, and even when I'm not developing in PHP for the time being, I'd also like to hear about the results.",
        "Daniel Duarte",
        "danieldd.ar@gmail.com"
      ],
      [
        "20/04/2021 16:25:06",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Richmond, Canada",
        "High school student",
        "Student",
        "Never",
        "5",
        "I check for differences in environments. It would depend on the error thrown. ",
        "Sometimes",
        "Rarely",
        "Rarely",
        "None",
        "I use CI/CD such as Travis for testing Python. ",
        "No",
        "CI/CD tools such as Travis perform tests on multiple environments. ",
        "Linters often detect errors ahead of time. ",
        "Detection, prevention and correction",
        "I'm not too familiar with what a non deterministic test is so I Googled it. ",
        "Kevin",
        "Kevinlu1248@gmail.com "
      ],
      [
        "20/04/2021 19:01:02",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Portland, OR USA",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "2",
        "Check the environment and the build to see what is different.",
        "Rarely",
        "Rarely",
        "Often",
        "Mock external dependencies. Segregate tests with external dependencies.",
        "Check that dependency is available, then only run tests if dependency is available.",
        "Integration tests.",
        "no",
        "no",
        "Configure with a list of dependencies, check dependencies and flags tests if dependencies are unavailable.",
        "In general non-deterministic tests are to be avoided.",
        "Dan Revel",
        "dan@nopolabs.com"
      ],
      [
        "21/04/2021 02:29:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Montreal, Canada",
        "Undergraduate",
        "Software engineer",
        "Rarely",
        "10",
        "Try to see if there was a difference in our local environments, easy fix is usually docker",
        "Rarely",
        "Rarely",
        "Rarely",
        "I don’t come across them often and so i don’t take many precautions against them",
        "None",
        "None",
        "None",
        "None",
        "N/A",
        "",
        "",
        ""
      ],
      [
        "21/04/2021 07:37:14",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "ShengZheng/China",
        "Master's degree completed",
        "Software developer",
        "Sometimes",
        "2",
        "Check whether there are differences in the environment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Keep the environment unified",
        "no",
        "no",
        "no",
        "no",
        "no",
        "no",
        "YeZi",
        "875307054@qq.com"
      ],
      [
        "21/04/2021 11:26:15",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Buenos Aires / Argentina",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "Asking under what conditions de test was run",
        "Rarely",
        "Often",
        "Often",
        "always test with and without conection to apis and internet",
        "No",
        "No",
        "No",
        "No",
        "Tips for scenarios that the developer does not always consider",
        "",
        "Junior Ayala",
        "elessar303@gmail.com"
      ],
      [
        "21/04/2021 13:06:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Toronto/Canada",
        "Graduation completed",
        "Team Lead",
        "Sometimes",
        "8",
        "Check the machine's code version,  then the development setup,  the required external services, including VPN",
        "Sometimes",
        "Never",
        "Rarely",
        "Document the exceptions in KBs",
        "No",
        "No",
        "No",
        "No",
        "Standardized virtual dev environment, system check before starting the testing batch",
        "Congratulations for your initiative. ",
        "Humberto Ribeiro de Souza",
        "humbertosouza@outlook.com"
      ],
      [
        "23/04/2021 20:35:59",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Squamish, BC Canada",
        "Master's degree completed",
        "Secondary Teacher and k-12 sector technologist",
        "Never",
        "7",
        "I do not do this.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Good logic? Screening inputs for possibility",
        "nope",
        "nope",
        "no",
        "no",
        "Second order tests that asses output based on known-result input.",
        "",
        "Evan Sharp",
        "ego@evansharp.ca"
      ],
      [
        "24/04/2021 10:51:31",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Montreal/Canada",
        "Master's degree completed",
        "architect",
        "Always",
        "8",
        "isolate the test to determine what makes is a potentially weak test",
        "Often",
        "Often",
        "Often",
        "better understand the dependencies and properly locate the tests that have external dependencies. When possible use contract-based testing and leave those integration tests to a very minimum",
        "nothing other than the one reported above",
        "fragile tests",
        "pact.io",
        "no",
        "help me reduce the dependency on such tests or at least better identify those",
        "can you share the results of the survey?",
        "Mario Bittencourt",
        "mbneto@gmail.com"
      ],
      [
        "25/04/2021 05:34:54",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "China",
        "PhD completed",
        "Software developer",
        "Often",
        "8",
        "I ensure the environment is exactly the same as the one in my machine. Create the same environment, the same condition and run the test again. This include making sure that network connection is activated. When the environments match, and the tests still failed. I looked at external dependencies in the test code.",
        "Often",
        "Sometimes",
        "Always",
        "Avoid any non-deterministic call in the test code. That is, we must avoid calls to some function (such as network) or randomess in the test code. Except if random is part of the code being tested.",
        "I don't have any sequence of steps to execute",
        "No aware",
        "Non",
        "Non",
        "N/A",
        "One can override native PHP function that create randomness and avoid non-deterministic test",
        "",
        ""
      ],
      [
        "25/04/2021 12:25:29",
        "I agree",
        "7 - 10 years",
        "Up to 1 year",
        "Santa Fe, Santa Fe, Argentina",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "7",
        "I'll do docker container to have the same test environment and try not to rely on external sources",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock external services if I cannot reach them",
        "Api services calls, such as maps, firebase or database related",
        "I don't think so",
        "Not yet",
        "Waiting to fail xD",
        "Harcoded links specially",
        "I'm really looking forward to know about the results of this research! :)",
        "David Maximiliano Sosa",
        "maxi3390@gmail.com"
      ],
      [
        "25/04/2021 13:33:10",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Virginia Beach, USA",
        "High School",
        "Software engineer",
        "Rarely",
        "3",
        "debug with error logging",
        "Rarely",
        "Never",
        "Rarely",
        "extra logging for possible failures",
        "no",
        "no",
        "no",
        "no",
        "identify methods that could have non deterministic results ",
        "",
        "Zak Rabe",
        "zakrabe@gmail.com"
      ],
      [
        "25/04/2021 14:18:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Matawan, New Jersey, United States",
        "Undergraduate",
        "Platform Engineer",
        "Sometimes",
        "8",
        "Find out what conditions were different on the other machine. Whether it was a configuration issue, or an environment issue, or an overall logic issue.",
        "Rarely",
        "Rarely",
        "Rarely",
        "When writing the tests I make sure if I change something in the particular bit of code it tests. The test will completely fail. I do this by actually changing the code to make the test fail.",
        "Do not have one, at this point in time",
        "I am not",
        "We do not use any tool that tests for these things. A code review should catch these.",
        "We do not use any tool that prevents these things. Aside from code reviews.",
        "When the tests are written they should have a through code review.",
        "Seemed like there were a lot of the same questions. Aside from that seemed good.",
        "Vinnie Marone",
        "vinnie.marone35@gmail.com"
      ],
      [
        "25/04/2021 15:55:58",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Salt Lake City UT USA",
        "Master's degree completed",
        "Software engineer",
        "Never",
        "10",
        "Inquire about difference in environment",
        "Sometimes",
        "Never",
        "Never",
        "Run in a controlled environment",
        "No",
        "No",
        "No",
        "Not explicitly, just control the test environment",
        "Sufficient specification of test environment",
        "Non-determinism is usually a function of the environment not the software",
        "",
        ""
      ],
      [
        "25/04/2021 16:15:04",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Memphis, Tennessee, US",
        "PhD completed",
        "Software Consultant",
        "Sometimes",
        "5",
        "Check for differences in machine configuration",
        "Often",
        "Often",
        "Often",
        "Full preparation of host machine to specification",
        "Varies",
        "system configuration errors",
        "all by hand",
        "all by hand",
        "You need to be alert",
        "",
        "Greg Blumenthal",
        "greg@gmbs-consulting.com"
      ],
      [
        "26/04/2021 06:24:34",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Finland & France",
        "Graduation completed",
        "Designer Developer",
        "Never",
        "5",
        "Start digging apache/php settings",
        "Never",
        "Rarely",
        "Rarely",
        "None",
        "None",
        "None",
        "None",
        "None",
        "Good question! Usually people want code to be fixed automatically.",
        "This was easy! Probably knew a little too little of the subject.",
        "Jonatan Eriksson",
        "jonatan@tsto.org"
      ],
      [
        "26/04/2021 06:39:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Guangdong China",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "3",
        "check out if there is any evironment difference between two machine",
        "Sometimes",
        "Often",
        "Rarely",
        "it is time-comsuming",
        "environment differ",
        "no",
        "no",
        "no",
        "run fast and easy to use",
        "this study make me notice the non-deterministic test area",
        "Gary",
        "nutto.pan@gmail.com"
      ],
      [
        "26/04/2021 13:07:21",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Pittsfield MA",
        "Master's degree completed",
        "Software developer",
        "Never",
        "5",
        "Give up and test the component manually. (I'm being honest. This is not ideal, but due to limited budgets on our client projects, this is usually what happens)",
        "Rarely",
        "Never",
        "Never",
        "n/a",
        "no",
        "no",
        "no",
        "no",
        "n/a",
        "not really applicable to our normal workflow... sorry ",
        "Peter Wise",
        "peter@squarecandy.net"
      ],
      [
        "27/04/2021 04:21:13",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Mainz/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "5",
        "Verify the test environment. We use docker to have a very similar environment in a team. Also the configuration is managed.",
        "Sometimes",
        "Rarely",
        "Never",
        "We try to mocks for external interfaces. The used test framework provides functions to do that.",
        "It depends about we are talking here. If it's a unit test, we try to prevent that behavior. For functional tests it's ok to call a real interface (with all the down sites).",
        "Functional testing. Maybe acceptance testing (depending on the definition).",
        "no",
        "no",
        "At least a static code check to find calls to external resources. Maybe a plugin for PhpStorm.",
        "Interesting. Never thought so much about non-deterministic tests.",
        "Christian Münch",
        "christian@muench-worms.de"
      ],
      [
        "27/04/2021 04:54:33",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Duesseldorf/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "Compare machines and execution environment (php version, extensions, etc), code state (modifications, revision). If that does not solve it, run a step-debugger or do poor-mans-debugging with var_dump.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Run tests in isolated environments, like docker, with restrictions on resources like network or disk.",
        "No.",
        "No.",
        "Generally not, but linters can be used to detect the usage of ext/curl and other subjects.",
        "PECL/runkit to mock php internals.",
        "* Detect: output a machine readable format for CI integration * Prevent: If configured, let tests fail for having non-deterministic side-effects * Correction: No tool should correct this on its own. It may suggest alternatives, though",
        "All the best and good luck!",
        "",
        ""
      ],
      [
        "27/04/2021 04:57:11",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Berlin",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "5",
        "Debug on that other machine. Reproduce. Fix.",
        "Never",
        "Never",
        "Never",
        "None, I hardly have that case.",
        "No.",
        "No.",
        "No.",
        "No.",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:29:10",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Lübeck/Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "9",
        "Check the versions of anything involved. Check again locally. Check for any changes not (correctly) committed to the code. Debug the failing test.",
        "Rarely",
        "Sometimes",
        "Often",
        "Most of the time I just make sure the test is not relying on external factors (time passing, network being available, randomness involved, …)",
        "No…",
        "🤷‍♂️",
        "No",
        "No",
        "🤷‍♂️",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:58:44",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Münster/Germany",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "8",
        "Checking the dependencies (e.g. installed libraries, composer packages, software versions).",
        "Rarely",
        "Never",
        "Never",
        "Common error handling (e.g. try-catch around the external request).",
        "/",
        "/",
        "/",
        "/",
        "/",
        "",
        "Kai Neuwerth",
        "kai@neuwerth.me"
      ],
      [
        "27/04/2021 07:51:01",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Often",
        "9",
        "Find the difference between his and mine setup, if there is none, check the test validity.",
        "Rarely",
        "Never",
        "Rarely",
        "Good Test Design and good Environment Preparements",
        "See https://ruby.sadi.st/Heckle.html and https://infection.github.io/guide/ (Mutation Testing)",
        "No",
        "https://infection.github.io/guide/",
        "No",
        "https://infection.github.io/guide/",
        "",
        "Herbert Maschke",
        "thyseus@gmail.com"
      ],
      [
        "27/04/2021 08:17:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Würzburg / Germany",
        "Undergraduate",
        "Software developer",
        "Never",
        "5",
        "Check the test and / or the code",
        "Never",
        "Never",
        "Never",
        "None :-)",
        "no",
        "no",
        "no",
        "no",
        "dont know?",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 08:43:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Dresden, Germany",
        "Bachelor's degree completed",
        "I was a software developer, then gradually became more of an software engineer and nowadays am a consultant and manager for software development projects.",
        "Sometimes",
        "7",
        "I'd search for differences in the runtime environments to figure out, which external factors could have influenced the test. Then I try to improve the test in order to check those dependencies as well.",
        "Sometimes",
        "Rarely",
        "Often",
        "For each test I try to figure out if there are any dependencies from external factors. If there are, I write additional tests explicitly checking for those factors.",
        "If the non-determistic behaviour is intrinsic, I would not write a test expecting a deterministic result, but just perform a plausability test instead.",
        "No.",
        "No.",
        "No.",
        "That's hard to say. I'd expect the tool to at least recognize external dependencies, but that would be really hard to do, I guess.",
        "Very interesting topic! Good luck with your degree!",
        "Sebastian Meyer",
        "https://github.com/sebastian-meyer"
      ],
      [
        "27/04/2021 08:52:26",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "self-educated",
        "Software Quality Consultant",
        "Never",
        "10",
        "That only happens, if I rely on a dependency that is not explicitely stated in composer.json but installed locally. In that case, I fix composer.json to also reflect that dependency.",
        "Never",
        "Never",
        "Always",
        "Mocking external dependencies. External services can always be mocked using Docker containers.",
        "I completely avoid non-deterministic tests, so there's never a need to execute them.",
        "Those tests are simply broken.",
        "No",
        "No, just code review.",
        " I personally don't need such a tool, it is superseeded by my awareness. Nevertheless, I know people who should use it ;)  Since mock genereation is not the easiest task, a mock generator could be useful, i.e., create a Docker container with senseful data that mimics the original service just as much as needed by the tests. The mock is generated once, when the connection is available, but is then independent from any outbound connection.",
        "I'm interested in the results of the survey. Please send it to nbraczek@bsds.de, if possible.",
        "Niels Braczek",
        "nbraczek@bsds.de"
      ],
      [
        "27/04/2021 09:20:13",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Duisburg/Germany",
        "Fachabitur, lower as university + trained as IT specialist in application development",
        "Software developer",
        "Rarely",
        "8",
        "Telling him \"it works on my machine\". Joke aside, inspectiong the code and triying to find the differences of his and my machine and envioment which could affect the test code.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "Use a general \"enviroment\" or general test before testing the code and/or write detailed error messages/logs why the test failed.",
        "phpunittests? Not sure what is meant, so \"no\".",
        "No",
        "No",
        "No",
        "Checking the enviroment (like my general test)",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 10:06:57",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin/Germany ",
        "Undergraduate",
        "Engineering Lead ",
        "Sometimes",
        "10",
        "I would typicslly step through the test case with a debugger. I'll be likely looking for branching (if, switch, etc) logic based on random, time or other  external resources. (In other languages data races are just as common)",
        "Rarely",
        "Rarely",
        "Often",
        "Helper classes which use external sources by default but let tests override it",
        "No",
        "No",
        "Not in PHP.",
        "No.",
        "I'd expect them to listen potential issues. I'd probably run them locally on commit.",
        "",
        "Peter Aba",
        "peter@peteraba.com "
      ],
      [
        "27/04/2021 10:31:42",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Berlin/Germany",
        "Graduation completed",
        "Engineering Manager",
        "Often",
        "6",
        "I compare our environment details (configurations, environment variables) and connectivity with external services involved.  I always advise my teams to use a common environment by making use of Docker/docker-compose or Virtual Machines.",
        "Rarely",
        "Rarely",
        "Often",
        "I encourage TDD practices (which builds majority of tests) using Unit tests only. Unit tests by convention must contain no I/O and rely on mocks where necessary.  Date/Time units that need to be tested should use \"relative time\" as much as possible in order to avoid time bombs such as new years eve build breaks.",
        "I usually understand non-deterministic tests as tests that connect components from outside the software's boundaries (reading from a disk, network..). So normalising the environment using VMs and common shared configurations is already a good start.  Sharing databases and services is also ideal and, when not possible, make use o migrations and conventions that make sure such tests will only use data provided by such migrations.  Another option that I use take is to spin up fake services that will return the expected response (force a response HTTP 2xx, 4xx, timeout exceptions...)",
        "No",
        "No",
        "No. As I mentioned before, I often use a mix of conventions and shared environments in order to reduce the amount of non-deterministic tests.",
        "Thinking of I/O as the source of all evil, I can envision a tool that monitors, takes snapshots and replays or mock network transactions for specific tests.  This way a test framework (such as phpunit or pest) may have different test profiles for each test in a test case. Potentially using a common \"given\" method (thinking of \"given/when/then\" testing approach) or annotations.",
        "Questions are very interesting and I'd be keen to read the output of your research. I must say that the video showing an example of non-deterministic tests created a huge bias on my responses, because I mostly think of your network exception example. I hope that's intentional.  I believe not differentiating test types can mislead people (unit/integration/e2e tests to name a few) and I hope the lack of guidance there is intentional.",
        "Níckolas Da Silva",
        "nawarian@gmail.com"
      ],
      [
        "27/04/2021 10:36:44",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Berlin, Germany",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "4",
        "For unit testing: - Check if such a test relies on external dependencies - Replace these hard dependencies (if any) with interfaces - Mock or stub these interfaces  For integration tests: - Add all stateful dependencies to docker containers - Make sure to rely on anything else but containers ",
        "Rarely",
        "Never",
        "Sometimes",
        "For Unit tests: never rely on stateful dependencies For Integration tests: Docker/containers for stateful dependencies",
        "-",
        "-",
        "-",
        "Docker",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 12:59:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Stuttgart Stralsund ",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "9",
        "Debug it! ",
        "Rarely",
        "Rarely",
        "Often",
        "Make e.g. sure external deps are mocked ",
        "...",
        "No",
        "No",
        "No",
        "No",
        "",
        "Phil ",
        "Phiamo@gmail.com "
      ],
      [
        "27/04/2021 20:25:09",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Germany",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "3",
        "Inspect the environment and examine the logs. ",
        "Often",
        "Never",
        "Never",
        "Depending on what type of tests I’m writing. Unittests have no external dependencies and work within a clearly defined scope. Functional tests or integration tests are by nature often non deterministic. ",
        "Don’t get this question. ",
        "Infected tests ",
        "No",
        "No",
        "/",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 01:16:37",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Düsseldorf/Gernany",
        "Undergraduate",
        "CEO (I used to be a developer, though)",
        "Rarely",
        "7",
        "Find the error in the tests",
        "Rarely",
        "Always",
        "Always",
        "Code-Reviews are done before code gets merged",
        "phpunit executes the tests, but I think I don‘t understand the question.",
        "Testing external dependencies should be done in integration tests. The integration tests may fail due to missing conbectivity and are re-run multiple times to verify the integration works",
        "no",
        "no",
        "detection, I guess?",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:50:25",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Pasig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "I evaluate the environment the test was performed on, specifically if there are huge differences in its core stack (was the test ran on a Linux environment or a Windows one?) I also extract the exact error to determine the next course of action.",
        "Always",
        "Always",
        "Often",
        "We usually assume through policy that a test environment MUST meet the expectations in the specification documents of the project. It is well-clarified throughout the team that such differences in expected environments will require a deeper analysis of the encountered errors and will be a significant cause of delay.",
        "None",
        "None",
        "None",
        "None",
        "Well-written test cases to clearly report back what caused the non-deterministic test to fail.",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:58:48",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Makati, Philippines",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Investigate",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mock the dependencies and use test or sample data",
        "PHPUnit",
        "Not aware",
        "Not aware of any tools on this",
        "Not aware of any tools on this",
        "Not sure",
        "",
        "Alexander Torrijos",
        "artorrijos@gmail.com"
      ],
      [
        "28/04/2021 03:24:15",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "1. rerun the test. 2. check versioning /device differences 3. debug the test",
        "Rarely",
        "Rarely",
        "Never",
        "None.",
        "I sometimes have to make async, external api calls and then just wait for a timeout. ",
        "no",
        "maybe SonarQube?",
        "maybe SonarQube?",
        "usual CI, with build features, code analysis, and adaptable to many platforms",
        "Tho I know what SW-Testing (and TTD) is, I rarely use it in personal projects (when I'm the only contributor anyway) which is quite often. Also, I know and worked with PHP for some time, but for sure wouldn't call me a PHP-expert and I never even wrote a single test in PHP.",
        "Henrik Storch",
        "thisisthefoxe.dhbw@gmail.com"
      ],
      [
        "28/04/2021 03:43:23",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Stuttgart, Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "8",
        "Investigate the error on the other machine. Try to reproduce the issue locally. Ensure that the underlying problem is understood. Try to make the test deterministic or if impossible try to determine the factors involved and skip the test if problematic condition is detected.",
        "Rarely",
        "Sometimes",
        "Often",
        "Reduce external dependencies, esp. operating system, filesystem, etc.",
        "Not sure what's meant with this question",
        "randomly failing tests",
        "No.",
        "No.",
        "Detect problematic use of functions that may cause non-deterministic behaviour. ",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 04:14:44",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Barcelona/spain",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "5",
        "I would adk him to show me the code",
        "Rarely",
        "Rarely",
        "Rarely",
        "External dependencies are wrapped in a new class or i add general exception catching for the call",
        "No",
        "No",
        "No",
        "No",
        "No idea",
        "Interesting topic",
        "",
        ""
      ],
      [
        "28/04/2021 04:37:42",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Olongapo",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "1",
        "use docker, and mock api test",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Just use Docker, and Mock the Api",
        "None , I just use my own method of test driven development , And i Do  run my code in 3 platform mac, windows and linux.",
        "none",
        "github workflow now can run test on all platform making sure your test pass in all platform",
        "NOne",
        "None",
        "",
        "Uriah",
        "codeitlikemiley@gmail.com"
      ],
      [
        "28/04/2021 05:01:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Bonn Germany ",
        "Master's degree completed",
        "Software engineer",
        "Always",
        "7",
        "Find out why this happens. Than the code to make the test deterministic. If that is not possible, for example like in your video, create a second test, that tests against a mock or a stub, so that one is deterministic. Then use the other test in a different testset, that runs against the third party application, to check, where the api still works. Usually these tests have a rerun possibility. The deterministic test set should never fail, the other one could. ",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mocking and stubbing, predetermined test data, e.g.",
        "E sometimes use retry mechanisms, and in your video example those tests would test the Internet connection before running the test, so that we know, that was the cause for the failure. ",
        "Flaky tests",
        "No. ",
        "Not automatically. Some people have rerun mechanisms for their tests, but I do not like those automated Nachsaisons, because it makes you not taking care. ",
        "Showing known causes",
        "I would like to see your resulting paper please, falk@kuehnel.du",
        "Falk Kühnel",
        "falk@kuehnel.eu"
      ],
      [
        "28/04/2021 05:11:34",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Passau/Germany",
        "Master's degree completed",
        "Hacker / Software hacker / Hacker aka tester/debuger/developer/creator",
        "Sometimes",
        "7",
        "1st) check configs, 2nd) get screen sharing online",
        "Rarely",
        "Rarely",
        "Rarely",
        "don't do too much in one test, do many tests based on just a few.",
        "-",
        "-",
        "-",
        "-",
        "should be plugin for phpstorm and for the other idea group like webstorm",
        "-",
        "",
        ""
      ],
      [
        "28/04/2021 05:53:04",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Taguig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "6",
        "read the error message if available or check if the another machine and my machine has same version of php ",
        "Rarely",
        "Rarely",
        "Often",
        "run unit test to locate the non deterministic code and revise it",
        "no",
        "no",
        "no",
        "no",
        "cpu profiler",
        "sorry, some answers are not substantial",
        "Frex Cuadillera",
        "fcuadillera@gmail.com"
      ],
      [
        "28/04/2021 06:17:52",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "3",
        "Docker",
        "Often",
        "Rarely",
        "Rarely",
        "Include as input whatever can change in the environment that makes the test deterministic",
        "N/a",
        "None",
        "None",
        "Docker and containerization",
        "Don't know",
        "Good luck",
        "Claude",
        "claudekirke@gmail.com"
      ],
      [
        "28/04/2021 06:47:20",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Germany Rosenheim",
        "Graduation completed",
        "Senior Backend Developer, Lead Product Developer",
        "Rarely",
        "8",
        "Identify and resolve the differences between the two test environments.",
        "Rarely",
        "Rarely",
        "Often",
        "Replace external APIs with local dummy APIs to create deterministic API responses/behavior (mostly based on docker)",
        "No",
        "\"Snowflake Tests\": They will break over something rather irrelevant or sensitive external condition. These are tests that will fail often in your pipeline and they will be successful if rerun.",
        "No. Sometimes our CI/CD Pipeline will break for no reason, which is an indicator for such (bad) tests.",
        "We don't test or rely on external resources. It's good practice to Mock/Stub the parts of your code that rely on external resources. PHPUnit is used to create Mocks/Stubs.",
        "The tool should detect if any external resource is used, identify the protocol, request and response contents and format and automatically derive a stub, which can be used to replace the external call. This information must be exportable as file to be commited with the tests and used by others to use the tool and the configuration to run the tests against the mocked API of the tool, not the Live-Api. Nice to Have: An UI to modify the detected reponses",
        "Good luck",
        "",
        ""
      ],
      [
        "28/04/2021 07:39:30",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Philippines",
        "Master's degree in progress",
        "Solutions Architect",
        "Rarely",
        "3",
        "Determine the similarity and difference in test execution environment",
        "Rarely",
        "Rarely",
        "Always",
        "With defensive coding practices, have the code define and ensure satisfaction of requirements before executing their function.",
        "No, it's a bad practice",
        "No",
        "No",
        "Rather than a tool, it's basic coding practice to ensure all requirements for success of your code is in place.",
        "Detection of dependencies to functions beyond the current system's control, but paradoxically it means everything",
        "The term 'non-deterministic test' is a misnomer, there may be no changes in the code, but we have observable and remediable changes on parameters or environment variables (i.e. internet connection) beyond control of the software that the PHP code depends on. ",
        "Tito Mari Francis Escaño",
        "titomarifrancis@gmail.com"
      ],
      [
        "28/04/2021 08:56:15",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Manila/Philippines",
        "Graduation completed",
        "Development Manager",
        "Often",
        "10",
        "Usually, discuss the issue with the developer and advise for mitigation. Sometimes, we also incorporate it already during brainstorming / grooming and discuss that this should have been included already in the beginning and not on the end.",
        "Sometimes",
        "Often",
        "Often",
        "We make as much realistic scenarios as possible. Also, on the code level, we tend to increase the support of the previously encountered scenarios and have it applied on future development.",
        "One is to setup automated testing mechanism being executed on regular / daily basis. This way, we can easily catch the potential issues during the execution and compare on the last result. From there, we can investigate / dig further what may caused it and make the necessary adjustment so that it will not happen again on the next run.  In addition, regular code analysis of both test case and also the main code itself is beneficial as you may not know that somewhere before or down the line, an incorrect argument or method may have caused the non-deterministic test.  Another one is to increase the test suites. Granted that one scenario is not enough but as mentioned, once we encounter the issue somewhere, it is automatically added on the list to be tested and have it incorporated on the test case and also on the code.",
        "Usually, we do isolation as sometimes, the application on one environment only shows the issue as compare to others. Once we isolate the application in question, we perform the test, either automated or manual, so that we can have proper verification that we need. Since its already isolated, we tend to perform other change of environment (like pretending of slow connection and like) as that shows a different side of story as well.  In relation to isolation, we tend to create a different test suite so that we can make sure that during execution, it will not be that invasive unlike the usual test suite and can be executed multiple times in different scenarios.",
        "Not that I know of specifically as we tend to rely on collective usage and adapt as we go along.",
        "Probably it can be covered at some point by code analysis like SonarQube. Because with SonarQube, its not just the code is being scanned, but also the potential coverage and also some duplicates of the test cases generated.",
        "I guess would be able to cover certain scenarios that usual testing won't be able to cover. Probably intelligent enough to advise that certain issue can be achieved by this scenario and so on.",
        "Really looking forward on the result of this study because its an eye opener to developers generating those applications and solutions which may lead towards service resiliency and better security.",
        "Rellmon P. Ponce de Leon",
        "raremon@gmail.com"
      ],
      [
        "28/04/2021 10:43:10",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Davao city, Philippines",
        "Graduation completed",
        "Software developer",
        "Often",
        "7",
        "View logs",
        "Sometimes",
        "Sometimes",
        "Often",
        "Add paramaters to run the test multiple times.",
        "no",
        "nope",
        "nope",
        "nope",
        "nope",
        "Thanks and good luck",
        "Goper",
        "goper.zosa@gmail.com"
      ],
      [
        "28/04/2021 11:58:57",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "7",
        "Check for time issues (i.e. mock 'now'), reduce integration tests with unreliable services to a minimum, mark them as unstable",
        "Rarely",
        "Sometimes",
        "Often",
        "Make boundaries to external services clear, easily mockable",
        "-",
        "Unstable tests",
        "No",
        "No",
        "Detect external calls in tests or time dependent logic (suggest injecting a clock component)",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 12:13:06",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Philippines",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "check the difference between configurations, then compatibility and then difference in environment",
        "Rarely",
        "Sometimes",
        "Rarely",
        "making sure to look for boolean results",
        "havent really",
        "none",
        "none",
        "none in particular",
        "i am not really verbose in testing",
        "I am actually a frontend developer, I have worked with php for just a short period so it might be better to look for respondents who are truly backend",
        "Sanz moses",
        "web@sanzmoses.com"
      ],
      [
        "28/04/2021 13:08:01",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Bohol, Philippines",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "I usually look for relevant error messages in the console and in the logs.",
        "Sometimes",
        "Always",
        "Always",
        "I mock the causes of the non-deterministic tests. I also test the cause separately and sometimes manually.",
        "If the code requires an external service, my usual step is to mock that service when writing tests.",
        "No",
        "No",
        "No",
        "Pointing the exact cause of the non-deterministic behavior like if I cannot reach the external service required due to a severed internet connection.",
        "Good luck!",
        "",
        "ejillberth@gmail.com"
      ],
      [
        "28/04/2021 21:04:10",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Manila, Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Find the difference between my machine and the other persons machine",
        "Sometimes",
        "Always",
        "Often",
        "Have a source of truth, like CI, with the correct configuration. Use virtual machines for reproducibility. Avoid code and tests that produce non-deterministic output, like RNGs, timezone libraries, unmocked classes.",
        "no",
        "race conditions, intermittent failure, false positive",
        "no",
        "no",
        "i dont really use one, mostly its detected by the test runner itself",
        "",
        "Kelly Navarro",
        "gabrnavarro@gmail.com"
      ],
      [
        "28/04/2021 22:43:52",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "Check operating system, check network connectivity or whitelisting to external API, check environmental variable",
        "Often",
        "Often",
        "Often",
        "Separate non-deterministic test like creating a new test suite so that it can be executed separately from internal business logic test case",
        "From test creation, separate non-deterministic tests externally and group them together according to their purpose. Grouping together tests dependent on operating system, tests dependent on connectivity, or tests dependent on other microservices. If it is okay to bypass the dependency and we will only require the target data/response, it could be replaced by mock testing.",
        "Dependency testing as I could say, as it depends on multiple variables in order for it be success.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "If there's a tool, maybe it will detect first the connectivity of the non-deterministic tests and then catch its error to notify the executor of the test. Or it can save such scenario on time of creation like the response of the third party API and store it into a folder so that it can be used as referenced for future non-deterministic tests.",
        "The purpose of this study is good to the point that it can increase the developer/tester experience in tackling non-deterministic tests.",
        "Arvin Reynoso",
        "reynosoarvin@gmail.com"
      ],
      [
        "29/04/2021 02:04:20",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Bacolod City",
        "Graduation completed",
        "Software developer",
        "Always",
        "6",
        "list down your apps machine what you install and install to other machine or use docker..",
        "Sometimes",
        "Always",
        "Always",
        "set workflow of your code structure, be strict on data types and always restart or hard refresh",
        "yes because you should take down list of the error with solution",
        "yes I'm strict when it comes to variables",
        "no",
        "no",
        "none",
        "Such a nice survey.. so interesting",
        "edrian jan solatorio",
        "edrianjansolatorio@gmail.com"
      ],
      [
        "29/04/2021 04:01:19",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Frankfurt/Germany",
        "vocational technical diploma",
        "Software developer",
        "Rarely",
        "3",
        "Analyze the error message, in most cases there are differences in the conditions between developer-machine and another",
        "Rarely",
        "Rarely",
        "Rarely",
        "avoid depending on 3rd party services mostly, if not possible, catch possible issues and output accordingly",
        "no",
        "external service/data dependent",
        "no",
        "no",
        "analyze what parts of the code are refering to external services",
        "",
        "Michael",
        "d00p@froxlor.org"
      ],
      [
        "29/04/2021 07:41:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin, Germany",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "7",
        "It depends on the kind of test. Browser tests (written in PHP or any other language) for example are often non-deterministic and require timeouts to be configured for the completion of certain interactions. In such cases the test may fail because the execution time exceeds the default timeout specified for the test and needs to be increased.  In other cases the test may require the software to be configured in a way that cannot be done within the test setup. Investigating whether the test outcome is influenced e.g. by environment variables would be something that I'd check in such a scenario.",
        "Often",
        "Often",
        "Often",
        "Peer review and running tests as part of automated continuous integration tests.",
        "I don't understand the question.",
        "\"tests with non-deterministic behavior\" is the term I would use. Browser tests and edge to edge tests come to mind as classes of tests that often fall into this category.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "It should cause the affected tests to fail or trigger some sort of warning.",
        "",
        "",
        ""
      ],
      [
        "29/04/2021 21:58:21",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Remote for US, Belgium and Argentina",
        "Graduation completed",
        "Software engineer",
        "Always",
        "5",
        "I would try to reproduce it and change the test so it works aisolated to the environment",
        "Sometimes",
        "Sometimes",
        "Rarely",
        "I run them in a virtualized environment and so do the rest Of the devs ",
        "No",
        "No",
        "No",
        "No",
        "To cover every possible scenario",
        "Good luck with your study! ",
        "Vicky Jauregui ",
        "jaureguivictoria@gmail.com"
      ]
    ],
    "classifications": [
      "timestamp",
      "terms",
      "groupsInAnswer",
      "groupsInAnswer",
      "cityState",
      "openQuestion",
      "groupsInAnswer",
      "groupsInAnswer",
      "npsLike",
      "negativeOrList",
      "groupsInAnswer",
      "groupsInAnswer",
      "groupsInAnswer",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "feedback",
      "groupsInAnswer",
      "groupsInAnswer"
    ],
    "manualSettings": {}
  },
  "1620834908545": {
    "titles": [
      "Carimbo de data/hora",
      "Check the \"I agree\" option if you have read and agree to the consent form.",
      "How long have you been working with PHP?",
      "How long have you been working with PHP software testing?",
      "Where do you work? (City/Country)",
      "What is your academic level?",
      "Regarding your profession, what title would you give yourself?",
      "Have you ever dealt with non-deterministic software testing of any kind?",
      "On a scale of 1 to 10, how problematic do you consider the occurrence of non-deterministic tests in software projects?",
      "Let us consider the following scenario: You have developed a test code, and you were successful at running it on your machine. However, when you or someone else ran the same test on another machine, it failed. What action do you usually take when face such a scenario?",
      "How often do non-deterministic tests appear in your workflow?",
      "How often do you employ non-deterministic tests correction practices in your workflow?",
      "How often do you employ non-deterministic tests prevention practices in your workflow?",
      "What precautions do you take to prevent the tests you write from being non-deterministic?",
      "Do you use (or be aware of) any routine for the execution of non-deterministic tests? If so, could you please detail it/them?",
      "Are you aware of any other name associated with \"tests with non-deterministic behavior\"? If so, could you please detail it/them?",
      "Do you use or know any tools to detect non-deterministic tests? Please detail it/them.",
      "Do you use or know any tools to prevent non-deterministic tests? Please detail it/them.",
      "What are the expected features for a tool dealing with (detection, prevention or correction) non-deterministic tests in software projects?",
      "Give your feedback on this study, or comment freely.",
      "What is your name?",
      "What is your email?"
    ],
    "rows": [
      [
        "08/04/2021 18:53:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "France",
        "Master's degree completed",
        "Software developer",
        "Rarely",
        "5",
        "Examine test environment",
        "Rarely",
        "Never",
        "Rarely",
        "Mocking / emulating external resources",
        "No",
        "Tests with external dependencies",
        "no",
        "no",
        "Checking for external dependencies, comparing with previous test runs",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 20:04:13",
        "I don't agree",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      [
        "08/04/2021 22:31:59",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Banjarmasin, Indonesia",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "I usually check for the other person's project setup, eg: 1. Are they follow the setup instruction correctly? 2. Are they set the correct env variable values correctly?  Related to the tests it self, sometimes I face this issue because: 1. Some random function (eg. php faker) generates an invalid value (usually status_code numbers in integer). 2. Date time value definition related to calculation of holidays (rarely).  But for me, mostly this issue occurs related to the project setup documentation.",
        "Rarely",
        "Sometimes",
        "Always",
        "1. Using mock object and response for the tests related to external API calls 2. Using carbon instance and carbon mock object for date time definition on tests 3. Prevent using random function for particular model attributes, eg: user_role_id, status_code, which I will use for data filtering or where clause on the production code. 4. Update the project documentation if the changes will impact the tests.",
        "I don't really get this question.",
        "I was using term \"intermittent test failures\" for this kind of test issue.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "No, I don't have such tool to do so. Mostly I will fix the failed test as I found it without using any tool to detect it.",
        "I don't expect any tool to deal with it, I think I don't need one. Because this issue rarely occurs on my projects. Mostly this issue happen because of my own careless",
        "TBH, I still don't get the point of this research, why do you need these answers, and what the goal of this research.  I just get that: 1. You want to know how often developers facing non-deterministic tests 2. You want to develop some tool to detect and prevent this test issue  But, still not sure about that :D  PS: I didn't understand 1 question (see my answers). If you can elaborate more about it (via email), I'd be happy to answer it.",
        "Nafies Luthfi",
        "nafiesl@gmail.com"
      ],
      [
        "09/04/2021 08:52:22",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Tokyo/Japan ",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "9",
        "Develop and share Docker environments",
        "Rarely",
        "Sometimes",
        "Always",
        "Mocking Disk IO or API calls",
        "None",
        "tests with side effects",
        "None",
        "None",
        "?",
        "",
        "mpyw",
        "mpyw628@gmail.com"
      ],
      [
        "09/04/2021 12:12:40",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "From home in Canada",
        "Graduation completed",
        "Software Developer and Tester",
        "Sometimes",
        "10",
        "Pair with another developer to determine differences in data, language settings or even operating system to debug why the test fails in one environment but not another ",
        "Often",
        "Often",
        "Often",
        "Understand what data is required for the test to pass and determine any “side effects” that might be occurring that could make the test non-deterministic ",
        "No",
        "No",
        "No",
        "No",
        "Clear error messages and the ability to be easily run in in a continuous integration environment like GitHub Actions",
        "",
        "Chris Hartjes",
        "chartjes@littlehart.net"
      ],
      [
        "10/04/2021 11:37:15",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Grand Rapids, USA",
        "Undergraduate",
        "Software developer",
        "Often",
        "4",
        "Try to have THAT developer debug why it's not working on their machine",
        "Often",
        "Sometimes",
        "Rarely",
        "Mocking inside a unit test. However, sometimes we purposely want to to test the entire, connected system and so we do NOT want to mock external things (like databases, APIs, etc)",
        "For tests that rely on an external API call, we try to use an API service that can be used by all devs (e.g. not something that requires a production API key). But mostly... if it makes sense, we would try to mock out these external services. But when we specifically choose to NOT mock them (because the test is most valuable when using the real API), we just \"live\" with the possibility that it may fail sometimes.",
        "We call them \"phantom failure\" tests - tests that fail sometimes but not other times. These are a PAIN. They are actually most commonly associated with Selenium-style tests where, for whatever reason, the interface responds more slowly sometimes, and so our tests fail because they have not waited long enough for something to load.",
        ".",
        ".",
        ".",
        "",
        "Ryan Weaver",
        "ryan@symfonycasts.com"
      ],
      [
        "10/04/2021 11:54:33",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "China",
        "Senior high school in progress",
        "Software developer",
        "Rarely",
        "6",
        "Ask for the environmental parameters of the other party, and reproduce these problems as much as possible. And ask him/her completely delete the software and then re-install it.",
        "Rarely",
        "Rarely",
        "Rarely",
        "None",
        "idk",
        "We usually call it metaphysics",
        "I lack experience in this field",
        "I lack experience in this field",
        "I lack experience in this field",
        "",
        "MlgmXyysd",
        "mlgmxyysd@meowcat.org"
      ],
      [
        "10/04/2021 14:53:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Czech Republic",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "File an issue to fix it, to make the test deterministic",
        "Rarely",
        "Rarely",
        "Often",
        "Mocking objects and/or responses",
        "No",
        "Maybe \"tests with external dependencies\"",
        "No",
        "Mock libraries",
        "Don't know",
        "",
        "",
        ""
      ],
      [
        "10/04/2021 15:29:22",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Kolkata/India",
        "Graduation completed",
        "Software developer",
        "Never",
        "1",
        "Use docker",
        "Never",
        "Never",
        "Never",
        "Nothing",
        "No",
        "Sounds like random probability",
        "No",
        "No",
        "No",
        "Would be good to give a code example of non deterministic test",
        "Anubhav",
        "xprilion@gmail.com"
      ],
      [
        "10/04/2021 18:34:14",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "New York City/USA",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Check the testing environment",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock third-party dependencies",
        "Make sure that dependencies are injectable, then replace the dependencies with mocked objects/results",
        "Non-atomic tests, tests with external dependencies",
        "Nope",
        "Nope",
        "This tool would be able to identify dependencies that interface with third-party software, like curl, cache engines, database engines, etc...",
        "",
        "Hypolite Petovan",
        "hypolite@mrpetovan.com"
      ],
      [
        "10/04/2021 18:59:11",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Frederick, Maryland, USA",
        "Some college",
        "Software developer",
        "Always",
        "9",
        "Confirm that both systems have the same things installed and investigate further",
        "Rarely",
        "Often",
        "Sometimes",
        "Manual review of the tests",
        "Not really",
        "Heisenbugs ;-)",
        "No",
        "No",
        "I don't know",
        "",
        "",
        ""
      ],
      [
        "11/04/2021 00:13:03",
        "I agree",
        "Up to 1 year",
        "Up to 1 year",
        "China",
        "Graduation completed",
        "Software developer",
        "Never",
        "2",
        "Check their PHP version, etc",
        "Never",
        "Never",
        "Never",
        "I never write tests",
        "Nope.",
        "No",
        "No.",
        "NO",
        "I don't know",
        "",
        "Anonymous",
        ""
      ],
      [
        "11/04/2021 07:12:52",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Muncih, Germany",
        "Master's degree completed",
        "IT Consultant",
        "Sometimes",
        "2",
        "Find out why the test fails on other machine.",
        "Rarely",
        "Never",
        "Always",
        "Decouple.",
        "Replace randomness and actual time by pre-defined values that get injected; decouple tests from external resources.",
        "Flaky tests",
        "PHPUnit allows repeated test execution.",
        "For testing external APIs, I hand-code an \"is available\" check. When external resource is not available, I skip the test.",
        "Magically fix all problems? ,-)",
        "I found the term \"non-deterministic tests\" a bit misleading first, because I thought it would refer to testing code with non-deterministic behaviour. The way it was presented in the video, it \"just\" refers to external resources that are not available. Or at least, this is my assumption at this point.",
        "Stefan Priebsch",
        "stefan@priebsch.de"
      ],
      [
        "11/04/2021 09:43:45",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Berlin",
        "Graduation completed",
        "Software engineer",
        "Often",
        "7",
        "try to run all tests on CI, and consider that as main source of truth",
        "Sometimes",
        "Sometimes",
        "Often",
        "avoid network access, avoid random data, avoid waiting for stuff... whatever is not in your control should be avoided",
        "no",
        "no",
        "no",
        "no",
        "locating code that depends on possible not deterministic features (network, time, randomness...)",
        "cool",
        "Asmir",
        "goetas@gmail.com"
      ],
      [
        "12/04/2021 00:22:12",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Hong Kong",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "1",
        "Relicate failed enviroment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Enviromental tests to ensure matching enviroment before running test",
        "Library check etc.",
        "no",
        "no",
        "no",
        "n/a",
        "Probably use a text description for non-deterministic tests, rather than video.",
        "Alan Knowles",
        "alan@roojs.com"
      ],
      [
        "12/04/2021 00:25:33",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Melbourne/Australia",
        "Dropout",
        "DevOps Engineer",
        "Sometimes",
        "5",
        "Teach the other user about Docker, and implement it as a CI/CD pipeline so it always has the same outcome.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Use Docker for coding environments, and use a CI/CD pipeline from my Git repo.",
        "Nope",
        "Nope",
        "Nope, I just do it manually",
        "I use Docker",
        "NA",
        "It isn't really something I've had to worry about, or applies to any of the projects I've worked with.",
        "Dean Lofts",
        "dean@deanlofts.xyz"
      ],
      [
        "12/04/2021 17:29:12",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Columbus, OH, USA",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "Look for potential causes (environment configuration, race conditions, etc.) that may be causing the test to behave differently, then refactor the test method to compensate for or eliminate these differences.",
        "Sometimes",
        "Often",
        "Often",
        "Be explicit with the arrangement of the tests and leverage test doubles to ensure that processes outside of the System Under Test (SUT) are not polluting the test.",
        "If tests fail intermittently when run either locally or in a CI pipeline, determine what is causing the test to fail and, if it's from outside causes, use test doubles or other approaches to ensure consistent results.",
        "Nothing formal, but \"there's a race condition in this test\" gets thrown around a lot.",
        "PHPStan and Psalm can be helpful in catching logical errors, but are not specific to non-deterministic tests. I suppose mutation testing (e.g. InfectionPHP) could also be effective, but I have not explored this.",
        "PHPStan and Psalm (see previous).",
        "Warning when items outside of the scope of the SUT are being evaluated, and recommend approaches to avoid these from being a factor.",
        "",
        "Steve Grunwell",
        "steve@stevegrunwell.com"
      ],
      [
        "14/04/2021 23:15:22",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Nashville, TN, US",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "10",
        "I try to isolate the variable part of the code that causes the failure and use a mock to ensure that the test is deterministic. If the code should run successfully during a failure state, then I create a mock that simulates failure to ensure the failure state in a deterministic way. One of the best ways to achieve this is to use dependency injection.",
        "Rarely",
        "Always",
        "Often",
        "I make extensive use of dependency injection and use mocks to mock as much as possible, except for the lines of code I am testing.",
        "I do not make use of it currently, but if I needed to test non-deterministic code, I might use the PHP library \"Infection\" to facilitate mutation testing.",
        "Mutation testing",
        "I have used PHP-Mock, which allows you to test non-deterministic PHP functions, such as time() and random_int().",
        "I regularly use PHPStan and Psalm to statically analyze my code for type correctness. This does not fully prevent non-deterministic tests, but it can help.",
        "Analyze code and identify functions and methods that might return values that later code paths may not be able to process.",
        "",
        "Ben Ramsey",
        "ben@benramsey.com"
      ],
      [
        "18/04/2021 23:51:40",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "5",
        "Extension checks, re-check composer packages and other dependancies, validate ini's are matching and PHP versions are equal. ",
        "Rarely",
        "Sometimes",
        "Sometimes",
        "Not in tests; however in CI/CD",
        "No",
        "N/a",
        "N/a",
        "N/a",
        "N/a",
        "",
        "Rama",
        "me@rexsdev.com"
      ],
      [
        "18/04/2021 23:52:46",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Montreal/Canada",
        "Master's degree completed",
        "Backend Developer / DevOps",
        "Rarely",
        "10",
        "Try to reproduce the error on the working machine",
        "Rarely",
        "Never",
        "Never",
        "I always isolate the thing I want to try and remove any link to external services/tools",
        "no",
        "no",
        "PHPUnit infection (Mutation testing)",
        "No",
        "Output the list of potential issues and a quick explanation of what could be the issue for the specific test",
        "",
        "",
        ""
      ],
      [
        "18/04/2021 23:58:13",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Toronto, Canada",
        "Undergraduate",
        "Software developer",
        "Often",
        "7",
        "1. Rule out any environment misconfiguration 2. Evaluate if the use of a non-determisitic test is correct/necessary 3. Rewrite the test such that it passes on both machines",
        "Often",
        "Often",
        "Rarely",
        "- CI - Deterministic thinking",
        "Monitoring them actively",
        "Dynamic tests",
        "No, just manual code review",
        "No",
        "Encourage the use of deterministic tests wherever possible (provide guidance on how to achieve this), bring attention to unintentionally non-deterministic tests",
        "Best of luck with your research!",
        "",
        ""
      ],
      [
        "19/04/2021 00:57:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Ottawa, Canada",
        "Master's degree in progress",
        "CTO",
        "Rarely",
        "10",
        "NDTs are useless.  They have to be solved rapidly before they ruin the whole test suite.",
        "Rarely",
        "Always",
        "Always",
        "Writing specs that respect LoD go a long way.  Isolation is important.  Fixture resets to prevent setup pollution.  After this, you're just eliminating randomness to remove NDT deps.",
        "This question doesn't make sense.",
        "No -- but funny.  At work, we call them GTs.  Garbage tests.  NDTs have no place in a proper test suite.",
        "We use Bamboo CI",
        "You can apply Mutators to test your test suite itself.",
        "I don't really need tools here.  Bamboo CI logs history, we parse for tests that lack rigor, and slate them for repair or replacement.  Tests span from phpunit, to phpspec, to Behat tests (the tests that most often cause these problems, are Behat tests)",
        "Honest feedback, it read as though you were crafting a commercial offering under the guise of an academic survey.",
        "",
        ""
      ],
      [
        "19/04/2021 03:37:01",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Ottawa, Ontario, Canada",
        "Graduation completed",
        "Web developer",
        "Never",
        "10",
        "There could be many external factors effecting the test of such nature. However I use containerized development environment such as Docker, which can element many external factors that can cause different outcome for same code. ",
        "Rarely",
        "Rarely",
        "Often",
        "Making sure the platform stays the same across all the environment and for all developers, Docker helps to implement it.",
        "There can't be silver bullet for all types of non-deterministic test issue. What I would like to see if the test depends on external factors such as host OS settings, hardware requirements or third party API, test result mention that specific dependent issue in fail message. ",
        "Not aware of that ",
        "Not that I know of",
        "Not that I know of",
        "Flags a warning message about external dependency ",
        "",
        "Dushyant Patel",
        "msg2dushyant@gmail.com"
      ],
      [
        "19/04/2021 06:44:05",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Regina, SK, Canada",
        "No secondary education",
        "Software developer",
        "Rarely",
        "8",
        "diagnose environmental differences",
        "Rarely",
        "Rarely",
        "Rarely",
        "none specifically, just internalized knowledge that explicitly non-deterministic test cases (like connecting to an API) are moreso testing the API connection than the validity of your code.",
        "no",
        "no",
        "no",
        "no",
        "dunno",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 07:37:32",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Mississauga, Ontario, Canada",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "1 - Check to see if they have all of the changes 2 - Investigate the output and determine the root cause 3 - Fix the root cause of the discrepancy",
        "Rarely",
        "Sometimes",
        "Always",
        "I push the api calls as far from my main code as possible, and then use mocks to avoid it in the non-specific tests.",
        "No",
        "no",
        "no",
        "no",
        "The ability to break dependencies/point them out.",
        "",
        "Andrew",
        "awjudd@gmail.com"
      ],
      [
        "19/04/2021 08:22:04",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Toronto/Canada",
        "Graduation completed",
        "Software Architect",
        "Sometimes",
        "10",
        "Collect the logs, and analyze the failing code visually to identify system/state dependent variance.",
        "Rarely",
        "Sometimes",
        "Often",
        "Granular isolation",
        "We tend to avoid non-deterministic test cases, but mocking the variable components. However, when not possible, we carefully generate the software state to make the outcomes predictable.",
        "state-volatile tests",
        "No",
        "No",
        "Detect system/state specific dependencies.",
        "Intriguing study. Why did you focus on PHP?",
        "Seva",
        "Seva.lapsha@gmail.com"
      ],
      [
        "19/04/2021 09:33:41",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Montreal, Canada",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Usually attach a debugger to see if I can find the point where it diverges, or add logging if it’s a race condition ",
        "Rarely",
        "Always",
        "Always",
        "Reproducible test fixtures and environments, special care around tests related to time",
        "I don’t understand the question",
        "Flaky tests",
        "No",
        "No",
        "Run multiple tests multiple times to detect non deterministic tests. Maybe linting or static analysis to detect common scenarios that can create this situation",
        "",
        "Samuel Schmidt",
        "samuel@dersam.net"
      ],
      [
        "19/04/2021 10:26:27",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Chicago, IL",
        "HS",
        "Software developer",
        "Sometimes",
        "10",
        "Examine possible causes like fixture data being manipulated in other tests & creating implicit dependencies between test cases",
        "Rarely",
        "Never",
        "Often",
        "best practices guide for devs",
        "No",
        "cursed tests",
        "No",
        "No",
        "A warning that highlights the problematic test(s) & states why they're non-deterministic would be great!",
        "",
        "Nick Evans",
        "nick.evans@northwestern.edu"
      ],
      [
        "19/04/2021 11:43:09",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Lancaster, OH, USA",
        "No higher education",
        "DevOps",
        "Rarely",
        "10",
        "attempting to reproduce the problem in my environment; then ask the other user for the output to determine what might be wrong; i can usually determine the problem that way",
        "Rarely",
        "Never",
        "Never",
        "none",
        "no",
        "\"tests with external uncontrolled dependencies\" would be a subset",
        "no",
        "no",
        "no idea",
        "",
        "",
        ""
      ],
      [
        "19/04/2021 13:57:26",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Resistencia/Argentina",
        "",
        "Software developer",
        "Never",
        "1",
        "1. Check if the other part have replicate the enviroment. 2. Check the imputs. 3. Replicate the other part actions.",
        "Never",
        "Never",
        "Never",
        "I Do create atomic tests for my code. Really small tests. ",
        "No",
        "No",
        "No",
        "No",
        "Don't know",
        "https://martinfowler.com/articles/nonDeterminism.html",
        "Ariel",
        "arieltoledo@gmail.com"
      ],
      [
        "19/04/2021 14:09:06",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "10",
        "I ask for more details, like the other person's enviroment.",
        "Rarely",
        "Rarely",
        "Always",
        "I set a seed for random outputs.",
        "Not besides setting a seed for random functions.",
        "No",
        "NO",
        "No",
        "No",
        "Wish you best of luck!",
        "Patricio Tarantino",
        "patriciotarantino@gmail.com"
      ],
      [
        "19/04/2021 15:23:29",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "7",
        "check infrastructure dependencies and debug the test in the failed environment",
        "Sometimes",
        "Often",
        "Often",
        "trying to mock most of infra dependencies",
        "No",
        "No",
        "No",
        "No",
        "detect posible non-deterministic tests",
        "",
        "Piero Recchia",
        "piero.recchia@gmail.com"
      ],
      [
        "19/04/2021 15:26:28",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "San Francisco, Córdoba, Argentina",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "2",
        "I would consider environment differences and try to reproduce the error using the same dataset, or catching the non-deterministic factor by doing an static code review over that test method.",
        "Sometimes",
        "Often",
        "Always",
        "1. Deactivate curl primitives in order to prevent unintentional connections to third party systems. 2. Wrap undeterministic factors generally expressed as PHP primitives like rand() calls, new DateTime('now'), etc. Wrapping those behaviours into mockable dependencies.",
        "No, I don't use any automatic routine.",
        "xUnit Patterns define this anti-pattern as \"Erratic tests\"",
        "No",
        "No",
        "Detection and prevention I think",
        "",
        "Carlos Frutos",
        "carlos@rooftop.dev"
      ],
      [
        "19/04/2021 17:51:23",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Ciudad Autónoma  de Buenos Aires",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "5",
        "Trying to reproduce the same steps on my computer to generate the error.",
        "Sometimes",
        "Often",
        "Sometimes",
        "I try to generate a file with different options. For example, if I have to communicate to an API, what I am trying to generate is possibly a JSON with which the application should return.",
        "-",
        "-",
        "-",
        "-",
        "Trying to find as many errors as possible, although if it is not mastered perfectly, it could become a big problem",
        "",
        "Martín",
        "Dell'Oro"
      ],
      [
        "19/04/2021 18:10:26",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "rio cuarto",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "10",
        "check the code with partner",
        "Sometimes",
        "Never",
        "Never",
        "mock apis",
        "no",
        "no",
        "no",
        "no",
        "detection",
        "",
        "cristian",
        "cristianaalvarez@gmail.com"
      ],
      [
        "19/04/2021 18:11:54",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Argentina - Buenos Aires",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "Maybe different OS, or different version of php, maybe a failure of resources of the OS",
        "Rarely",
        "Rarely",
        "Rarely",
        "IDK",
        "No",
        "No",
        "No",
        "No",
        "IDK",
        "I tried to help, but i'm not very familiar with tests, sorry ! i try to do all my best.",
        "Sandro",
        "sdezerio@gmail.com"
      ],
      [
        "19/04/2021 20:26:58",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Los Angeles, USA",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "try to reproduce the issue locally",
        "Sometimes",
        "Rarely",
        "Rarely",
        "Mocking response, Double objects, avoid calling externals APIs except when there's no options",
        "No",
        "No, is the first time I saw they have a name",
        "No.",
        "No.",
        "Detect them before they run, more accurate message on detection (specially within CI tools)",
        "It sounds interesting",
        "",
        ""
      ],
      [
        "19/04/2021 22:50:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Buckley, WA, United States",
        "Undergraduate",
        "Software developer",
        "Never",
        "10",
        "Make certain that the machine environments are as similar as possible, run tests in CI, and check the test itself for logic flaws",
        "Never",
        "Never",
        "Always",
        "I write extremely granular tests, often including a test intended to falsify the previous test if possible",
        "No",
        "Broken",
        "Writing tests which run through multiple possibilities",
        "Writing tests granularly, writing palindromic tests",
        "Start up a vm, run tests, export results, and repeat for many variant setups.",
        "I don’t really have much to say",
        "Casey Parker",
        "parker.casey@pm.me"
      ],
      [
        "20/04/2021 11:08:34",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Buenos Aires, Argentina",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "5",
        "Check dependencies, libraries and programming language versions between both machines.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Try to evaluate as much as try/catch scenarios I can.",
        "Try to evaluate as much as try/catch scenarios I can.",
        "No.",
        "No.",
        "No.",
        "Detecting non-deterministc scenarios on developed software.",
        "This is a very interesting study that made me to research on computing theory I have studied some years ago to have a deeper understanding for this survey.",
        "Guillermo Ramiro Maquieira",
        "guimaq@gmail.com"
      ],
      [
        "20/04/2021 12:21:32",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Argentina",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "6",
        "I double-check:  - If deployment or installation of the project was done properly in the other machine.  - If the codebase is correct (for example, make sure the git branch is the correct one and no other code changes were made that could affect the results).  - If the configuration of the project is correct (for example, environment variables that could alter the application behavior).  - If external required resources are available in the same way on the second machine (APIs, databases, any connectivity needed, permissions required, IPs allow-listed, etc).  - If the test could be affected for having different hardware resources (for example, requiring more time to not timeout in a slower machine, requiring more available RAM, etc).  - The versions of the running environment to see if that could affect the compatibility (PHP version running, OS type and version, dependencies versions).   Finally I would check the steps of the failing test and probably comment/remove temporarily some of them to find out what's exactly the problem.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "I use equivalent but \"mocked-up\" interfaces to replace the resources that could not be available.  For example, I create classes/code with the same interface that the code used to manage real APIs or databases. The use that in the tests to make them independent from the connectivity or other resources required.  In other cases where that's not possible, I run some code as a part of the test battery that checks for the availability of those resources that could not be available. Then, the test itself could be classified as \"skipped\", instead of mark it as failed.  And some other times (usually when there's no enough time for a better solution) I simply try to make sure the requirements and external conditions of the environment where the tests are ran will be the best. For example having a stable environment for this purpose.",
        "I don't.",
        "Actually no, but I know that frequently the \"integration tests\" are a sub-set of the non-deterministic ones.",
        "I don't.",
        "I don't.",
        "From the top of my ming, for detection and prevention I can think in these ideas:  List the points (test steps, code lines, etc) that could potentially have different results with the same entries and code. Similar to what code linter tools do. For example show recommendations or warnings when the tests use: - Random generated information that could make the test behave differently. - Date-time based tests that could fail depending on when are they ran. - Access to external resources such as the network (using an API for example). etc.  For prevention I'd also think in a library with some util methods to verify the availability of external required resources. For example, a library with methods like \"checkInternetConnectivity\", \"checkAvailableRAM\", etc. So the test developer can use them easily and the tool can suggest to use them when needed.  I also think in having a tool where resources could be registered (for example, an API or database) in a global part of the testing code, and the on each testing scenario the developer could declare with annotations or however those resources that the scenario requires.  For correction:  Provide an OOTB mocked-up for those interfaces that are usually used to access the network. For example a replacement for the class SoapClient used to request SOAP services. Then encourage the developer to implement those methods/requests done in the tests, but with mocked data.  I'd also expect the tool/s to have the possibility to run these verifications without running the tests.  ",
        "Even when I'm not specialized in testing at all, this study resulted very interesting to me because I have seen scenarios with the non-deterministic problem, and also why not to tell, because I'm generally interested in the topics related to software engineering.  I also think that this study could be extended to be more general and not specific for the PHP language, except of course for the existing tools questions.  I hope my answers help, and even when I'm not developing in PHP for the time being, I'd also like to hear about the results.",
        "Daniel Duarte",
        "danieldd.ar@gmail.com"
      ],
      [
        "20/04/2021 16:25:06",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Richmond, Canada",
        "High school student",
        "Student",
        "Never",
        "5",
        "I check for differences in environments. It would depend on the error thrown. ",
        "Sometimes",
        "Rarely",
        "Rarely",
        "None",
        "I use CI/CD such as Travis for testing Python. ",
        "No",
        "CI/CD tools such as Travis perform tests on multiple environments. ",
        "Linters often detect errors ahead of time. ",
        "Detection, prevention and correction",
        "I'm not too familiar with what a non deterministic test is so I Googled it. ",
        "Kevin",
        "Kevinlu1248@gmail.com "
      ],
      [
        "20/04/2021 19:01:02",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Portland, OR USA",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "2",
        "Check the environment and the build to see what is different.",
        "Rarely",
        "Rarely",
        "Often",
        "Mock external dependencies. Segregate tests with external dependencies.",
        "Check that dependency is available, then only run tests if dependency is available.",
        "Integration tests.",
        "no",
        "no",
        "Configure with a list of dependencies, check dependencies and flags tests if dependencies are unavailable.",
        "In general non-deterministic tests are to be avoided.",
        "Dan Revel",
        "dan@nopolabs.com"
      ],
      [
        "21/04/2021 02:29:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Montreal, Canada",
        "Undergraduate",
        "Software engineer",
        "Rarely",
        "10",
        "Try to see if there was a difference in our local environments, easy fix is usually docker",
        "Rarely",
        "Rarely",
        "Rarely",
        "I don’t come across them often and so i don’t take many precautions against them",
        "None",
        "None",
        "None",
        "None",
        "N/A",
        "",
        "",
        ""
      ],
      [
        "21/04/2021 07:37:14",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "ShengZheng/China",
        "Master's degree completed",
        "Software developer",
        "Sometimes",
        "2",
        "Check whether there are differences in the environment",
        "Rarely",
        "Rarely",
        "Rarely",
        "Keep the environment unified",
        "no",
        "no",
        "no",
        "no",
        "no",
        "no",
        "YeZi",
        "875307054@qq.com"
      ],
      [
        "21/04/2021 11:26:15",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Buenos Aires / Argentina",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "7",
        "Asking under what conditions de test was run",
        "Rarely",
        "Often",
        "Often",
        "always test with and without conection to apis and internet",
        "No",
        "No",
        "No",
        "No",
        "Tips for scenarios that the developer does not always consider",
        "",
        "Junior Ayala",
        "elessar303@gmail.com"
      ],
      [
        "21/04/2021 13:06:19",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Toronto/Canada",
        "Graduation completed",
        "Team Lead",
        "Sometimes",
        "8",
        "Check the machine's code version,  then the development setup,  the required external services, including VPN",
        "Sometimes",
        "Never",
        "Rarely",
        "Document the exceptions in KBs",
        "No",
        "No",
        "No",
        "No",
        "Standardized virtual dev environment, system check before starting the testing batch",
        "Congratulations for your initiative. ",
        "Humberto Ribeiro de Souza",
        "humbertosouza@outlook.com"
      ],
      [
        "23/04/2021 20:35:59",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Squamish, BC Canada",
        "Master's degree completed",
        "Secondary Teacher and k-12 sector technologist",
        "Never",
        "7",
        "I do not do this.",
        "Rarely",
        "Rarely",
        "Rarely",
        "Good logic? Screening inputs for possibility",
        "nope",
        "nope",
        "no",
        "no",
        "Second order tests that asses output based on known-result input.",
        "",
        "Evan Sharp",
        "ego@evansharp.ca"
      ],
      [
        "24/04/2021 10:51:31",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Montreal/Canada",
        "Master's degree completed",
        "architect",
        "Always",
        "8",
        "isolate the test to determine what makes is a potentially weak test",
        "Often",
        "Often",
        "Often",
        "better understand the dependencies and properly locate the tests that have external dependencies. When possible use contract-based testing and leave those integration tests to a very minimum",
        "nothing other than the one reported above",
        "fragile tests",
        "pact.io",
        "no",
        "help me reduce the dependency on such tests or at least better identify those",
        "can you share the results of the survey?",
        "Mario Bittencourt",
        "mbneto@gmail.com"
      ],
      [
        "25/04/2021 05:34:54",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "China",
        "PhD completed",
        "Software developer",
        "Often",
        "8",
        "I ensure the environment is exactly the same as the one in my machine. Create the same environment, the same condition and run the test again. This include making sure that network connection is activated. When the environments match, and the tests still failed. I looked at external dependencies in the test code.",
        "Often",
        "Sometimes",
        "Always",
        "Avoid any non-deterministic call in the test code. That is, we must avoid calls to some function (such as network) or randomess in the test code. Except if random is part of the code being tested.",
        "I don't have any sequence of steps to execute",
        "No aware",
        "Non",
        "Non",
        "N/A",
        "One can override native PHP function that create randomness and avoid non-deterministic test",
        "",
        ""
      ],
      [
        "25/04/2021 12:25:29",
        "I agree",
        "7 - 10 years",
        "Up to 1 year",
        "Santa Fe, Santa Fe, Argentina",
        "Undergraduate",
        "Software developer",
        "Sometimes",
        "7",
        "I'll do docker container to have the same test environment and try not to rely on external sources",
        "Sometimes",
        "Sometimes",
        "Often",
        "Mock external services if I cannot reach them",
        "Api services calls, such as maps, firebase or database related",
        "I don't think so",
        "Not yet",
        "Waiting to fail xD",
        "Harcoded links specially",
        "I'm really looking forward to know about the results of this research! :)",
        "David Maximiliano Sosa",
        "maxi3390@gmail.com"
      ],
      [
        "25/04/2021 13:33:10",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Virginia Beach, USA",
        "High School",
        "Software engineer",
        "Rarely",
        "3",
        "debug with error logging",
        "Rarely",
        "Never",
        "Rarely",
        "extra logging for possible failures",
        "no",
        "no",
        "no",
        "no",
        "identify methods that could have non deterministic results ",
        "",
        "Zak Rabe",
        "zakrabe@gmail.com"
      ],
      [
        "25/04/2021 14:18:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Matawan, New Jersey, United States",
        "Undergraduate",
        "Platform Engineer",
        "Sometimes",
        "8",
        "Find out what conditions were different on the other machine. Whether it was a configuration issue, or an environment issue, or an overall logic issue.",
        "Rarely",
        "Rarely",
        "Rarely",
        "When writing the tests I make sure if I change something in the particular bit of code it tests. The test will completely fail. I do this by actually changing the code to make the test fail.",
        "Do not have one, at this point in time",
        "I am not",
        "We do not use any tool that tests for these things. A code review should catch these.",
        "We do not use any tool that prevents these things. Aside from code reviews.",
        "When the tests are written they should have a through code review.",
        "Seemed like there were a lot of the same questions. Aside from that seemed good.",
        "Vinnie Marone",
        "vinnie.marone35@gmail.com"
      ],
      [
        "25/04/2021 15:55:58",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Salt Lake City UT USA",
        "Master's degree completed",
        "Software engineer",
        "Never",
        "10",
        "Inquire about difference in environment",
        "Sometimes",
        "Never",
        "Never",
        "Run in a controlled environment",
        "No",
        "No",
        "No",
        "Not explicitly, just control the test environment",
        "Sufficient specification of test environment",
        "Non-determinism is usually a function of the environment not the software",
        "",
        ""
      ],
      [
        "25/04/2021 16:15:04",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Memphis, Tennessee, US",
        "PhD completed",
        "Software Consultant",
        "Sometimes",
        "5",
        "Check for differences in machine configuration",
        "Often",
        "Often",
        "Often",
        "Full preparation of host machine to specification",
        "Varies",
        "system configuration errors",
        "all by hand",
        "all by hand",
        "You need to be alert",
        "",
        "Greg Blumenthal",
        "greg@gmbs-consulting.com"
      ],
      [
        "26/04/2021 06:24:34",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Finland & France",
        "Graduation completed",
        "Designer Developer",
        "Never",
        "5",
        "Start digging apache/php settings",
        "Never",
        "Rarely",
        "Rarely",
        "None",
        "None",
        "None",
        "None",
        "None",
        "Good question! Usually people want code to be fixed automatically.",
        "This was easy! Probably knew a little too little of the subject.",
        "Jonatan Eriksson",
        "jonatan@tsto.org"
      ],
      [
        "26/04/2021 06:39:19",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Guangdong China",
        "Master's degree in progress",
        "Software engineer",
        "Sometimes",
        "3",
        "check out if there is any evironment difference between two machine",
        "Sometimes",
        "Often",
        "Rarely",
        "it is time-comsuming",
        "environment differ",
        "no",
        "no",
        "no",
        "run fast and easy to use",
        "this study make me notice the non-deterministic test area",
        "Gary",
        "nutto.pan@gmail.com"
      ],
      [
        "26/04/2021 13:07:21",
        "I agree",
        "More than 10 years",
        "Up to 1 year",
        "Pittsfield MA",
        "Master's degree completed",
        "Software developer",
        "Never",
        "5",
        "Give up and test the component manually. (I'm being honest. This is not ideal, but due to limited budgets on our client projects, this is usually what happens)",
        "Rarely",
        "Never",
        "Never",
        "n/a",
        "no",
        "no",
        "no",
        "no",
        "n/a",
        "not really applicable to our normal workflow... sorry ",
        "Peter Wise",
        "peter@squarecandy.net"
      ],
      [
        "27/04/2021 04:21:13",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Mainz/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "5",
        "Verify the test environment. We use docker to have a very similar environment in a team. Also the configuration is managed.",
        "Sometimes",
        "Rarely",
        "Never",
        "We try to mocks for external interfaces. The used test framework provides functions to do that.",
        "It depends about we are talking here. If it's a unit test, we try to prevent that behavior. For functional tests it's ok to call a real interface (with all the down sites).",
        "Functional testing. Maybe acceptance testing (depending on the definition).",
        "no",
        "no",
        "At least a static code check to find calls to external resources. Maybe a plugin for PhpStorm.",
        "Interesting. Never thought so much about non-deterministic tests.",
        "Christian Münch",
        "christian@muench-worms.de"
      ],
      [
        "27/04/2021 04:54:33",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Duesseldorf/Germany",
        "Undergraduate",
        "Software engineer",
        "Sometimes",
        "8",
        "Compare machines and execution environment (php version, extensions, etc), code state (modifications, revision). If that does not solve it, run a step-debugger or do poor-mans-debugging with var_dump.",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Run tests in isolated environments, like docker, with restrictions on resources like network or disk.",
        "No.",
        "No.",
        "Generally not, but linters can be used to detect the usage of ext/curl and other subjects.",
        "PECL/runkit to mock php internals.",
        "* Detect: output a machine readable format for CI integration * Prevent: If configured, let tests fail for having non-deterministic side-effects * Correction: No tool should correct this on its own. It may suggest alternatives, though",
        "All the best and good luck!",
        "",
        ""
      ],
      [
        "27/04/2021 04:57:11",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Berlin",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "5",
        "Debug on that other machine. Reproduce. Fix.",
        "Never",
        "Never",
        "Never",
        "None, I hardly have that case.",
        "No.",
        "No.",
        "No.",
        "No.",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:29:10",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Lübeck/Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "9",
        "Check the versions of anything involved. Check again locally. Check for any changes not (correctly) committed to the code. Debug the failing test.",
        "Rarely",
        "Sometimes",
        "Often",
        "Most of the time I just make sure the test is not relying on external factors (time passing, network being available, randomness involved, …)",
        "No…",
        "🤷‍♂️",
        "No",
        "No",
        "🤷‍♂️",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 05:58:44",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Münster/Germany",
        "Graduation completed",
        "Software developer",
        "Rarely",
        "8",
        "Checking the dependencies (e.g. installed libraries, composer packages, software versions).",
        "Rarely",
        "Never",
        "Never",
        "Common error handling (e.g. try-catch around the external request).",
        "/",
        "/",
        "/",
        "/",
        "/",
        "",
        "Kai Neuwerth",
        "kai@neuwerth.me"
      ],
      [
        "27/04/2021 07:51:01",
        "I agree",
        "More than 10 years",
        "2 - 3 years",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Often",
        "9",
        "Find the difference between his and mine setup, if there is none, check the test validity.",
        "Rarely",
        "Never",
        "Rarely",
        "Good Test Design and good Environment Preparements",
        "See https://ruby.sadi.st/Heckle.html and https://infection.github.io/guide/ (Mutation Testing)",
        "No",
        "https://infection.github.io/guide/",
        "No",
        "https://infection.github.io/guide/",
        "",
        "Herbert Maschke",
        "thyseus@gmail.com"
      ],
      [
        "27/04/2021 08:17:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Würzburg / Germany",
        "Undergraduate",
        "Software developer",
        "Never",
        "5",
        "Check the test and / or the code",
        "Never",
        "Never",
        "Never",
        "None :-)",
        "no",
        "no",
        "no",
        "no",
        "dont know?",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 08:43:48",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Dresden, Germany",
        "Bachelor's degree completed",
        "I was a software developer, then gradually became more of an software engineer and nowadays am a consultant and manager for software development projects.",
        "Sometimes",
        "7",
        "I'd search for differences in the runtime environments to figure out, which external factors could have influenced the test. Then I try to improve the test in order to check those dependencies as well.",
        "Sometimes",
        "Rarely",
        "Often",
        "For each test I try to figure out if there are any dependencies from external factors. If there are, I write additional tests explicitly checking for those factors.",
        "If the non-determistic behaviour is intrinsic, I would not write a test expecting a deterministic result, but just perform a plausability test instead.",
        "No.",
        "No.",
        "No.",
        "That's hard to say. I'd expect the tool to at least recognize external dependencies, but that would be really hard to do, I guess.",
        "Very interesting topic! Good luck with your degree!",
        "Sebastian Meyer",
        "https://github.com/sebastian-meyer"
      ],
      [
        "27/04/2021 08:52:26",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "self-educated",
        "Software Quality Consultant",
        "Never",
        "10",
        "That only happens, if I rely on a dependency that is not explicitely stated in composer.json but installed locally. In that case, I fix composer.json to also reflect that dependency.",
        "Never",
        "Never",
        "Always",
        "Mocking external dependencies. External services can always be mocked using Docker containers.",
        "I completely avoid non-deterministic tests, so there's never a need to execute them.",
        "Those tests are simply broken.",
        "No",
        "No, just code review.",
        " I personally don't need such a tool, it is superseeded by my awareness. Nevertheless, I know people who should use it ;)  Since mock genereation is not the easiest task, a mock generator could be useful, i.e., create a Docker container with senseful data that mimics the original service just as much as needed by the tests. The mock is generated once, when the connection is available, but is then independent from any outbound connection.",
        "I'm interested in the results of the survey. Please send it to nbraczek@bsds.de, if possible.",
        "Niels Braczek",
        "nbraczek@bsds.de"
      ],
      [
        "27/04/2021 09:20:13",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Duisburg/Germany",
        "Fachabitur, lower as university + trained as IT specialist in application development",
        "Software developer",
        "Rarely",
        "8",
        "Telling him \"it works on my machine\". Joke aside, inspectiong the code and triying to find the differences of his and my machine and envioment which could affect the test code.",
        "Sometimes",
        "Rarely",
        "Sometimes",
        "Use a general \"enviroment\" or general test before testing the code and/or write detailed error messages/logs why the test failed.",
        "phpunittests? Not sure what is meant, so \"no\".",
        "No",
        "No",
        "No",
        "Checking the enviroment (like my general test)",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 10:06:57",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin/Germany ",
        "Undergraduate",
        "Engineering Lead ",
        "Sometimes",
        "10",
        "I would typicslly step through the test case with a debugger. I'll be likely looking for branching (if, switch, etc) logic based on random, time or other  external resources. (In other languages data races are just as common)",
        "Rarely",
        "Rarely",
        "Often",
        "Helper classes which use external sources by default but let tests override it",
        "No",
        "No",
        "Not in PHP.",
        "No.",
        "I'd expect them to listen potential issues. I'd probably run them locally on commit.",
        "",
        "Peter Aba",
        "peter@peteraba.com "
      ],
      [
        "27/04/2021 10:31:42",
        "I agree",
        "7 - 10 years",
        "7 - 10 years",
        "Berlin/Germany",
        "Graduation completed",
        "Engineering Manager",
        "Often",
        "6",
        "I compare our environment details (configurations, environment variables) and connectivity with external services involved.  I always advise my teams to use a common environment by making use of Docker/docker-compose or Virtual Machines.",
        "Rarely",
        "Rarely",
        "Often",
        "I encourage TDD practices (which builds majority of tests) using Unit tests only. Unit tests by convention must contain no I/O and rely on mocks where necessary.  Date/Time units that need to be tested should use \"relative time\" as much as possible in order to avoid time bombs such as new years eve build breaks.",
        "I usually understand non-deterministic tests as tests that connect components from outside the software's boundaries (reading from a disk, network..). So normalising the environment using VMs and common shared configurations is already a good start.  Sharing databases and services is also ideal and, when not possible, make use o migrations and conventions that make sure such tests will only use data provided by such migrations.  Another option that I use take is to spin up fake services that will return the expected response (force a response HTTP 2xx, 4xx, timeout exceptions...)",
        "No",
        "No",
        "No. As I mentioned before, I often use a mix of conventions and shared environments in order to reduce the amount of non-deterministic tests.",
        "Thinking of I/O as the source of all evil, I can envision a tool that monitors, takes snapshots and replays or mock network transactions for specific tests.  This way a test framework (such as phpunit or pest) may have different test profiles for each test in a test case. Potentially using a common \"given\" method (thinking of \"given/when/then\" testing approach) or annotations.",
        "Questions are very interesting and I'd be keen to read the output of your research. I must say that the video showing an example of non-deterministic tests created a huge bias on my responses, because I mostly think of your network exception example. I hope that's intentional.  I believe not differentiating test types can mislead people (unit/integration/e2e tests to name a few) and I hope the lack of guidance there is intentional.",
        "Níckolas Da Silva",
        "nawarian@gmail.com"
      ],
      [
        "27/04/2021 10:36:44",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Berlin, Germany",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "4",
        "For unit testing: - Check if such a test relies on external dependencies - Replace these hard dependencies (if any) with interfaces - Mock or stub these interfaces  For integration tests: - Add all stateful dependencies to docker containers - Make sure to rely on anything else but containers ",
        "Rarely",
        "Never",
        "Sometimes",
        "For Unit tests: never rely on stateful dependencies For Integration tests: Docker/containers for stateful dependencies",
        "-",
        "-",
        "-",
        "Docker",
        "-",
        "",
        "",
        ""
      ],
      [
        "27/04/2021 12:59:01",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Stuttgart Stralsund ",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "9",
        "Debug it! ",
        "Rarely",
        "Rarely",
        "Often",
        "Make e.g. sure external deps are mocked ",
        "...",
        "No",
        "No",
        "No",
        "No",
        "",
        "Phil ",
        "Phiamo@gmail.com "
      ],
      [
        "27/04/2021 20:25:09",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Germany",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "3",
        "Inspect the environment and examine the logs. ",
        "Often",
        "Never",
        "Never",
        "Depending on what type of tests I’m writing. Unittests have no external dependencies and work within a clearly defined scope. Functional tests or integration tests are by nature often non deterministic. ",
        "Don’t get this question. ",
        "Infected tests ",
        "No",
        "No",
        "/",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 01:16:37",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Düsseldorf/Gernany",
        "Undergraduate",
        "CEO (I used to be a developer, though)",
        "Rarely",
        "7",
        "Find the error in the tests",
        "Rarely",
        "Always",
        "Always",
        "Code-Reviews are done before code gets merged",
        "phpunit executes the tests, but I think I don‘t understand the question.",
        "Testing external dependencies should be done in integration tests. The integration tests may fail due to missing conbectivity and are re-run multiple times to verify the integration works",
        "no",
        "no",
        "detection, I guess?",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:50:25",
        "I agree",
        "7 - 10 years",
        "4 - 6 years",
        "Pasig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "I evaluate the environment the test was performed on, specifically if there are huge differences in its core stack (was the test ran on a Linux environment or a Windows one?) I also extract the exact error to determine the next course of action.",
        "Always",
        "Always",
        "Often",
        "We usually assume through policy that a test environment MUST meet the expectations in the specification documents of the project. It is well-clarified throughout the team that such differences in expected environments will require a deeper analysis of the encountered errors and will be a significant cause of delay.",
        "None",
        "None",
        "None",
        "None",
        "Well-written test cases to clearly report back what caused the non-deterministic test to fail.",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 02:58:48",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Makati, Philippines",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "10",
        "Investigate",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mock the dependencies and use test or sample data",
        "PHPUnit",
        "Not aware",
        "Not aware of any tools on this",
        "Not aware of any tools on this",
        "Not sure",
        "",
        "Alexander Torrijos",
        "artorrijos@gmail.com"
      ],
      [
        "28/04/2021 03:24:15",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Germany",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "6",
        "1. rerun the test. 2. check versioning /device differences 3. debug the test",
        "Rarely",
        "Rarely",
        "Never",
        "None.",
        "I sometimes have to make async, external api calls and then just wait for a timeout. ",
        "no",
        "maybe SonarQube?",
        "maybe SonarQube?",
        "usual CI, with build features, code analysis, and adaptable to many platforms",
        "Tho I know what SW-Testing (and TTD) is, I rarely use it in personal projects (when I'm the only contributor anyway) which is quite often. Also, I know and worked with PHP for some time, but for sure wouldn't call me a PHP-expert and I never even wrote a single test in PHP.",
        "Henrik Storch",
        "thisisthefoxe.dhbw@gmail.com"
      ],
      [
        "28/04/2021 03:43:23",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Stuttgart, Germany",
        "Master's degree completed",
        "Software engineer",
        "Rarely",
        "8",
        "Investigate the error on the other machine. Try to reproduce the issue locally. Ensure that the underlying problem is understood. Try to make the test deterministic or if impossible try to determine the factors involved and skip the test if problematic condition is detected.",
        "Rarely",
        "Sometimes",
        "Often",
        "Reduce external dependencies, esp. operating system, filesystem, etc.",
        "Not sure what's meant with this question",
        "randomly failing tests",
        "No.",
        "No.",
        "Detect problematic use of functions that may cause non-deterministic behaviour. ",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 04:14:44",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Barcelona/spain",
        "Graduation completed",
        "Software developer",
        "Sometimes",
        "5",
        "I would adk him to show me the code",
        "Rarely",
        "Rarely",
        "Rarely",
        "External dependencies are wrapped in a new class or i add general exception catching for the call",
        "No",
        "No",
        "No",
        "No",
        "No idea",
        "Interesting topic",
        "",
        ""
      ],
      [
        "28/04/2021 04:37:42",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Olongapo",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "1",
        "use docker, and mock api test",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Just use Docker, and Mock the Api",
        "None , I just use my own method of test driven development , And i Do  run my code in 3 platform mac, windows and linux.",
        "none",
        "github workflow now can run test on all platform making sure your test pass in all platform",
        "NOne",
        "None",
        "",
        "Uriah",
        "codeitlikemiley@gmail.com"
      ],
      [
        "28/04/2021 05:01:18",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Bonn Germany ",
        "Master's degree completed",
        "Software engineer",
        "Always",
        "7",
        "Find out why this happens. Than the code to make the test deterministic. If that is not possible, for example like in your video, create a second test, that tests against a mock or a stub, so that one is deterministic. Then use the other test in a different testset, that runs against the third party application, to check, where the api still works. Usually these tests have a rerun possibility. The deterministic test set should never fail, the other one could. ",
        "Sometimes",
        "Sometimes",
        "Sometimes",
        "Mocking and stubbing, predetermined test data, e.g.",
        "E sometimes use retry mechanisms, and in your video example those tests would test the Internet connection before running the test, so that we know, that was the cause for the failure. ",
        "Flaky tests",
        "No. ",
        "Not automatically. Some people have rerun mechanisms for their tests, but I do not like those automated Nachsaisons, because it makes you not taking care. ",
        "Showing known causes",
        "I would like to see your resulting paper please, falk@kuehnel.du",
        "Falk Kühnel",
        "falk@kuehnel.eu"
      ],
      [
        "28/04/2021 05:11:34",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Passau/Germany",
        "Master's degree completed",
        "Hacker / Software hacker / Hacker aka tester/debuger/developer/creator",
        "Sometimes",
        "7",
        "1st) check configs, 2nd) get screen sharing online",
        "Rarely",
        "Rarely",
        "Rarely",
        "don't do too much in one test, do many tests based on just a few.",
        "-",
        "-",
        "-",
        "-",
        "should be plugin for phpstorm and for the other idea group like webstorm",
        "-",
        "",
        ""
      ],
      [
        "28/04/2021 05:53:04",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Taguig City, Philippines",
        "Graduation completed",
        "Software engineer",
        "Rarely",
        "6",
        "read the error message if available or check if the another machine and my machine has same version of php ",
        "Rarely",
        "Rarely",
        "Often",
        "run unit test to locate the non deterministic code and revise it",
        "no",
        "no",
        "no",
        "no",
        "cpu profiler",
        "sorry, some answers are not substantial",
        "Frex Cuadillera",
        "fcuadillera@gmail.com"
      ],
      [
        "28/04/2021 06:17:52",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "3",
        "Docker",
        "Often",
        "Rarely",
        "Rarely",
        "Include as input whatever can change in the environment that makes the test deterministic",
        "N/a",
        "None",
        "None",
        "Docker and containerization",
        "Don't know",
        "Good luck",
        "Claude",
        "claudekirke@gmail.com"
      ],
      [
        "28/04/2021 06:47:20",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Germany Rosenheim",
        "Graduation completed",
        "Senior Backend Developer, Lead Product Developer",
        "Rarely",
        "8",
        "Identify and resolve the differences between the two test environments.",
        "Rarely",
        "Rarely",
        "Often",
        "Replace external APIs with local dummy APIs to create deterministic API responses/behavior (mostly based on docker)",
        "No",
        "\"Snowflake Tests\": They will break over something rather irrelevant or sensitive external condition. These are tests that will fail often in your pipeline and they will be successful if rerun.",
        "No. Sometimes our CI/CD Pipeline will break for no reason, which is an indicator for such (bad) tests.",
        "We don't test or rely on external resources. It's good practice to Mock/Stub the parts of your code that rely on external resources. PHPUnit is used to create Mocks/Stubs.",
        "The tool should detect if any external resource is used, identify the protocol, request and response contents and format and automatically derive a stub, which can be used to replace the external call. This information must be exportable as file to be commited with the tests and used by others to use the tool and the configuration to run the tests against the mocked API of the tool, not the Live-Api. Nice to Have: An UI to modify the detected reponses",
        "Good luck",
        "",
        ""
      ],
      [
        "28/04/2021 07:39:30",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Philippines",
        "Master's degree in progress",
        "Solutions Architect",
        "Rarely",
        "3",
        "Determine the similarity and difference in test execution environment",
        "Rarely",
        "Rarely",
        "Always",
        "With defensive coding practices, have the code define and ensure satisfaction of requirements before executing their function.",
        "No, it's a bad practice",
        "No",
        "No",
        "Rather than a tool, it's basic coding practice to ensure all requirements for success of your code is in place.",
        "Detection of dependencies to functions beyond the current system's control, but paradoxically it means everything",
        "The term 'non-deterministic test' is a misnomer, there may be no changes in the code, but we have observable and remediable changes on parameters or environment variables (i.e. internet connection) beyond control of the software that the PHP code depends on. ",
        "Tito Mari Francis Escaño",
        "titomarifrancis@gmail.com"
      ],
      [
        "28/04/2021 08:56:15",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Manila/Philippines",
        "Graduation completed",
        "Development Manager",
        "Often",
        "10",
        "Usually, discuss the issue with the developer and advise for mitigation. Sometimes, we also incorporate it already during brainstorming / grooming and discuss that this should have been included already in the beginning and not on the end.",
        "Sometimes",
        "Often",
        "Often",
        "We make as much realistic scenarios as possible. Also, on the code level, we tend to increase the support of the previously encountered scenarios and have it applied on future development.",
        "One is to setup automated testing mechanism being executed on regular / daily basis. This way, we can easily catch the potential issues during the execution and compare on the last result. From there, we can investigate / dig further what may caused it and make the necessary adjustment so that it will not happen again on the next run.  In addition, regular code analysis of both test case and also the main code itself is beneficial as you may not know that somewhere before or down the line, an incorrect argument or method may have caused the non-deterministic test.  Another one is to increase the test suites. Granted that one scenario is not enough but as mentioned, once we encounter the issue somewhere, it is automatically added on the list to be tested and have it incorporated on the test case and also on the code.",
        "Usually, we do isolation as sometimes, the application on one environment only shows the issue as compare to others. Once we isolate the application in question, we perform the test, either automated or manual, so that we can have proper verification that we need. Since its already isolated, we tend to perform other change of environment (like pretending of slow connection and like) as that shows a different side of story as well.  In relation to isolation, we tend to create a different test suite so that we can make sure that during execution, it will not be that invasive unlike the usual test suite and can be executed multiple times in different scenarios.",
        "Not that I know of specifically as we tend to rely on collective usage and adapt as we go along.",
        "Probably it can be covered at some point by code analysis like SonarQube. Because with SonarQube, its not just the code is being scanned, but also the potential coverage and also some duplicates of the test cases generated.",
        "I guess would be able to cover certain scenarios that usual testing won't be able to cover. Probably intelligent enough to advise that certain issue can be achieved by this scenario and so on.",
        "Really looking forward on the result of this study because its an eye opener to developers generating those applications and solutions which may lead towards service resiliency and better security.",
        "Rellmon P. Ponce de Leon",
        "raremon@gmail.com"
      ],
      [
        "28/04/2021 10:43:10",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Davao city, Philippines",
        "Graduation completed",
        "Software developer",
        "Often",
        "7",
        "View logs",
        "Sometimes",
        "Sometimes",
        "Often",
        "Add paramaters to run the test multiple times.",
        "no",
        "nope",
        "nope",
        "nope",
        "nope",
        "Thanks and good luck",
        "Goper",
        "goper.zosa@gmail.com"
      ],
      [
        "28/04/2021 11:58:57",
        "I agree",
        "More than 10 years",
        "More than 10 years",
        "Germany",
        "Master's degree completed",
        "Software engineer",
        "Sometimes",
        "7",
        "Check for time issues (i.e. mock 'now'), reduce integration tests with unreliable services to a minimum, mark them as unstable",
        "Rarely",
        "Sometimes",
        "Often",
        "Make boundaries to external services clear, easily mockable",
        "-",
        "Unstable tests",
        "No",
        "No",
        "Detect external calls in tests or time dependent logic (suggest injecting a clock component)",
        "",
        "",
        ""
      ],
      [
        "28/04/2021 12:13:06",
        "I agree",
        "2 - 3 years",
        "Up to 1 year",
        "Philippines",
        "Graduation completed",
        "Software developer",
        "Never",
        "5",
        "check the difference between configurations, then compatibility and then difference in environment",
        "Rarely",
        "Sometimes",
        "Rarely",
        "making sure to look for boolean results",
        "havent really",
        "none",
        "none",
        "none in particular",
        "i am not really verbose in testing",
        "I am actually a frontend developer, I have worked with php for just a short period so it might be better to look for respondents who are truly backend",
        "Sanz moses",
        "web@sanzmoses.com"
      ],
      [
        "28/04/2021 13:08:01",
        "I agree",
        "7 - 10 years",
        "2 - 3 years",
        "Bohol, Philippines",
        "Graduation completed",
        "Software engineer",
        "Sometimes",
        "8",
        "I usually look for relevant error messages in the console and in the logs.",
        "Sometimes",
        "Always",
        "Always",
        "I mock the causes of the non-deterministic tests. I also test the cause separately and sometimes manually.",
        "If the code requires an external service, my usual step is to mock that service when writing tests.",
        "No",
        "No",
        "No",
        "Pointing the exact cause of the non-deterministic behavior like if I cannot reach the external service required due to a severed internet connection.",
        "Good luck!",
        "",
        "ejillberth@gmail.com"
      ],
      [
        "28/04/2021 21:04:10",
        "I agree",
        "2 - 3 years",
        "2 - 3 years",
        "Manila, Philippines",
        "Graduation completed",
        "Software engineer",
        "Often",
        "8",
        "Find the difference between my machine and the other persons machine",
        "Sometimes",
        "Always",
        "Often",
        "Have a source of truth, like CI, with the correct configuration. Use virtual machines for reproducibility. Avoid code and tests that produce non-deterministic output, like RNGs, timezone libraries, unmocked classes.",
        "no",
        "race conditions, intermittent failure, false positive",
        "no",
        "no",
        "i dont really use one, mostly its detected by the test runner itself",
        "",
        "Kelly Navarro",
        "gabrnavarro@gmail.com"
      ],
      [
        "28/04/2021 22:43:52",
        "I agree",
        "4 - 6 years",
        "4 - 6 years",
        "Philippines",
        "Graduation completed",
        "Software engineer",
        "Always",
        "10",
        "Check operating system, check network connectivity or whitelisting to external API, check environmental variable",
        "Often",
        "Often",
        "Often",
        "Separate non-deterministic test like creating a new test suite so that it can be executed separately from internal business logic test case",
        "From test creation, separate non-deterministic tests externally and group them together according to their purpose. Grouping together tests dependent on operating system, tests dependent on connectivity, or tests dependent on other microservices. If it is okay to bypass the dependency and we will only require the target data/response, it could be replaced by mock testing.",
        "Dependency testing as I could say, as it depends on multiple variables in order for it be success.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "I am not sure if there's any tool as of now to determine or to detect it. As it is really unpredictable.",
        "If there's a tool, maybe it will detect first the connectivity of the non-deterministic tests and then catch its error to notify the executor of the test. Or it can save such scenario on time of creation like the response of the third party API and store it into a folder so that it can be used as referenced for future non-deterministic tests.",
        "The purpose of this study is good to the point that it can increase the developer/tester experience in tackling non-deterministic tests.",
        "Arvin Reynoso",
        "reynosoarvin@gmail.com"
      ],
      [
        "29/04/2021 02:04:20",
        "I agree",
        "4 - 6 years",
        "Up to 1 year",
        "Bacolod City",
        "Graduation completed",
        "Software developer",
        "Always",
        "6",
        "list down your apps machine what you install and install to other machine or use docker..",
        "Sometimes",
        "Always",
        "Always",
        "set workflow of your code structure, be strict on data types and always restart or hard refresh",
        "yes because you should take down list of the error with solution",
        "yes I'm strict when it comes to variables",
        "no",
        "no",
        "none",
        "Such a nice survey.. so interesting",
        "edrian jan solatorio",
        "edrianjansolatorio@gmail.com"
      ],
      [
        "29/04/2021 04:01:19",
        "I agree",
        "More than 10 years",
        "4 - 6 years",
        "Frankfurt/Germany",
        "vocational technical diploma",
        "Software developer",
        "Rarely",
        "3",
        "Analyze the error message, in most cases there are differences in the conditions between developer-machine and another",
        "Rarely",
        "Rarely",
        "Rarely",
        "avoid depending on 3rd party services mostly, if not possible, catch possible issues and output accordingly",
        "no",
        "external service/data dependent",
        "no",
        "no",
        "analyze what parts of the code are refering to external services",
        "",
        "Michael",
        "d00p@froxlor.org"
      ],
      [
        "29/04/2021 07:41:15",
        "I agree",
        "More than 10 years",
        "7 - 10 years",
        "Berlin, Germany",
        "Master's degree completed",
        "Software engineer",
        "Often",
        "7",
        "It depends on the kind of test. Browser tests (written in PHP or any other language) for example are often non-deterministic and require timeouts to be configured for the completion of certain interactions. In such cases the test may fail because the execution time exceeds the default timeout specified for the test and needs to be increased.  In other cases the test may require the software to be configured in a way that cannot be done within the test setup. Investigating whether the test outcome is influenced e.g. by environment variables would be something that I'd check in such a scenario.",
        "Often",
        "Often",
        "Often",
        "Peer review and running tests as part of automated continuous integration tests.",
        "I don't understand the question.",
        "\"tests with non-deterministic behavior\" is the term I would use. Browser tests and edge to edge tests come to mind as classes of tests that often fall into this category.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "Using test-doubles of services that are known not to be side-effect free, e.g. data base clients or HTTP clients is a method that I have used.",
        "It should cause the affected tests to fail or trigger some sort of warning.",
        "",
        "",
        ""
      ],
      [
        "29/04/2021 21:58:21",
        "I agree",
        "4 - 6 years",
        "2 - 3 years",
        "Remote for US, Belgium and Argentina",
        "Graduation completed",
        "Software engineer",
        "Always",
        "5",
        "I would try to reproduce it and change the test so it works aisolated to the environment",
        "Sometimes",
        "Sometimes",
        "Rarely",
        "I run them in a virtualized environment and so do the rest Of the devs ",
        "No",
        "No",
        "No",
        "No",
        "To cover every possible scenario",
        "Good luck with your study! ",
        "Vicky Jauregui ",
        "jaureguivictoria@gmail.com"
      ]
    ],
    "classifications": [
      "timestamp",
      "terms",
      "groupsInAnswer",
      "groupsInAnswer",
      "cityState",
      "groupsInAnswer",
      "groupsInAnswer",
      "yesOrNot",
      "npsLike",
      "negativeOrList",
      "yesOrNot",
      "yesOrNot",
      "yesOrNot",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "negativeOrList",
      "feedback",
      "groupsInAnswer",
      "groupsInAnswer"
    ],
    "manualSettings": {}
  }
}
